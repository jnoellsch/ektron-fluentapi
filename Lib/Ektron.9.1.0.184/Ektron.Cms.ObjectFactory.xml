<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ektron.Cms.ObjectFactory</name>
    </assembly>
    <members>
        <member name="M:Ektron.Cms.DependencyContainer.Register(System.Type,System.Type)">
            <summary>
            Registers a mapping within the current container for the 
            specified types. If a type mapping already exists for the 
            'from' type, it will be override with the specified mapping.
            </summary>
            <param name="from">Interface or class type key</param>
            <param name="to">Type to map</param>
        </member>
        <member name="M:Ektron.Cms.DependencyContainer.IsRegistered(System.Type)">
            <summary>
            Returns true if the specified type has a corresponding
            mapping registered within the current container, false otherwise.
            </summary>
            <param name="from">Interface or class type key</param>
            <returns>True if the specified type has a mapping, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.DependencyContainer.GetMappedType(System.Type)">
            <summary>
            Returns the type mapped to the specified type within the current 
            container. If no mapping exists, null is returned.
            </summary>
            <param name="fromType">Type key</param>
            <returns>Mapped type</returns>
        </member>
        <member name="T:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator">
            <summary>
            Decorator class that derived classes to use to resolve dependencies
            </summary>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator.#ctor(System.Web.Http.Dependencies.IDependencyResolver)">
            <summary>
            Internal constructor as we won't want people deriving from this class
            </summary>
            <param name="resolver">An instance of a resolver (can wrap Ninject, Unity, etc)</param>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator.BeginScope">
            <summary>
            If the passed in resolver is not null, returns the injected resolver dependency scope
            </summary>
            <returns>
            The dependency scope or null if the injected resolver is null
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator.GetService(System.Type)">
            <summary>
            Retrieves a service from the passed in resolver scope.
            </summary>
            <param name="serviceType">The service to be retrieved.</param>
            <returns>
            The retrieved service or null if the injected resolver is null
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator.GetServices(System.Type)">
            <summary>
            Retrieves a collection of services from the injected resolver scope.
            </summary>
            <param name="serviceType">The collection of services to be retrieved.</param>
            <returns>
            The retrieved collection of services or null if the injected resolver is null.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDepedencyResolverDecorator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ektron.Cms.DependencyResolution.EktronDependencyResolver">
            <summary>
            A decorating class which allows for custom DI/Dependency Resolution frameworks to work alongside Ektron's DI implementation
            Use this class for setting Globalconfiguration.Configuration.DependencyResolver to keep Ektron's DI from breaking while using a custom DI.
            </summary>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDependencyResolver.#ctor(System.Web.Http.Dependencies.IDependencyResolver)">
            <summary>
            Constructor
            </summary>
            <param name="customResolver">Custom DI or Resolution service to be called for service locator</param>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDependencyResolver.BeginScope">
            <summary>
            Starts a resolution scope from provided customResolver, falls back to Ektron implementation if null;
            </summary>
            <returns>
            The dependency scope.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDependencyResolver.GetService(System.Type)">
            <summary>
            Retrieves a service from provided customResolver, falls back to Ektron implementation if null;
            </summary>
            <param name="serviceType">The service to be retrieved.</param>
            <returns>
            The retrieved service.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronDependencyResolver.GetServices(System.Type)">
            <summary>
            Retrieves a collection of services from provided customResolver, falls back to Ektron implementation if null;
            </summary>
            <param name="serviceType">The collection of services to be retrieved.</param>
            <returns>
            The retrieved collection of services.
            </returns>
        </member>
        <member name="T:Ektron.Cms.DependencyResolution.EktronUnityResolver">
            <summary>
            Represents a dependency injection container for the UX layer using unity.
            </summary>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronUnityResolver.#ctor(System.Web.Http.Dependencies.IDependencyResolver,Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.DependencyResolution.EktronUnityResolver"/> class
            using the supplied container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronUnityResolver.BeginScope">
            <summary>
            Starts a resolution scope.
            </summary>
            <returns>
            The dependency scope.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronUnityResolver.GetService(System.Type)">
            <summary>
            Retrieves a service from the scope.
            </summary>
            <param name="serviceType">The service to be retrieved.</param>
            <returns>
            The retrieved service.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronUnityResolver.GetServices(System.Type)">
            <summary>
            Retrieves a collection of services from the scope.
            </summary>
            <param name="serviceType">The collection of services to be retrieved.</param>
            <returns>
            The retrieved collection of services.
            </returns>
        </member>
        <member name="M:Ektron.Cms.DependencyResolution.EktronUnityResolver.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheManager">
            <summary>
            API for managing cache within the CMS.
            NOTE: The cachemanager will prefix aall keys with the key defined in the web.config AppSettings ek_CacheKeyPrefix.
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Add(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.TimeSpan,System.String[])">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The sliding expiration for the cached item</param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.DateTime,System.String[])">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="absoluteExpiration">The absolute expiration for the cached item.</param>
            /// <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="dependency">a System.Web.Caching.CacheDependency to adhere to.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Get(System.String)">
            <summary>
            Gets an item from the cache. If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Get(System.String,System.Boolean)">
            <summary>
            Gets an item from the cache. If the key doesn't exist, null will be returned. 
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <param name="Clone">specify whether to clone the object coming out of the cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Remove(System.String)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">key of the item to remove from cache.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Clear">
            <summary>
            Clears all items from the cache.
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.CacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String[],System.String[])">
            <summary>
            Caches a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to cache.</typeparam>
            <param name="list">List of items to cache.</param>
            <param name="listKey">Key for the entire list of items.</param>
            <param name="itemKeyPrefix">Key prefix for individual items.  Item.Id will be appended.  KeyPrefix should be cosistent for all items of this type to allow sharing.</param>
            <param name="requiredSegmentKeys"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.CacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.TimeSpan,System.String[],System.String[])">
            <summary>
            Caches a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to cache.</typeparam>
            <param name="list">List of items to cache.</param>
            <param name="listKey">Key for the entire list of items.</param>
            <param name="itemKeyPrefix">Key prefix for individual items.  Item.Id will be appended.  KeyPrefix should be cosistent for all items of this type to allow sharing.</param>
            <param name="slidingExpiration">The amount of time the items should be cached for.</param>
            <param name="requiredSegmentKeys"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.GetCachedList``1(System.String,System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <param name="itemKeyPrefix">Indovidual item keyPrefix.  Used for retreiving individual list items.</param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.GetCachedList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <param name="itemKeyPrefix">Indovidual item keyPrefix.  Used for retreiving individual list items.</param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Invalidate(System.String)">
            <summary>
            Invalidates the current item with the supplied key.
            </summary>
            <param name="key">key of item to invalidate.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.InternalPut(System.String,System.Object,System.Nullable{System.TimeSpan},System.String[])">
            <summary>
            Internal helper for putting items in cache.  Checks for null SlidingExpiration and beahves accordingly.
            </summary>
            <param name="key"></param>
            <param name="item"></param>
            <param name="slidingExpiration"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.InternalCacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Nullable{System.TimeSpan},System.String[],System.String[])">
            <summary>
            Internal helper for for Caching a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            Checks for null SlidingExpiration and beahves accordingly.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheManager.Count">
            <summary>
            Gets the number of items currently in the cache.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheManager.Item(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheKeys.KeyPrefix">
            <summary>
            Returns the KeyPrefix to be used when caching values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Add(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.DateTime)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="absoluteExpiration">The time at which the item should be removed from the cache.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="dependency">a System.Web.Caching.CacheDependency to adhere to.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Get(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Remove(System.String)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">key of the item to remove from cache.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Clear">
            <summary>
            Clears all items from the cache.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProvider.CacheSeconds">
            <summary>
            Gets or sets the the default amount of time (seconds) to cache an item for.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProvider.Count">
            <summary>
            Gets the number of items currently in the cache.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheService`1">
            <summary>
            Base class for creating Caching Layer service implemntations.
            </summary>
            <typeparam name="T">The interface type that the caching service is implementing. </typeparam>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheItem(System.String,System.Object)">
            <summary>
            Caches the supplied item.  If CacheSeconds is set it will be taken into consideration.
            </summary>
            <param name="key">key of item to cache.</param>
            <param name="item">item to cache.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheList``1(System.Collections.Generic.List{``0},System.String,System.String,System.String[])">
            <summary>
            Caches the supplied list.  If CacheSeconds is set it will be taken into consideration.
            </summary>
            <param name="list">key of item to cache.</param>
            <param name="listKey">key of item to cache.</param>
            <param name="keyPrefix">item to cache.</param>
            <param name="dependencyKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCachedList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCachedGetList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="function"></param>
            <param name="t1Param"></param>
            <param name="t2Param"></param>
            <param name="t3Param"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64)">
            <summary>
            Creates a cache Key for the supplied Id.
            </summary>
            <param name="id">id of item to get cache key for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64,System.Int64)">
            <summary>
            Creates a cache Key for the supplied Ids.
            </summary>
            <param name="id">id of item to get cache key for.</param>
            <param name="secondId">second id of item to get cache key for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64,System.Int32,System.String)">
            <summary>
            Get Cache Key
            </summary>
            <param name="id">id</param>
            <param name="lang">lang</param>
            <param name="info">string</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey``1(Ektron.Cms.Common.Criteria{``0})">
            <summary>
            Creates a cache Key for the supplied criteria.
            </summary>
            <typeparam name="T">Type of Criteria Property</typeparam>
            <param name="criteria">criteria to retreive key for.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.Service">
            <summary>
            Gets the underlying interface implementation to be used when the cache is empty.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheManager">
            <summary>
            Gets an instance of the ICacheManager.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.InPreviewMode">
            <summary> 
            Gets or sets the current Preview Mode.  Returns true if the site is in site preview mode.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.ContentLanguage">
            <summary> 
            Gets or sets the current content language. 
            </summary> 
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheSeconds">
            <summary>
            Gets or sets the number of seconds to cache items for in this interface.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.Item(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheServiceFactory">
            <summary>
            Internal class used by abstract CacheService class for creating instance of the underlying interface that supports the caching Business Object.
            It's only responsibility it to supply the CacheService with the underlying interface implementation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProviderManager.Provider">
            <summary>
            gets teh default Caching provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProviderManager.Providers">
            <summary>
            Gets the list of all configured caching providers.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.CampaignManagement.IManifestManager.PackPage(System.Int64)">
            <summary>
            Package pagebuilder page Id.
            </summary>
            <param name="pageId">long</param>
            <returns>manifest Data</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.CampaignManagement.IManifestManager.PackPage(System.Int64,System.Boolean)">
            <summary>
            Package pagebuilder page Id.
            </summary>
            <param name="pageId">long</param>
            <param name="saveManifestXml">(bool)Save/create manifest xml under landing pages physical folder.</param>
            <returns>manifest Data</returns>
        </member>
        <member name="T:Ektron.Cms.Framework.Search.SearchCriteriaFilter`1">
            <summary>
            Search Criteria filter
            </summary>
            <typeparam name="V">Value Type, System.Type</typeparam>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.SearchPropertyMapper.GetContentProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Framework.Search.SearchCriteria`1.IncludeRelevantResults">
            <summary>
            Specifies whether relevant results should be returned, default = true
            </summary>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetAbsoluteQuicklink(Ektron.Cms.Search.SearchResultData,Ektron.Cms.Common.EkRequestInformation,System.String,System.String)">
            <summary>
            Replaces the relative quicklink URL from search server with an 
            absolute path calculated based on whether or not the current 
            server is staging or production, and on the site id of the 
            result data passed into the rule.
            </summary>
            <param name="result">Search result to use for creating absolute quicklink</param>
            <param name="requestInformation">RequestInformation based on login information</param>
            <param name="stagingDomain">The staging domain of the folder of the search result</param>
            <param name="productionDomain">The production domain of the folder of the search result</param>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetRelativeQuicklink(System.String,System.Int64,Ektron.Cms.Common.EkRequestInformation,System.String,System.String)">
            <summary>
            Returns a relative quicklink after stripping Scheme, Port # and SitePath from absoluteUrl
            </summary>
            <param name="absoluteUrl">An absolute quicklink returned by our search controls/API</param>
            <param name="siteId">The SiteId of search result</param>
            <param name="requestInformation">RequestInformation based on login information</param>
            <param name="stagingDomain">The staging domain of the folder of the search result</param>
            <param name="productionDomain">The production domain of the folder of the search result</param>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.BuildAbsoluteUrl(System.String,System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Builds an absolute URL from the specified inputs.
            </summary>
            <param name="host">URL Host</param>
            <param name="path">Path portion of the URL</param>        
            <returns>Absolute URL</returns>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetHostNameAndSitePath(System.String,System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Builds an URL from the specified hostname, site path and scheme, port # from EkRequestInformation.
            </summary>
            <param name="host">URL Host</param>
            <param name="path">Path portion of the URL</param>        
            <returns>Absolute URL</returns>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.ConvertPort(System.String,System.Int32)">
            <summary>
            Converts the specified port string to a corresponding integer
            value in a format supported by the UriBuilder class.
            </summary>
            <param name="port">Port string to convert</param>
            <param name="defaultPort">Default port value</param>
            <returns>Port value as integer</returns>
        </member>
        <member name="T:Ektron.Cms.Framework.Search.ResultUrlBuilder">
            <summary>
            The ResultUrlBuilder extends UriBuilder to more easily
            prepare URLs for search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Framework.Search.ResultUrlBuilder.RelativePath">
            <summary>
            Gets or sets the full relative URL path (including optional query 
            and/or fragment) of a URI.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.BaseUrl">
            <summary>
            Gets or sets the BaseUrl for Framework Services.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.ServiceFileName">
            <summary>
             Gets or Sets the service file name this service client needs to work with.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Url">
            <summary>
             Gets the Service Url for the current Service Client.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Binding">
            <summary>
            Gets Binding for Service Binding.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Address">
            <summary>
            Gets Endpoint address for service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Services.ServiceHeader.ReadCurrentHeader">
            <summary>
            Returns the current serviceheader if the current request is within a WCF service call.
            Otherwise returns null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.StringExtensions.SafeTrim(System.String)">
            <summary>
            Safely trims a string. Returns String.Empty if null.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.StringExtensions.IsValueNullOrEmpty(System.String)">
            <summary>
            Determines whether [is null or empty] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if [is null or empty] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ektron.Cms.Analytics.BeaconTemplateControl">
            <summary>
            Base class for Tracking Tempalte User Controls
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.BeaconTemplateControl.#ctor">
            <summary>
            Initializes a new instance of the BeaconTemplateControl class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.BeaconTemplateControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BeaconTemplateControl class.
            </summary>
            <param name="useraccount">User Account in string</param>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconTemplateControl.UserAccount">
            <summary>
            User Account in string to be set at the page.LoadControl so the template control do not have to go
            through the dataManager to get the beacon again.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetCalendarICalendarString(System.Int64)">
            <summary>
            gets the feed for the entire calendar, properly wrapped with ical standards.
            </summary>
            <param name="calendarid"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(System.Int64)">
            <summary>
            returns the event details in icalendar format, without the surrounding vcalendar information.
            if the specified event is a variance, returns details for the parent event with all variances.
            </summary>
            <param name="eventid"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(System.Int64,System.Boolean)">
            <summary>
            returns the event details, with optional wrapping of vcalendar information required by the ical format. 
            if the specified event is a variance, returns details for the parent event with all variances.
            </summary>
            <param name="eventid"></param>
            <param name="wrap"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            returns the event details in icalendar format, without the surrounding vcalendar information.
            </summary>
            <param name="eventData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData,System.Boolean)">
            <summary>
            returns the event details, with optional wrapping of vcalendar information required by the ical format.
            </summary>
            <param name="eventData">eventdata</param>
            <param name="wrap">wrap</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData,System.Collections.Generic.List{Ektron.Cms.Common.Calendar.WebEventData})">
            <summary>
            returns the icalendar string with any variances specified by the second parameter. this will not wrap the resulting string with required icalendar fields.
            </summary>
            <param name="eventData"></param>
            <param name="variances"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CreateVariance(System.DateTime)">
            <summary>
            Creates a variance event for the current recurring event.
            </summary>
            <param name="occurrenceStartUtc">The event occurance date for which to create a variance.</param>
            <returns>An unsaved WebEvent representing the event variance/</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CreateVariance(System.DateTime,System.DateTime)">
            <summary>
            Creates a variance event for the current recurring event.
            </summary>
            <param name="originalStartUtc">The event occurance date for which to create a variance.</param>
            <param name="newStartUtc">The new occureance start date (UTC).</param>
            <returns>An unsaved WebEvent representing the event variance/</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetOriginalTimeZoneEventStart">
            <summary>
            Returns the recurring EventStart in the originating timezone.  This time should remain consistent for all occurrences.  This method is only applicable
            to reccurring events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetEventStartUtcForOccurrence(System.DateTime)">
            <summary>
            Returns the EventStartUtc for a specific event occurrence.   This method is only applicable
            to reccurring events.
            </summary>
            <param name="occurrenceDate"></param>
            <returns></returns>
            <remarks>
            The EventStartUtc time is based upon the EventStart for originating timezone and may fluctuate.  The
            local EventStart for the originating timezone will always remain consistent.  For example, an 8:00 AM ET is consistent in both standard and 
            daylight time and therefore, the UTC value may change based upon the occurrence date.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetEventStartUtcForOccurrence(Ektron.Cms.Common.Calendar.WebEventData,System.DateTime)">
            <summary>
            Returns the EventStartUtc for event occurrence on the supplied date.   This method is only applicable
            to reccurring events.
            </summary>
            <param name="occurrenceDate"></param>
            <returns></returns>
            <remarks>
            The EventStartUtc time is based upon the EventStart for originating timezone and may fluctuate.  The
            local EventStart for the originating timezone will always remain consistent.  For example, an 8:00 AM ET is consistent in both standard and 
            daylight time and therefore, the UTC value may change based upon the occurrence date.
            
            Exposing this statically so the logic can be used by Recurrencemanagers without creating instance of WebEvent as they only require WebEventData classes.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.Validate">
            <summary>
            Validates the event object and returns a list of errors.
            </summary>
            <returns>List of errors.</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetOriginalTimeZoneEventStart(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Returns the recurring EventStart in the originating timezone.  This time should remain consistent for all occurrences.  This method is only applicable
            to reccurring events.
            </summary>
            <returns></returns>
            <remarks>Exposing this statically so the logic can be used by Recurrencemanagers without creating instance of WebEvent as they only require WebEventData classes.</remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.Clone">
            <summary>
            Returns  aclone of the current WebEventData object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CopyEventData(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Copies EventData from one instance to another.
            </summary>
            <param name="sourceEvent">Source event to copy data from.</param>
            <param name="destinationEvent">Destination event to copy data to.</param>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.OriginalTimeZone">
            <summary>
            gets or sets the original timezone for this event
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CurrentTimeZone">
            <summary>
            Gets or sets the current timezone for the event.  
            </summary>
            <remarks>
            Setting the timezone will alter the value of the EventStart property based upon the new timezone's UTC Bias.  
            The underlying UTC value of this event's eventstart property will not change.  
            However, any new values appplied to eventstart will use the new TimeZone when setting the underlying EventStartUtc value.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.DisplayTitle">
            <summary>
            Gets or sets the Display Title of Event.  This could be different than the base Content.Title if this is  avariant of a recurring event.
            In thatcase the Contnet.Title may be "Event Name (2)" and the DisplayTitle would still be "Event Name".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Description">
            <summary>
            Gets or sets the description of the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Location">
            <summary>
            Gets or sets the location of the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventStartUtc">
            <summary>
            Gets or sets the the Event Start time of the event in UTC time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventStart">
            <summary>
            Gets and sets the event's start time based upon the current timezone.
            </summary>
            <remarks>
            Setting this value will alter EventStartUTC based upon the current timezone's UTC bias.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventEndUtc">
            <summary>
            Gets or sets the the Event End time of the event in UTC time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventEnd">
            <summary>
            Gets and sets the event's end time based upon the current timezone.
            </summary>
            <remarks>
            Setting this value will alter EventEndUTC based upon the current timezone's UTC bias.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.UtcOffset">
            <summary>
            Gets the UtcOffset of the current timezone.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Duration">
            <summary>
            Gets or sets the current duration of the event.  Changing this will affect the EventEnd time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Recurrence">
            <summary>
            Gets or sets the current recurrence pattern for the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsAllDay">
            <summary>
            Gets or sets the IsAllDay flag of the event.  A true value means the event is  an all day event with no actual start\end.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsVariance">
            <summary>
            Gets or sets the IsVariance flag for the event.  A true value means this event is a variance of an occurrence of a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsCancelled">
            <summary>
            Gets or sets the IsVariance flag for the event.  A true value means that this event is a cancelled occurrence of  a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.OriginalStartUtc">
            <summary>
            Gets or sets the OriginalStartUtc time.  The orginal OriginalStartUtc is the UTC time of the orginal occurence of  a recurring event.  
            </summary>
            <remarks>
            It is used to calculate TimeZone adjusted times of event occurences.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.ParentEventId">
            <summary>
            Gets or sets the recurrenceId of the the Event.  The RecurrenceId is the EventId of the original recurring event.  
            </summary>
            <remarks>
            This value is needed to tie event variances back to the original recurring event.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsRecurring">
            <summary>
            Gets a boolean value indicationg if the current event is a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CurrentEditor">
            <summary>
            Filled with the current editor if there is one.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CanEdit">
            <summary>
            indicates whether the current user has permission to edit the event. Only filled when loaded from GetWebEventList
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CanDelete">
            <summary>
            indicates whether the current user has permission to delete the event. Only filled when loaded from GetWebEventList
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.Calendar.WebEventVarianceDictionary">
            <summary>
            Specialized Dictionary class for organizing event variances.  Key is the recurring event Id.
            Value is  collection of WebEvents that are variances associated with the original recurring event.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider">
            <summary>
            Base Provider for creating SubscriptionTypes in Cms400.Net eCommerce.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessSubscription(System.Int64,System.String,System.String)">
            <summary>
            Processes a new subscription.  This is called when new subscriptions are purchased.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
            <param name="transactionId">Id of transaction for this specific payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessSubscriptionPayment(System.Int64,System.String,System.String)">
            <summary>
            Processes a subscription Payment.  This is called when a new payment is processed
            for an existing subscription.  If no changes need to be made on a subscription payment, the method does not need to be implemented.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
            <param name="transactionId">Id of transaction for this specific payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.CancelSubscription(System.Int64,System.String)">
            <summary>
            Processes a cancelled subscription.  This is called when a subscription is cancelled for any reason.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessPaymentError(System.Int64,System.String)">
            <summary>
            Process a payment error for a subscription.  This is called when an error occurs for  any payment associated with subscription.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.GetItemSubscriptionInfo(System.Int64,System.Int64)">
            <summary>
            Returns an object representing the subscription product's information.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.SaveSubscriptionInfo(System.Int64,System.Int64,System.Object,System.Data.IDbTransaction)">
            <summary>
            Persists the subscription information when a product is saved.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="subscriptionInfo">Object representing the subscription information</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.DeleteSubscriptionInfo(System.Int64,System.Int64,System.Data.IDbTransaction)">
            <summary>
            Deletes the subscription information when a product is deleted.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ValidateSubscriptionInfo(System.Int64,System.Int64,System.Object,System.Data.IDbTransaction)">
            <summary>
            Validates the subscription information for a product. If false, the system will throw an exception when attempting to save.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="subscriptionInfo">Object representing the subscription information</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.IsSubscribed(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns whether the user is already subscribed.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="userId">Long value for the user id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.CanReSubscribe(System.Int64,System.Int64)">
            <summary>
            Returns whether users can resubscribe to the entry.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.RequestInformation">
            <summary>
            Gets requestInformation.  By default, gets current RequestInformation.  Can also be set with overriden RequestInformation
            if needed.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CannotCreateVarianceFromNonRecurrence">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a non-recurring event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CannotCreateVarianceFromVariance">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a variance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_IdRequired">
            <summary>
              Looks up a localized string similar to A valid non negative value is required for Country Id..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_LongIso3Chars">
            <summary>
              Looks up a localized string similar to The Long Iso Code property must be 3 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_NameRequired">
            <summary>
              Looks up a localized string similar to The Name property is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_ShortIso2Chars">
            <summary>
              Looks up a localized string similar to The Short Iso Code property must be 2 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CountryDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CountryDelete_RegionExist">
            <summary>
              Looks up a localized string similar to Regions exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Coupon_CodeRequired">
            <summary>
              Looks up a localized string similar to A Coupon code is required for saving..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Coupon_DiscountRequired">
            <summary>
              Looks up a localized string similar to A Discount greater than 0 is required for  a coupon..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_CurrencyIdRequired">
            <summary>
              Looks up a localized string similar to CurrencyId is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_ListPriceRequired">
            <summary>
              Looks up a localized string similar to ListPrice is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_SingleTierRequired">
            <summary>
              Looks up a localized string similar to The TierPrice for the quantity of 1 is required for CurrencyPricing..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidDate">
            <summary>
              Looks up a localized string similar to Invalid value supplied for date.  Must be between 1 and 31 or be = -1..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidDayOfMonth">
            <summary>
              Looks up a localized string similar to Invalid value supplied for dayOfMonth.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidMonthOfYear">
            <summary>
              Looks up a localized string similar to monthOfYear must be between 1 and 12..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_MultipleLessThanZero">
            <summary>
              Looks up a localized string similar to recurrenceMultiple cannot be less than 0..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_BaseCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Base Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_EffectiveDateRequired">
            <summary>
              Looks up a localized string similar to The Effective date is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_ExchangeCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Exchange Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_RateRequired">
            <summary>
              Looks up a localized string similar to The Rate is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.InvalidOccurrenceStartUtc">
            <summary>
              Looks up a localized string similar to The supplied OccurrenceStartUtc is not a valid start time for this event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.PasswordHistory_HashRequired">
            <summary>
              Looks up a localized string similar to A password hash is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.PasswordHistory_UserIdRequired">
            <summary>
              Looks up a localized string similar to A user id is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_CodeRequired">
            <summary>
              Looks up a localized string similar to The Region code is required and must be two characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_CountryId">
            <summary>
              Looks up a localized string similar to The Region&apos;s Country Id is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_NameRequired">
            <summary>
              Looks up a localized string similar to The Region Name is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.RegionDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this Region.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.TierPricing_PriceCannotBenegative">
            <summary>
              Looks up a localized string similar to The SalePrice cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.TierPricing_QuantityNegative">
            <summary>
              Looks up a localized string similar to The Quantity cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebCalendar_InvalidFolderType">
            <summary>
              Looks up a localized string similar to The WebCalendar must have a FolderType of EkEnumeration.FolderType.Calendar..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebCalendar_NameRequired">
            <summary>
              Looks up a localized string similar to The WebCalendar requires a name..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_InvalidOccurrenceDate">
            <summary>
              Looks up a localized string similar to The OccurrenceStart supplied is invalid for the event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_ReccurrenceEndLessThanStart">
            <summary>
              Looks up a localized string similar to The Event Recurrence End date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_RecurrenceStartMustEqualEventStart">
            <summary>
              Looks up a localized string similar to Recurrence Start and Event Start must be equal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_RecurringMethodException">
            <summary>
              Looks up a localized string similar to This method is only applicable to recurring events..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_StartGreaterThanEnd">
            <summary>
              Looks up a localized string similar to start date is greater than end date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_StartLessThanEnd">
            <summary>
              Looks up a localized string similar to The EventEnd date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.Cache.RequestCache`1">
            <summary>
            This class provides a mechanism to store objects for the lifetime 
            of a single request.
            
            Methods are static and generic, so no instance variable is required 
            and the desired object type is used without the need for type casting.
            
            Note that the cache entry Id is of type System.Uri, which may be 
            constructed inline with the method call.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Insert(System.String,`0)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Insert(System.String,System.String,`0)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
            <param name="item">
            The object, of type T, to add to the cache.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Invalidate(System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Invalidate(System.String,System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Get(System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Get(System.String,System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="T:Ektron.Cms.Common.Cache.CacheHelper">
            <summary>
            This class provides access to Ektron global Cache keys
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object,System.String)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
             This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
            <param name="dependency">
            Dependency relationship between an item stored in an ASP.NET application's Cache object and a file, of type string
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object,System.Double)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
            <param name="seconds">
            The time at which the inserted object expires and is removed from the cache,of type double
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Invalidate(System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Get``1(System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="P:Ektron.Cms.Context.Cache">
            <summary>
            Returns instance of ICachManager.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Country.#ctor(System.String,System.String)">
             Creates a new Country.
            
             @param code the country code.
             @param name the country name.
        </member>
        <member name="M:Ektron.Cms.Country.getCode">
             Returns the ISO two-letter country code of this country.
            
             @return the country code.
        </member>
        <member name="M:Ektron.Cms.Country.getName">
             Returns the name of this country.
            
             @return the country name.
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.#ctor(System.String)">
            Creates a new DatabaseInfo object given the database info String.
            @param info
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.isPremium">
             Returns true if the database is the premium version.
            
             @return true if the premium version of the database.
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.getDate">
             Returns the date of the database.
            
             @return the date of the database.
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MessageTemplateData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SubscriberMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.WebEventMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.BlogCommentMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.ContentMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.CommunityGroupMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DiscussionTopicReplyMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DiscussionTopicMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DirectObjectUserMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MessageBoardMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MicroMessageMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SubjectUserMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SystemMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.IPageModel">
            <summary>
            Summary description for IWidgetModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.SerializableDictionary`2">
            <summary>
            SerializableDictionary by Paul Welter
            http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Ektron.Cms.Widget.GlobalWidgetData">
            <summary>
            the Pagebuilder system will automatically populate any properties in your widget at Page_Init if they are decorated with this attribute. Save the settings again by calling SaveSettings() within your widget.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.WidgetDataMember">
            <summary>
            the Pagebuilder system will automatically populate any properties in your widget at Page_Init if they are decorated with this attribute. Save the settings again by calling SaveSettings() within your widget.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.Searchable">
            <summary>
            The Pagebuilder system will make your widget searchable if they are decorated with this attribute.
            Do *NOT* use this for widgets that have data that changes constantly (e.g., twitter/stock feeds)!
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidget">
            <summary>
            Summary description for IWidget
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetListContainerModel">
            <summary>
            Summary description for IWidgetContainerModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetListModel">
            <summary>
            Summary description for IWidgetListModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetModel">
            <summary>
            Summary description for IWidgetModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetSettingsModel">
            <summary>
            Summary description for IWidgetSettingsModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetTypeModel">
            <summary>
            Summary description for IWidgetTypeModel
            </summary>
        </member>
        <member name="F:Ektron.Cms.Widget.GlobalPropertyAttributes.Normal">
            <summary>
            Normal is used in the absence of another option
            </summary>
        </member>
        <member name="F:Ektron.Cms.Widget.GlobalPropertyAttributes.PasswordField">
            <summary>
            PasswordField can only be specified when the property in question is a String. It will display the field as asterisks on the global widget data edit screen.
            </summary>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.ObjectData">
            <summary>
            Contains information necessary to identify the location of a CMS object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.PageBuilder.ObjectData.#ctor">
            <summary>
            Constructs an empty object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectId">
            <summary>
            Gets or sets the object identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectLanguage">
            <summary>
            Gets or sets the object language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.PageId">
            <summary>
            Page identifier
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.PageLanguage">
            <summary>
            Gets or sets the page language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectId">
            <summary>
            Gets or sets the object to which the page is associated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectLanguage">
            <summary>
            Gets or sets the object language.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.AdministratorPermission">
            <summary>
            The AdministratorPermission class serves as a token identifying that a
            search query is intended to be executed as an administrator user.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Permission">
            <summary>
            The Permission class is an abstract base class describing CMS persmission
            data that can be applied to a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateCurrentUserPermission">
            <summary>
            Creates a new Permission instance representing the current CMS user.        
            </summary>
            <returns>New Permission instance representing the currently logged in user</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateManualUserPermission(System.Int64)">
            <summary>
            Creates a new Permission instance representing the specified CMS user.
            </summary>
            <returns>New Permission instance representing the specified CMS user</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateAdministratorPermission">
            <summary>
            Creates a new permission instance representing a CMS administrator.
            </summary>
            <returns>New Permission instance representing a CMS administrator</returns>
        </member>
        <member name="M:Ektron.Cms.Search.AdministratorPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="T:Ektron.Cms.Search.AdvancedSearchCriteria">
            <summary>
            The AdvancedSearchCriteria class describes a narrow search query primarily
            defined by a logical expression tree. This critiera is intended narrower,
            targeted, querying.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCriteria">
            <summary>
            The SearchCriteria class serves as a base for criteria
            defining a particular search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Permission">
            <summary>
            Gets and sets the permissions with which to search
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.OrderBy">
            <summary>
            Gets and sets the list of result ordering rules
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.PagingInfo">
            <summary>
            Gets and sets the paging information
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.ReturnProperties">
            <summary>
            Gets and sets the list of columns to return in the results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether or not stemming
            is enabled for the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Scope">
            <summary>
            Gets and sets the scope information
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.IncludeSuggestedResults">
            <summary>
            Gets and sets a flag indicating whether or not to retrieve
            suggested results in addition to the relevent search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Similarity">
            <summary>
            Gets or sets the criteria used to refine the query to
            items that are most similar to a particular item. Note: 
            Similarity search functionality is not supported by all
            search providers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Refinement">
            <summary>
            Gets or sets the criteria used to indicate how refinements 
            should be applied to the query. Note: Query refinement is
            not supported by all search providers and may require
            some additional manual configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.ExpressionTree">
            <summary>
            Gets and sets the logical expression tree for filtering results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Locale">
            <summary>
            Gets and sets the query engine's target locale.
            </summary>
            <remarks>
            This does not represent a property restriction within your query.
            It is a hint to the query engine processing the request allowing
            it to tune its relevence algorithms accordingly.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.AdvancedSearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedValue`1">
            <summary>
            The BoundedValue class is a data structure representing a range
            of refinement values.
            </summary>
            <typeparam name="U">Data type of values</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedValue`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="upperBound">Upper bound of the range</param>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedValue`1.#ctor(`0,`0)">
            <summary>
            Constructor
            </summary>
            <param name="upperBound">Upper bound of the range</param>
            <param name="lowerBound">Lower bound of the range</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedValue`1.UpperBound">
            <summary>
            Gets or sets the upper bound of the value range.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedValue`1.LowerBound">
            <summary>
            Gets or sets the lower bound of the value range.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CrawlFilter">
            <summary>
            The CrawlFilter class describes a set of inclusions defining what
            categories of CMS data will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeHtmlContent">
            <summary>
            Gets or sets a flag indicating whether or not HTML
            content CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeDocuments">
            <summary>
            Gets or sets a flag indicating whether or not document 
            CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeForums">
            <summary>
            Gets or sets a flag indicating whether or not forum 
            CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeProducts">
            <summary>
            Gets or sets a flag indicating whether or not product
            content CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeCommunityMembers">
            <summary>
            Gets or sets a flag indicating whether or not community member
            (users, groups) CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeCommunityContent">
            <summary>
            Gets or sets a flag indicating whether or not community
            content (workspaces, photos, etc.) CRUD operations will 
            trigger the indexing process.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CurrentUserPermission">
            <summary>
            The CurrentUserPermission class serves as a token identifying that a
            search query is intended to be executed as the user that has triggered
            the action to issue it.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CurrentUserPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="T:Ektron.Cms.Search.DocumentVector">
            <summary>
            The DocumentVector class encapsulates a data set that can be used
            to compare indexed documents and identify similarities.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="data">Document vector data</param>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.ToString">
            <summary>
            Gets the string representation of this DocumentVector.
            </summary>
            <returns>DocumentVector string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.DocumentVector.Data">
            <summary>
            Gets or sets the document vector data. The format of this
            data is dependent on your particular search provider.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.AllNoiseException">
            <summary>
            The AllNoiseException occurs when a query submitted for search
            consists entirely of noise words.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchException">
            <summary>
            The SearchException indicates that an error has occurred while
            performing a search-related activity.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchException.Details">
            <summary>
            Gets or sets any additional details associate with this exception.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.DuplicateSuggestedResultException">
            <summary>
            A DuplicateSuggestedResultException occurs when an attempt is made to save a 
            suggested result that already exists in the system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Ektron.Cms.Search.DuplicateSuggestedResultException.Duplicates">
            <summary>
            Gets or sets a dictionary of duplicate terms (mapped to the primary
            phrase with which they are associated).
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DuplicateSynonymException">
            <summary>
            A DuplicateSynonymException occurs when an attempt is made to save a 
            synonym that already exists in the system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.EmptyQueryException">
            <summary>
            The EmptyQueryException is thrown when criteria submitted for search
            contains an empty query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.EmptyReturnPropertiesException">
            <summary>
            The EmptyReturnPropertiesException occurs when a query criteria is submitted
            with an empty collection of return properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidOrderByException">
            <summary>
            The InvalidOrderByException occurs when the OrderBy criteria is applied
            in a manner that is not supported by the search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidPropertyException">
            <summary>
            The InvalidPropertyException occurs when a property referenced in the
            query does not exist in the system or is used in a manner which is not
            supported.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidScopeException">
            <summary>
            The InvalidScopeException occurs when the scope specified in the
            query criteria is invalid or does not exist.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.MalformedExpressionException">
            <summary>
            The MalformedExpressionException is raised when an invalid
            expression is utilized in a query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.Exception,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="details">Expression query text</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.Exceptions.InvalidResultFieldException">
            <summary>
            The InvalidResultFieldException class describes an error that occurs
            while interacting with result fields or their values in a manner which
            is not supported.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.NoResultsException">
            <summary>
            The NoResultsException occurs when a query yields no results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SearchAuthorizationException">
            <summary>
            The SearchAuthorizationExpcetion occurs when authentication with
            the search system fails.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SettingsNotFoundException">
            <summary>
            The SettingsNotFoundException occurs when settings are requested
            for a site that has not been configured for search.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SettingsNotUpdatedException">
            <summary>
            The SettingsNotUpdatedException occurs when an attempt to update
            a site's search settings fails.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSetNotSavedException">
            <summary>
            The SynonymSetNotSavedException indicates that the creation or update
            of a particular synonym set has failed.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.AndExpression">
             <summary>
             Defines an expression representing an "and" operator
             </summary>
            
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BinaryExpression">
            <summary>
            Defines an expression representing a binary operator
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.Expression">
            <summary>
            Abstract class defining the base logical search expression
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_BitwiseOr(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression for the specified left and right expressions.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_BitwiseAnd(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression for the specified left and right expressions.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_LogicalNot(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an expression negating the specified expression.
            </summary>
            <param name="expression">Expression to negate</param>
            <returns>NOT expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Or(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression of this expression and the specified right expression.
            </summary>        
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.And(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression of this expression and the specified right expression.
            </summary>        
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Or(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Expressions.Expression})">
            <summary>
            Returns a list of terms ORed together.
            </summary>        
            <param name="terms">Terms to OR</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.And(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Expressions.Expression})">
            <summary>
            Returns a list of terms ANDed together.
            </summary>        
            <param name="terms">Terms to AND</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BinaryExpression.ValidateComparisonExpression(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Validates a comparison expression in which the 'left' expression must be
            of type PropertyExpression and the 'right' expression must be of type
            ValueExpression.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.BinaryExpression.Left">
            <summary>
            Gets the left branch of the binary expression tree
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.BinaryExpression.Right">
            <summary>
            Gets the right branch of the binary expression tree
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to process the current expression
            </summary>
            <param name="visitor">Visitor to process current expression</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a boolean index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.PropertyExpression">
            <summary>
            The PropertyExpression class serves as a base for expressions
            identifying a specific searchable property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringProperty(System.String)">
            <summary>
            Creates a StringPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>StringPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a StringPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>StringPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerProperty(System.String)">
            <summary>
            Creates a IntegerPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>IntegerPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a IntegerPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>IntegerPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalProperty(System.String)">
            <summary>
            Creates a DecimalPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>DecimalPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DecimalPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DecimalPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanProperty(System.String)">
            <summary>
            Creates a BooleanPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>BooleanPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a BooleanPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>BooleanPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateProperty(System.String)">
            <summary>
            Creates a DatePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>DatePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DatePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DatePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty">
            <summary>
            Creates a RankPropertyExpression for the default rank field.
            </summary>        
            <returns>RankPropertyExpression for the default rank field.</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty(System.String)">
            <summary>
            Creates a RankProperty expression for the default rank field with the specified rank ID.
            </summary>        
            <param name="rankID">Rank profile ID</param>
            <returns>RankPropertyExpression for the specified rank field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty(System.String,System.String)">
            <summary>
            Creates a RankProperty expression for the specified rank field and rank ID.
            </summary>
            <param name="name">Property name</param>
            <param name="rankID">Rank profile ID</param>
            <returns>RankPropertyExpression for the specified rank field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a BooleanMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>BooleanMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DateMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DateMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DecimalMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DecimalMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a IntegerMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>IntegerMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a StringMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>StringMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.And(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression of this expression and the specified right expression.
            (Note: The AND expression is not support for expressions of type PropertyExpression.)
            </summary>        
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.Or(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression of this expression and the specified right expression.
            (Note: The OR expression is not support for expressions of type PropertyExpression.)
            </summary>        
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.IsNull">
            <summary>
            Creates an 'IsNull' expression.
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNotNull' expression.
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.ToString">
            <summary>
            Gets the string representation of this PropertyExpression instance.
            </summary>
            <returns>String representation of this PropertyExpression instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.Equals(System.Object)">
            <summary>
            Returns true if this PropertyExpression instance is equal to 
            the specified one.
            </summary>
            <param name="obj">PropertyExpression to compare</param>
            <returns>True if the specified instance is equal to this one, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.GetHashCode">
            <summary>
            Gets the hash code for this PropertyExpression instance.
            </summary>
            <returns>Hash code for this PropertyExpression instace</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.OnDeserializingMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            http://msdn.microsoft.com/en-us/library/system.runtime.serialization.ondeserializingattribute.aspx
            This method allows us to initialize or provide default values for member fields that are not data members 
            but required during WCF de-serialization of this object.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.Name">
            <summary>
            Gets the internal, schema-specific, property name.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.Category">
            <summary>
            Gets or sets the CMS category by which this property is classified.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.ValueType">
            <summary>
            Gets or sets the data type of the values that may
            be associated with this property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.Contains(System.Boolean)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="value">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanPropertyExpression">
            <summary>
            Defines an expression representing a boolean index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.EqualTo(System.Boolean)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.NotEqualTo(System.Boolean)">
            <summary>
            Constructs an NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to process the current expression
            </summary>
            <param name="visitor">Visitor to process current expression</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanValueExpression">
            <summary>
            Defines an expression representing a boolean value
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ValueExpression`1">
            <summary>
            The ValueExpression is an abstract base class defining an
            expression representing a value of a specific type.
            </summary>
            <typeparam name="T">Value data type</typeparam>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ValueExpression`1.Value">
            <summary>
            Gets or sets the value of this expression.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.WordForms">
            <summary>
            The WordForms enum describes the various alternative
            word forms that can be considered when evaluating
            a search phrase.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Exact">
            <summary>
            Exact phrase
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Inflections">
            <summary>
            Inflective forms
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Synonyms">
            <summary>
            Synonymous forms
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ContainsExpression">
            <summary>
            Defines an expression representing a "contains" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Search phrase</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>        
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,Ektron.Cms.Search.Expressions.StringValueExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>        
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>
            <param name="forms">Indicates alternative word forms to consider</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Search phrase</param>
            <param name="forms">Indicates alternative word forms to consider</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Value expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Value expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Phrase">
            <summary>
            Gets or sets the search phrase for this expression.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Property">
            <summary>
            Gets the property to evaluate.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Forms">
            <summary>
            Gets or sets which alternative word forms should also be
            considered when searching for the specified phrase.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a date index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.Contains(System.DateTime)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DatePropertyExpression">
            <summary>
            Defines an expression representing a date index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.EqualTo(System.DateTime)">
            <summary>
            Constructs an EqualToExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.NotEqualTo(System.DateTime)">
            <summary>
            Constructs an NotEqualToExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.GreaterThan(System.DateTime)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.GreaterThanOrEqualTo(System.DateTime)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.LessThan(System.DateTime)">
            <summary>
            Constructs an LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.LessThanOrEqualTo(System.DateTime)">
            <summary>
            Constructs an LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DateValueExpression">
            <summary>
            Defines an expression representing a date value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a decimal index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.Contains(System.Double)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalPropertyExpression">
            <summary>
            Defines an expression representing a decimal index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.EqualTo(System.Double)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.NotEqualTo(System.Double)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.GreaterThan(System.Double)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.GreaterThanOrEqualTo(System.Double)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.LessThan(System.Double)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.LessThanOrEqualTo(System.Double)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalValueExpression">
            <summary>
            Defines an expression representing a decimal value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DefaultScopeExpression">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ScopeExpression">
            <summary>
            A ScopeExpression identifies a subset of a search index
            to be queried.    
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringValueExpression">
            <summary>
            Defines an expression representing a string value.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Scope name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.op_Implicit(Ektron.Cms.Search.Expressions.ScopeExpression)~System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression}">
            <summary>
            Implicit conversion of a single ScopeExpression to a list of
            ScopeExpressions.
            </summary>
            <param name="scopeExpression">ScopeExpression to convert</param>
            <returns>List containing the target ScopeExpression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts an expression visitor capable of translating
            this expression into a search query.
            </summary>
            <param name="visitor">Expression visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ScopeExpression.Default">
            <summary>
            Gets a ScopeExpression identifying the default scope
            for the current site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DefaultScopeExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.EqualsExpression">
            <summary>
            Defines an expression representing an "equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.GreaterThanExpression">
            <summary>
            Defines an expression representing a "greater-than" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression">
            <summary>
            Defines an expression representing a "greater-than-or-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a integer index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.Contains(System.Int64)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerPropertyExpression">
            <summary>
            Defines an expression representing a integer index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.EqualTo(System.Int64)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.NotEqualTo(System.Int64)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.GreaterThan(System.Int64)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.GreaterThanOrEqualTo(System.Int64)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.LessThan(System.Int64)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.LessThanOrEqualTo(System.Int64)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerValueExpression">
            <summary>
            Defines an expression representing an integer value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerValueExpression.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IsNotNullExpression">
            <summary>
            Defines an expression representing an "is-not-null" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IsNotNullExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IsNullExpression">
            <summary>
            Defines an expression representing an "is-null" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IsNullExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.KeywordExpression">
            <summary>
            Defines an expression representing a "keyword-search" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor(System.String,Ektron.Cms.Search.KeywordMode)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Keyword text</param>
            <param name="mode">Indicates whether individual terms are implicitly ANDed or ORed</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.String,Ektron.Cms.Search.KeywordMode)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to which this KeywordExpression applies</param>
            <param name="phrase">Keyword text</param>
            <param name="mode">Indicates whether individual terms are implicitly ANDed or ORed</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Phrase">
            <summary>
            Gets or sets the StringValueExpression representing the
            keyword text of this expression.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Mode">
            <summary>
            Gets or sets the mode for this keyword expression, which indicates
            whether individual terms are implicitly ANDed or ORed.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Property">
            <summary>
            Gets the property to which this KeywordExpression applies.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.LessThanExpression">
            <summary>
            Defines an expression representing a "less-than" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression">
            <summary>
            Defines an expression representing a "less-than-or-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.NotEqualsExpression">
            <summary>
            Defines an expression representing a "not-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.NotExpression">
            <summary>
            Defines an expression representing a "not" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotExpression.#ctor(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="expression">Expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.OrExpression">
            <summary>
            Defines an expression representing an "or" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.OrExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.OrExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.PropertyExpressionComparer">
            <summary>
            Equality comparer for Property Expression
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.QuotedStringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.QuotedStringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.RankPropertyExpression">
            <summary>
            Defines an expression representing a rank field in the index.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.RankPropertyExpression.RankID">
            <summary>
            Gets or sets the ID of the ranking profile to be applied.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.RankPropertyExpression.IsDefault">
            <summary>
            Gets or sets a flag indicating whether or not the default
            ranking profile will be applied.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a string index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.Contains(System.String)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringPropertyExpression">
            <summary>
            Defines an expression representing a string index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Contains(System.String)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Contains(System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <param name="wordForms">Indicates alternative word forms to consider</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.EqualTo(System.String)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.NotEqualTo(System.String)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.GreaterThan(System.String)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.GreaterThanOrEqualTo(System.String)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.LessThan(System.String)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.LessThanOrEqualTo(System.String)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.ExpressionVisitor">
            <summary>
            The ExpressionVisitor class is an abstract base class defining 
            objects that visit expression trees.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Visits the specified Expression.
            </summary>
            <param name="expression">Expression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.AndExpression)">
            <summary>
            Visits the specified AndExpression.
            </summary>
            <param name="expression">AndExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.OrExpression)">
            <summary>
            Visits the specified OrExpression.
            </summary>
            <param name="expression">OrExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Visits the specified PropertyExpression.
            </summary>
            <param name="expression">PropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Visits the specified StringPropertyExpression.
            </summary>
            <param name="expression">StringPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Visits the specified IntegerPropertyExpression.
            </summary>
            <param name="expression">IntegerPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Visits the specified DecimalPropertyExpression.
            </summary>
            <param name="expression">DecimalPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Visits the specified BooleanPropertyExpression.
            </summary>
            <param name="expression">BooleanPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Visits the specified DatePropertyExpression.
            </summary>
            <param name="expression">DatePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerValueExpression)">
            <summary>
            Visits the specified IntegerValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;int&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringValueExpression)">
            <summary>
            Visits the specified StringValueExpression.
            </summary>
            <param name="expression">StringValueExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.QuotedStringValueExpression)">
            <summary>
            Visits the specified QuotedStringValueExpression.
            </summary>
            <param name="expression">QuotedStringValueExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalValueExpression)">
            <summary>
            Visits the specified DecimalValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;double&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanValueExpression)">
            <summary>
            Visits the specified BooleanValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;bool&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DateValueExpression)">
            <summary>
            Visits the specified DateValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;DateTime&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.EqualsExpression)">
            <summary>
            Visits the specified EqualsExpression.
            </summary>
            <param name="expression">EqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.NotEqualsExpression)">
            <summary>
            Visits the specified NotEqualsExpression.
            </summary>
            <param name="expression">NotEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.LessThanExpression)">
            <summary>
            Visits the specified LessThanExpression.
            </summary>
            <param name="expression">LessThanExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.GreaterThanExpression)">
            <summary>
            Visits the specified GreaterThanExpression.
            </summary>
            <param name="expression">GreaterThanExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.NotExpression)">
            <summary>
            Visits the specified NotExpression.
            </summary>
            <param name="expression">NotExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression)">
            <summary>
            Visits the specified GreaterThanOrEqualsExpression.
            </summary>
            <param name="expression">GreaterThanOrEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression)">
            <summary>
            Visits the specified LessThanOrEqualsExpression.
            </summary>
            <param name="expression">LessThanOrEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IsNullExpression)">
            <summary>
            Visits the specified IsNullExpression.
            </summary>
            <param name="expression">IsNullExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IsNotNullExpression)">
            <summary>
            Visits the specified IsNotNullExpression.
            </summary>
            <param name="expression">IsNotNullExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.KeywordExpression)">
            <summary>
            Visits the specified KeywordExpression.
            </summary>
            <param name="expression">KeywordExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.ContainsExpression)">
            <summary>
            Visits the specified ContainsExpression.
            </summary>
            <param name="expression">ContainsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.ScopeExpression)">
            <summary>
            Visits the specified ScopeExpression.
            </summary>
            <param name="expression">ScopeExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DefaultScopeExpression)">
            <summary>
            Visits the specified DefaultScopeExpression.
            </summary>
            <param name="expression">DefaultScopeExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Visits the specified BooleanMultiValuePropertyExpression.
            </summary>
            <param name="expression">BooleanMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Visits the specified DateMultiValuePropertyExpression.
            </summary>
            <param name="expression">DateMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Visits the specified DecimalMultiValuePropertyExpression.
            </summary>
            <param name="expression">DecimalMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Visits the specified IntegerMultiValuePropertyExpression.
            </summary>
            <param name="expression">IntegerMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Visits the specified StringMultiValuePropertyExpression.
            </summary>
            <param name="expression">StringMultiValuePropertyExpression to visit</param>
        </member>
        <member name="T:Ektron.Cms.Search.Facets">
            <summary>
            The Facets class is a data structure encapsulating a collection 
            of Facet data for an individual search response.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.#ctor(System.Collections.Generic.ICollection{Ektron.Cms.Search.Facet{Ektron.Cms.Search.Expressions.PropertyExpression}})">
            <summary>
            Constructor
            </summary>
            <param name="facets">Collection of Facet data</param>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.HasFacet(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if this instance contains a facet for
            the property represented by the specified PropertyExpression.
            </summary>
            <param name="property">Target property</param>
            <returns>True if this instance contains a facet for the specified property, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.HasFacet(System.String)">
            <summary>
            Returns true if this instance contains a facet for
            the property represented by the specified property name.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>True if this instance contains a facet for the specified property, false otherwise</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(System.String)">
            <summary>
            Gets a Facet with the specified property name.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Facet associated with the specified property name</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Gets a Facet associated with the specified property.
            </summary>
            <param name="propertyName">Property expression</param>
            <returns>Facet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Gets a StringFacet associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>StringFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Gets a IntegerFacet associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>IntegerFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Gets a DecimalFacet associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>DecimalFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Gets a DateFacet associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>DateFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a StringFacet associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>StringFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a IntegerFacet associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>IntegerFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a DecimalFacet associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>DecimalFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a DateFacet associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>DateFacet associated with the specified property</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultBuilder">
            <summary>
            The ISearchResultBuilder describes a component capable of assembling
            the data representing an individual search result record for a
            particular search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize">
            <summary>
            Initializes this result data builder for use.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize(System.Data.DataRow)">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.HasProperty(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsNull(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsMultiValue(System.String)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsMultiValue(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(System.String,System.Object)">
            <summary>
            Sets a value for the specified property.
            </summary>
            <param name="property">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Sets a value for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Integer (long) value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Decimal value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Date value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Sets a value for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">Collection of string values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="P:Ektron.Cms.Search.ISearchResultBuilder.PropertyCount">
            <summary>
            Gets the count of properties available in this result set.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultData">
            <summary>
            The SearchResultData interface.
            Added to facilitate unit testing for consumers of the search data
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property. If the value
            represents a single-value result, the single-value form will be returned. If the 
            value represents a multi-value result, the multi-value (collection) form will be
            returned.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionSortOrder">
            <summary>
            This enum defines possible sort orders for query completion results with a Solr provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryProposition">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryPropositionManager">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">QuerySuggestionRequest parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionRequest">
            <summary>
            The QuerySuggestionRequest class defines the parameters of a request for 
            the configured search engine to predict query terms based on some partial
            term input.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionRequest.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query suggestions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>        
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionRequest.Query">
            <summary>
            Gets or sets the (partial) query term which the search engine will use
            as a seed for predicting completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionRequest.MaxCount">
            <summary>
            Gets or sets the suggested maximum count of query suggestions for the search engine. 
            Actual counts may vary according to term availability as determined by the search 
            engine's internal algorithms.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionResponse">
            <summary>
            The QuerySuggestionResponse class is a data structure which aggregates
            query completions for a partial search term, as predicted by the
            configured search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionResponse.QuerySuggestions">
            <summary>
            Gets or sets a collection of suggested terms as predicted by
            the configured search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionTerm">
            <summary>
            The QuerySuggestionTerm class is a data structure describing an
            individual, completed, query term as predicted by the configured
            search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionTerm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionTerm.Suggestion">
            <summary>
            Gets or sets the predicted query term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.ContentSourceData">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.ContentSourceData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.ContentSourceData.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.ContentSourceData.Name">
            <summary>
            Gets or sets the name of the content source for the associated CMS site.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.CultureInfo">
            <summary>
            This class represents the language information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.CultureInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.CultureInfo.LanguageId">
            <summary>
            Gets or Sets the site language for the current search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.CultureInfo.Culture">
            <summary>
            Gets or Sets the culture for the site language for the current search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionResponse">
            <summary>
            The QueryCompletionResponse class is a data structure which aggregates
            query completions for a partial search term, as predicted by the
            configured search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionResponse.QueryCompletions">
            <summary>
            Gets or sets a collection of completed terms as predicted by
            the configured search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionTerm">
            <summary>
            The QueryCompletionTerm class is a data structure describing an
            individual, completed, query term as predicted by the configured
            search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionTerm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionTerm.Completion">
            <summary>
            Gets or sets the predicted query term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionRequest">
            <summary>
            The QueryCompletionRequest class defines the parameters of a request for 
            the configured search engine to predict query terms based on some partial
            term input.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>
            <param name="language">Target content language</param>
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>        
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>                
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.Query">
            <summary>
            Gets or sets the (partial) query term which the search engine will use
            as a seed for predicting completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.MaxCount">
            <summary>
            Gets or sets the suggested maximum count of query completions for the search engine. 
            Actual counts may vary according to term availability as determined by the search 
            engine's internal algorithms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.Language">
            <summary>
            Gets or sets the target content language for content feeding potential completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.DictionaryName">
            <summary>
            Gets or sets the name of the target dictionary supplying completed terms. This
            parameter is not supported by all search providers. See the Ektron Developer
            Reference for guidance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.HandlerName">
            <summary>
            Gets or sets the name of the handler supplying completed terms. This
            parameter is not supported by all search providers. See the Ektron Developer
            Reference for guidance.        
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.SortOrder">
            <summary>
            Gets or sets the type of sorting applied to query completion results.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.JsonException">
            <summary>
            This class encapsulates error information (if any) while receiving or deserializing search-related query statistics objects using JSON.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.JsonException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.JsonException.Message">
            <summary>
            Gets or Sets the Message of the exception
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.JsonException.InnerMessage">
            <summary>
            Gets or Sets the InnerMessage of the exception
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.PageInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.CurrentPageIndex">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.PageSize">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.NumberOfPages">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.PageStartOffset">
            <summary>
            Starting Offset of the Page
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.PublishStatisticsException">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.Status">
            <summary>
            Gets or sets the status message of publishing the statistics of a query Url.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.Code">
            <summary>
            Gets or sets the status code of publishing the statistics of a query Url.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchLanguageData">
            <summary>
            This class represents the language information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.LanguageId">
            <summary>
            Gets or Sets the site language for the current search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.QueryCulture">
            <summary>
            Gets or Sets the culture for the site language for the current search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchPageInfo">
            <summary>
            This class encapsulates the paging information of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.ResultCount">
            <summary>
            Gets or Sets the ResultCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.PageCount">
            <summary>
            Gets or Sets the PageCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.CurrentPageIndex">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.ResultsPerPage">
            <summary>
            Gets or Sets the ResultsPerPage of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.EndCount">
            <summary>
            Gets or Sets the EndCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.StartCount">
            <summary>
            Gets or Sets the StartCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.NumberOfPages">
            <summary>
            Gets or Sets the NumberOfPages of a search result set
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchQueryData">
            <summary>
            This class encapsulates the query data of search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchQueryData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.SearchType">
            <summary>
            Gets or Sets the SearchType of a search query, Basic/Advanced/XmlSearch
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.QueryText">
            <summary>
            Gets or Sets the QueryText of a basic search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithoutWords">
            <summary>
            Gets or Sets the WithoutWords of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithAllWords">
            <summary>
            Gets or Sets the WithAllWords of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.ExactPhrase">
            <summary>
            Gets or Sets the ExactPhrase of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithAnyWord">
            <summary>
            Gets or Sets the WithAnyWord of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.SearchPageInfo">
            <summary>
            Gets or Sets the paging information of a search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo">
            <summary>
            This class encapsulates the query data of search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.SearchType">
            <summary>
            Gets or Sets the SearchType of a search query, Basic/Advanced/XmlSearch.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.QueryText">
            <summary>
            Gets or Sets the QueryText of a basic search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithoutWords">
            <summary>
            Gets or Sets the WithoutWords of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithAllWords">
            <summary>
            Gets or Sets the WithAllWords of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.ExactPhrase">
            <summary>
            Gets or Sets the ExactPhrase of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithAnyWord">
            <summary>
            Gets or Sets the WithAnyWord of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.RequestedResultOffset">
            <summary>
            Gets or Sets the RequestedResultOffset for a search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.RequestedResultSetSize">
            <summary>
            Size of the search results that was requested.
            This effectively would've been a multiple of the 
            display page size so as to reduce round trips to the
            search provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.QueryId">
            <summary>
            Gets or Sets the QueryId of the search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.SessionID">
            <summary>
            Gets or Sets the Session Information of the Session under which query was issued.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchResultInfo">
            <summary>
            This class encapsulates the details of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.SuggestedResultCount">
            <summary>
            Gets or Sets the count of the suggested results for the current search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.TotalHits">
            <summary>
            Gets or Sets the Total Number of Results that the Search Resulted in.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.ResultsPageInfo">
            <summary>
            Gets or Sets the ResultsPageInfo information for the current search query.
            /// </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.ResultItemType">
            <summary>
            This class represents the type of search result
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.QueryStatistics.ResultItemType.SearchResult">
            <summary>
            Search Result
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.QueryStatistics.ResultItemType.SuggestedResult">
            <summary>
            Suggested Search Result
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchResultItem">
            <summary>
            This class encapsulates the details of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchResultItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Url">
            <summary>
            Gets or Sets the search result Quicklink
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.RelativeUrl">
            <summary>
            Gets or Sets the search result RelativeQuicklink (QuickLink minus scheme, port #, hostname, and site path to get the actual quicklink in index. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Title">
            <summary>
            Gets or Sets the search result Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Id">
            <summary>
            Gets or Sets the search result Content Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.CultureInfo">
            <summary>
            Gets or Sets the CultureInfo of the search result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.SiteId">
            <summary>
            Gets or Sets the search result Site Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Rank">
            <summary>
            Gets or Sets the search result Rank
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.ResultItemType">
            <summary>
            Gets or Sets the search result item type
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchStatistics">
            <summary>
            This class represents information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchStatistics.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.Action">
            <summary>
            Gets or Sets the action sent by the client side handler for logging search query statistics.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.CultureInfo">
            <summary>
            Gets or Sets the CultureInfo of the the search query issued by the user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.QueryInfo">
            <summary>
            Gets or Sets the SearchQueryData containing information about the search query issued by the user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ResultInfo">
            <summary>
            Gets or Sets the ResultInfo data for a the search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ResultItem">
            <summary>
            Gets or Sets the selected SearchResultItem data for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.UnselectedResultItems">
            <summary>
            Gets or Sets the unselected SearchResultItem data for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.UserWhoSelected">
            <summary>
            Gets or Sets the User information for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ContentSourceData">
            <summary>
            Gets or Sets the content source information for a CMS site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.TimeOfSelection">
            <summary>
            Gets or Sets the time when search result was clicked.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.SelectionSourceUrl">
            <summary>
            Gets or Sets the absolute url at which search result was clicked.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchUserData">
            <summary>
            This class represents the information of a user who clicked on a search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserData.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserData.Id">
            <summary>
            Gets or Sets the Id of a user who clicked on a search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserData.UserName">
            <summary>
            Gets or Sets the UserName of a user who clicked on a search result.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchUserInfo">
            <summary>
            This class represents the information of a user who clicked on a search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.Id">
            <summary>
            Gets or Sets the Id of a user who clicked on a search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.UserName">
            <summary>
            Gets or Sets the UserName of a user who clicked on a search result.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementInfo">
            <summary>
            The RefinementInfo class is a data structure describing 
            individual refinement specifications and restrictions 
            applied to a query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(Ektron.Cms.Search.RefinementSpecification{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Constructor
            </summary>
            <param name="specification">Query refinement specification</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(Ektron.Cms.Search.Refinement)">
            <summary>
            Constructor
            </summary>
            <param name="refinement">Query refinement restriction</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(System.Collections.Generic.List{Ektron.Cms.Search.Refinement})">
            <summary>
            Constructor
            </summary>
            <param name="refinements">Collection of refinement instances for a common refinement property</param>
            <exception cref="T:System.ArgumentNullException">The 'refinements' argument cannot be null.</exception>
            <exception cref="T:System.ArgumentException">The 'refinements' collection cannot be empty and must contain data for the same refinement property.</exception>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Specification">
            <summary>
            Get or sets the query refinement specification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Refinements">
            <summary>
            Gets the query refinement restrictions.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Property">
            <summary>
            Gets or sets the property associated with this refinement information.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.StringFacet">
            <summary>
            The StringFacet class represents a classification of search results
            on a string index field.  
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Facet`1">
            <summary>
            The Facet class represents a classification of search results
            on a specific index field.
            </summary>
            <typeparam name="T">Type of PropertyExpression</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.Facet`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.Facet`1.Property">
            <summary>
            Gets or sets the property associated with this facet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.StringFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DecimalFacet">
            <summary>
            The DecimalFacet class represents a classification of search results
            on a decimal index field.  
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.DecimalFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DateFacet">
            <summary>
            The DateFacet class represents a classification of search results
            on a date/time index field. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DatePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DatePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DateMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DateMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.DateFacet.Buckets">
            <summary>
            Gets or sets the bounded facet buckets representing the DateTime 
            ranges for this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FacetComparer">
            <summary>
            Comparer that determines if two Facets are equal based of the Indexed Property that they represent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FacetBucket">
            <summary>
            The FacetBucket class describes a subset of results classified
            within a given Facet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FacetBucket.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="count">Count of items encompassed by this bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.FacetBucket.Count">
            <summary>
            Gets or sets the count of items encompassed by this bucket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.FacetBucket.Refinement">
            <summary>
            Gets or sets the refinement data identifying this facet. This data
            can be applied to subsequent queries to indicate that the result set
            should be restricted to items classified by this FacetBucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedFacetBucket`1">
            <summary>
            The BoundedFacetBucket class is a data structure describing a 
            facet result that represent a range of values.
            </summary>
            <typeparam name="T">Data type of the values associated with this facet bucket</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedFacetBucket`1.#ctor(Ektron.Cms.Search.BoundedValue{`0},System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Upper and lower bounds</param>
            <param name="count">Number of items encompassed by this facet bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedFacetBucket`1.Value">
            <summary>
            Gets or sets the upper and lower bounds for data encompassed by
            this facet bucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IntegerFacet">
            <summary>
            The IntegerFacet class represents a classification of search results
            on a integer index field.  
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.IntegerFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.UniqueFacetBucket`1">
            <summary>
            The UniqueFacetBucket class describes a facet bucket representing
            a single unique value.
            </summary>
            <typeparam name="T">Type of value</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.UniqueFacetBucket`1.#ctor(`0,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value associated with this facet bucket</param>
            <param name="count">Number of items encompassed by this facet bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.UniqueFacetBucket`1.Value">
            <summary>
            Gets or sets the value associated with this facet bucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IAuthenticationHandler">
            <summary>
            The IAuthenticationHandler interface describes a component capable
            of applying the appropriate permission data to an outgoing search
            query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.Permission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query.
            </summary>
            <param name="permission">Permision data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.ManualUserPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as a specific CMS user.
            </summary>
            <param name="permission">Manual user permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.CurrentUserPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as the current CMS user.
            </summary>
            <param name="permission">Current user permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.AdministratorPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as a CMS administrator.
            </summary>
            <param name="permission">Administrator user permission data</param>
        </member>
        <member name="T:Ektron.Cms.Search.ICrawler">
            <summary>
            The ICrawler interface describes a components capable of 
            managing initiation of indexing activities for relevent 
            CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddContent(Ektron.Cms.ContentData)">
            <summary>
            Signals the crawler to handle an add content event.
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateContent(Ektron.Cms.ContentData)">
            <summary>
            Signals the crawler to handle an update content event.
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteContent(System.Int64)">
            <summary>
            Signals the crawler to handle an delete content event.
            </summary>
            <param name="contentId">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddFolder(Ektron.Cms.FolderData)">
            <summary>
            Signals the crawler to handle an add folder event.
            </summary>
            <param name="folder">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateFolder(Ektron.Cms.FolderData)">
            <summary>
            Signals the crawler to handle an update folder event.
            </summary>
            <param name="folder">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteFolder(System.Int64)">
            <summary>
            Signals the crawler to handle an delete folder event.
            </summary>
            <param name="folderId">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.CopyFolder(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle a copy folder event.
            </summary>
            <param name="sourceFolderId">Folder Id of source folder</param>
            <param name="destinationFolderId">Folder Id of destination folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.MoveFolder(System.Int64)">
            <summary>
            Signals the crawler to handle a move folder event.
            </summary>
            <param name="folderID">Folder Id after move</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Signals the crawler to handle an add metadata event.
            </summary>
            <param name="metaType">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Signals the crawler to handle an update metadata event.
            </summary>
            <param name="metaType">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteProperty(System.Int64)">
            <summary>
            Signals the crawler to handle an delete metadata event.
            </summary>
            <param name="propertyId">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property add event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property update event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteUserProperty(System.Int64)">
            <summary>
            Signals the crawler to handle a user property delete event.
            </summary>
            <param name="id">User property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property add event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property update event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCustomProperty(System.Int64,System.Int32)">
            <summary>
            Signals the crawler to handle a custom property delete event.
            </summary>
            <param name="propertyId">Property ID</param>
            <param name="languageId">Language ID</param>   
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object add event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object update event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCustomPropertyObject(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.CustomPropertyObjectType,System.Int64)">
            <summary>
            Signals the crawler to handle a custom property object delete event.
            </summary>        
            <param name="objectId">CMS object ID</param>
            <param name="languageId">Language ID</param>
            <param name="cmsObjectType">CMS object type</param>
            <param name="propertyId">Custom property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an add user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an update user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteUser(System.Int64)">
            <summary>
            Signals the crawler to handle a delete user event.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an add colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an delete colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an add Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an update Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteGroup(System.Int64)">
            <summary>
            Signals the crawler to handle a delete Group event.
            </summary>
            <param name="GroupId">Group ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an add library item event.
            </summary>
            <param name="libraryData">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an update library item event.
            </summary>
            <param name="libraryData">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteLibraryItem(System.Int64)">
            <summary>
            Signals the crawler to handle a delete library item event.
            </summary>
            <param name="id">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an add taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an update taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteTaxonomyItem(System.Int64)">
            <summary>
            Signals the crawler to handle an delete taxonomy item event.
            </summary>
            <param name="id">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.TagObject(Ektron.Cms.TagAssignmentData)">
            <summary>
            Signals the crawler to handle a tag assignment event.
            </summary>
            <param name="assignmentData">Tag assignment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteObjectTag(System.Int64,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes,System.Int64)">
            <summary>
            Signals the crawler to handle a tag delete event.
            </summary>
            <param name="tagId">Tag ID</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object Type</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an add XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteXmlConfiguration(System.Int64)">
            <summary>
            Signals the crawler to handle an delete XML configuration event.
            </summary>
            <param name="id">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateXmlIndex(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update to XML Index configuration event (saving the index fields on second screen of Smart form creation).
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.PublishCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a publish catalog entry event.
            </summary>
            <param name="id">Catalog entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a delete catalog entry event.
            </summary>
            <param name="id">Catalog entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.PublishWebEvent(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Signals the crawler to handle an publish web event.
            </summary>
            <param name="eventData">Web event data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteWebEvent(System.Int64)">
            <summary>
            Signals the crawler to handle an delete web event.
            </summary>
            <param name="id">Web event id</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddBlogComment(Ektron.Cms.BlogComment)">
            <summary>
            Signals the crawler to handle an add blog comment event.
            </summary>
            <param name="comment">Blog comment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle an add discussion topic event.
            </summary>
            <param name="topic">Discussion topic data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddDiscussionReply(Ektron.Cms.TaskData)">
            <summary>
            Signals the crawler to handle an add discussion reply event.
            </summary>
            <param name="reply">Task data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle an update discussion topic event.
            </summary>
            <param name="topic">Discussion topic data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an add manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an update manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a delete manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DisableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a disable manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.EnableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an enable alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an add auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an update auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a delete auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DisableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a disable auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.EnableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a enable auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteManualAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAutoAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteRegExAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCommunityAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAliasSetting(System.String,System.Object)">
            <summary>
            Signals the crawler to handle a URL aliasing settings update.
            </summary>
            <param name="settingsName">Settings key</param>
            <param name="settingsValue">Settings value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle the addition of a template.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle the update of a template.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteTemplate(System.Int64)">
            <summary>
            Signals the crawler to handle the deletion of a template.
            </summary>
            <param name="id">Template id</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddPermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the addition of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdatePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the update of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeletePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the deletion of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateItemInheritance(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            inheritance setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is inherited?</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdatePrivateSetting(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            privacy setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is private?</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl">
            <summary>
            Requests a full crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests a full crawl from the associated indexing service.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests a full crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="T:Ektron.Cms.Search.IDocumentPromotionManager">
            <summary>
            Manages crawl initiation for relevent CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IDocumentPromotionManager.AddDocumentPromotion(Ektron.Cms.Interfaces.Search.SearchProfiles.SearchProfile)">
            <summary>
            Adds a Document Promotion using information in the SearchProfile object.
            </summary>
            <param name="profile">Document Promotion information contained in the SearchProfile object</param>
        </member>
        <member name="M:Ektron.Cms.Search.IDocumentPromotionManager.AddKeywordDocumentPromotion(System.String,System.String,Ektron.Cms.Interfaces.Search.SearchProfiles.IPromotion)">
            <summary>
            Adds a Document Promotion to the default SearchProfile (created by SearchConfig) using information in the IPromotion object.
            </summary>
            <param name="promotion">Document Promotion information contained in the IPromotion object</param>
        </member>
        <member name="T:Ektron.Cms.Search.IIntegratedSearchMapping">
            <summary>
            The IntegratedSearchMapping interface describes a business object 
            which exposes functionality supporting the creation and management 
            of integrated search mappings.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Add(Ektron.Cms.Search.IntegratedSearchMappingData)">
            <summary>
            Adds the specified integrated search mapping.
            </summary>
            <param name="mapping">Integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Update(Ektron.Cms.Search.IntegratedSearchMappingData)">
            <summary>
            Updates the specified integrated search mapping.
            </summary>
            <param name="mapping">Integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Delete(System.Guid)">
            <summary>
            Deletes the specified integrated search mapping from the database.
            </summary>
            <param name="id">ID of the integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Get(System.Guid)">
            <summary>
            Gets the specified integrated search mapping.
            </summary>
            <param name="id">ID of the integrated search mapping</param>
            <returns>Integrated search mapping</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Get">
            <summary>
            Gets a collection of all integrated search mappings.
            </summary>
            <returns>Collection of all integrated search mappings</returns>
        </member>
        <member name="T:Ektron.Cms.Search.IntegratedSearchMappingProperty">
            <summary>
            Enumeration of properties in Search settings.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IntegratedSearchMappingData">
            <summary>
            The IntegratedSearchMappingData class is a data structure
            representing a relationship between a virtual directory
            hosted under the CMS site root and a corresponding indexed
            file share.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.Id">
            <summary>
            Gets or sets the mapping ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.StartAddress">
            <summary>
            Gets or sets the start address associated with the mapping.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.VirtualDirectory">
            <summary>
            Gets or sets the virtual directory associated with the mapping.
            </summary>
            <remarks>
            The virtual directory is relative to the site root.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Search.Query.IParser">
            <summary>
            Interface for converting a token list into a grammar parse tree.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.IParser.Parse(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Query.Token})">
            <summary>
            Converts a list of tokens into a parse tree.
            </summary>
            <remarks>
            Tokens can be generated from a string through the ITokenizer 
            interface. 
            
            The ParseTree object can be converted into an ExpressionTree through 
            implementations of the ITranslator interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.ITokenizer"/>
            <seealso cref="T:Ektron.Cms.Search.Query.ITranslator"/>
            <param name="tokens">Enumerable token list</param>
            <returns>A grammar parse tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.IPropertyNameResolver">
            <summary>
            The IPropertyNameResolver interface describes a component capable of
            tranforming an internal CMS property name to the name of the corresponding
            index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IPropertyNameResolver.Resolve(System.String,Ektron.Cms.Search.PropertyCategory,Ektron.Cms.Search.PropertyType)">
            <summary>
            Translates the specified CMS property name to the name of the corresponding
            index field (as its known the the underlying search provider).
            </summary>
            <param name="name">CMS property name</param>
            <param name="category">Category of the CMS property</param>
            <param name="type">Data type of the CMS property</param>
            <returns>Index field name</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchCriteriaRule">
            <summary>
            The ISearchCriteriaRule interface describes a processing
            rule capable of transforming one or more values of a
            SearchCriteria object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchCriteriaRule.Process(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Processes the specified search criteria data.
            </summary>
            <param name="criteria">Search criteria data to process</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchManager">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchManager.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
            <exception cref="T:Ektron.Cms.Search.AllNoiseException">Query contained only noise words</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyQueryException">Search criteria contained an empty query</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyReturnPropertiesException">No return properties were specified</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidOrderByException">A specified "order by" property was not included in the return properties collection</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidPropertyException">A specified property does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidScopeException">The specified scope is invalid or does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.MalformedExpressionException">The specified expression is invalid</exception>
            <exception cref="T:Ektron.Cms.Search.NoResultsException">The query yielded no results</exception>
            <exception cref="T:Ektron.Cms.Search.SearchAuthorizationException">The configured credentials are invalid</exception>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">The site has not been configured for search</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchManager.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
            <exception cref="T:Ektron.Cms.Search.AllNoiseException">Query contained only noise words</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyQueryException">Search criteria contained an empty query</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyReturnPropertiesException">No return properties were specified</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidOrderByException">A specified "order by" property was not included in the return properties collection</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidPropertyException">A specified property does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidScopeException">The specified scope is invalid or does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.MalformedExpressionException">The specified expression is invalid</exception>
            <exception cref="T:Ektron.Cms.Search.NoResultsException">The query yielded no results</exception>
            <exception cref="T:Ektron.Cms.Search.SearchAuthorizationException">The configured credentials are invalid</exception>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">The site has not been configured for search</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchPropertyRule">
            <summary>
            The ISearchPropertyRule describes a component that manages 
            formatting rules for incoming and outgoing search properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Process(Ektron.Cms.Search.SearchResultData)">
            <summary>
            Processes the given search result based on the list of added rules.
            </summary>
            <param name="result">Result to be processed</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Process(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Processes the given search criteria.
            </summary>
            <param name="criteria">Criteria to be processed</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Add(Ektron.Cms.Search.ISearchResultRule)">
            <summary>
            Adds a result formatting rule.
            </summary>
            <param name="rule">Formatting rule</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Add(Ektron.Cms.Search.ISearchCriteriaRule)">
            <summary>
            Adds a criteria rule.
            </summary>
            <param name="rule">Criteria rule</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchProvider">
            <summary>
            The ISearchProvider interface describes a component that is capable
            of communicating with a specific search engine. This includes the
            translation of CMS search criteria into a syntax supported by that
            engine, issuing of the query, and the processing of any response
            data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Executes a keyword-based query using the specified criteria.
            </summary>
            <param name="criteria">Criteria with which to search</param>
            <returns>Search results</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Executes a narrow, expression-based query using the specified criteria.
            </summary>
            <param name="criteria">Criteria with which to search</param>
            <returns>Search results</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultRule">
            <summary>
            The ISearchResultRule interface describes a processing
            rule capable of transforming one or more values of a
            SearchResultData object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultRule.Process(Ektron.Cms.Search.SearchResultData)">
            <summary>
            Processes the specified search result data.
            </summary>
            <param name="result">Search result data to process</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchSettings">
            <summary>
            The ISearchSettings interface describes a component
            capable of updating and retrieving the configuration
            details for the 'search' feature.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchSettings.GetItem">
            <summary>
            Gets the search settings for the current site.
            </summary>
            <returns>Search settings</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISuggestedResults">
            <summary>
            The ISuggestedResults interface describes a component providing
            administrative capabilities for suggested search result data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetList">
            <summary>
            Gets a collection of suggested result sets from the configured
            search provider.
            </summary>
            <returns>Collection of suggested result sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetItem(System.Guid)">
            <summary>
            Gets the suggested result set identified by the specified id.        
            </summary>
            <param name="id">ID of the suggested result set</param>
            <returns>Matching suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetItem(System.String)">
            <summary>
            Gets the suggested result set containing the specified
            search phrase.
            </summary>
            <param name="phrase">Target search phrase</param>
            <returns>Matching suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Delete(System.Guid)">
            <summary>
            Deletes the suggested result identified by the id.
            </summary>
            <param name="id">ID of the suggested result set</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Add(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Adds the specified suggested result set.
            </summary>
            <param name="suggestedResultSet">Suggested result set data to be saved</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Update(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Updates the specified suggested result set.
            </summary>
            <param name="suggestedResultSet">Suggested result set data to be saved</param>     
        </member>
        <member name="T:Ektron.Cms.Search.ISynonyms">
            <summary>
            The ISynonyms interface describes a class providing access
            to search synonym sets.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.GetList(System.Int32)">
            <summary>
            Gets a collection of synonym sets for the specified language.
            </summary>        
            <param name="languageId">Language ID</param>
            <returns>Collection of SynonymSets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.GetItem(System.Guid)">
            <summary>
            Gets a synonym set.
            </summary>        
            <param name="id">Synonym set ID</param>
            <returns>Synonym set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Update(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Updates the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>                
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Update(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Updates the specified synonym sets.
            </summary>
            <param name="data">Collection of synonym sets</param>        
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Add(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Adds the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>
            <returns>Synonym set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Add(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Adds the specified synonym sets.
            </summary>
            <param name="data">Collection of synonym sets</param>
            <returns>Collection of Synonym Sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Delete(System.Guid,System.Int32)">
            <summary>
            Deletes the specified synonym set.
            </summary>
            <param name="id">Synonym set ID</param>        
            <param name="languageId">Language ID</param>
        </member>
        <member name="T:Ektron.Cms.Search.Query.ITokenizer">
            <summary>
            Interface for constructing a string tokenizer.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.ITokenizer.Tokenize(System.String)">
            <summary>
            Enumerates the tokens in a given search query text string
            </summary>
            <remarks>
            Tokens generated from the tokenizer can be converted into a grammar
            parse tree through instances of the IParser interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.IParser"/>
            <param name="text">Query string</param>
            <returns>Enumerable list of tokens</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Query.ITranslator">
            <summary>
            Interface for converting a grammar parse tree into an Expression tree. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.ITranslator.Translate(Ektron.Cms.Search.Query.ParseTree)">
            <summary>
            Converts a parse tree into an Expression tree.
            </summary>
            <remarks>
            Parse trees can be generated from token lists through the 
            IParser interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.IParser"/>
            <param name="parseTree">Parse tree to translate</param>
            <returns>Expression tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.KeywordMode">
            <summary>
            The KeywordMode enumeration desribes the options for
            handling query text keywords with no explicit operators
            connecting them.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.KeywordMode.ImplicitAnd">
            <summary>
            Indicates that keywords, in the absense of explicit
            operators, will be ANDed together.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.KeywordMode.ImplicitOr">
            <summary>
            Indicates that keywords, in the absense of explicit
            operators, will be ORed together.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.KeywordSearchCriteria">
            <summary>
            The KeywordSearchCriteria class describes a free-text, keyword-centric
            search query. The criteria is intended for broad, traditional search
            queries.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.KeywordSearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.KeywordSearchCriteria.QueryText">
            <summary>
            Gets and sets the keyword query text with which to filter the search results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.KeywordSearchCriteria.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether or not an
            'AND' operator is implied between search terms that lack
            any other explicit logical operator.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Locale">
            <summary>
            The Locale class provides a mapping of language IDs to the
            relevent locale for a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Locale.Create(System.Int32)">
            <summary>
            Gets the string locale code represented by the language ID.
            </summary>
            <param name="languageId">Language ID</param>
            <returns>Locale code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Locale.Get(System.Int32)">
            <summary>
            Gets the locale code for the specified language ID.
            </summary>
            <param name="languageId">Language ID</param>
            <returns>Locale code</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.Default">
            <summary>
            Gets the default 'Locale' according to the current content language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.ID">
            <summary>
            Gets the language ID for this locale.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.Code">
            <summary>
            Gets the identifying code for this locale.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ManualUserPermission">
            <summary>
            The ManualUserPermission class is a data structure encapsulating
            permission data representing a specific, manually specified, CMS
            user.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ManualUserPermission.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="userId">CMS user ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ManualUserPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="P:Ektron.Cms.Search.ManualUserPermission.UserId">
            <summary>
            Gets and sets the user identification to apply to search results
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.OrderData">
            <summary>
            The OrderData class represents the ordering information for the
            result set of a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.OrderData.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.OrderDirection)">
            <summary>
            Constructor
            </summary>
            <param name="property">Identifies the property on which to sort</param>
            <param name="direction">Indicates the direction of the sort</param>
        </member>
        <member name="P:Ektron.Cms.Search.OrderData.Property">
            <summary>
            Gets or sets the property on which to sort a result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.OrderData.Direction">
            <summary>
            Gets or sets the direction in which to sort a result set.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.OrderDirection">
            <summary>
            The OrderDirection enumeration describes the direction
            in which to sort a search result set.
            Ascending - Result items will be sorted in ascending order.
            Descending - Result items will be sorted in descending order
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.OrderDirection.Ascending">
            <summary>
            Result items will be sorted in ascending order.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.OrderDirection.Descending">
            <summary>
            Result items will be sorted in descending order.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.PropertyCategory">
            <summary>
            The PropertyCategory enumeration describes the classifications
            of CMS properties as they relate to the search index.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Custom">
            <summary>
            Custom user properties
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Metadata">
            <summary>
            Metadata definitions
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.SmartForm">
            <summary>
            SmartForm fields
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Core">
            <summary>
            Core CMS properties
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.None">
            <summary>
            No category
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.PropertyType">
            <summary>
            Enumeration describing property data types.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DateRefinementSpecification">
            <summary>
            The DateRefinementSpecification represents a strongly typed refinement specification 
            for date/time index properties.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedRefinementSpecification`2">
            <summary>
            The BoundedRefinementSpecification class serves as a base for refinement
            specification implementations representing ranged refinement criteria.
            </summary>
            <typeparam name="T">Type of PropertyExpression</typeparam>
            <typeparam name="U">Data type of refinement values</typeparam>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementSpecification`1">
            <summary>
            The RefinementSpecification class identifies a specific facet to
            be included in the search results.
            </summary>
            <typeparam name="T">Type of property associated with the facet</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementSpecification`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementSpecification`1.Property">
            <summary>
            Gets or sets the refinement property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedRefinementSpecification`2.#ctor(`0,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{`1}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression identifying the refinement property</param>
            <param name="thresholds">Collection of value ranges to be used as explicit thresholds for the refinement</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedRefinementSpecification`2.Thresholds">
            <summary>
            Gets or sets a collection of value ranges describing explicit thresholds
            used to determine the bounds of facet buckets.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.DecimalRefinementSpecification">
            <summary>
            The DecimalRefinementSpecification represents a strongly typed refinement specification 
            for decimal index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Double}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Double}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.IntegerRefinementSpecification">
            <summary>
            The IntegerRefinementSpecification represents a strongly typed refinement specification 
            for integer index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.Refinement">
            <summary>
            The Refinement class is a data structure identifying a specific
            subset of results to which a query should be restricted.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Refinement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Refinement.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="data">Refinement data</param>
        </member>
        <member name="P:Ektron.Cms.Search.Refinement.Property">
            <summary>
            Gets or sets the property associated with this refinement.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Refinement.Data">
            <summary>
            Gets or sets the data identifying this refinement.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementCriteria">
            <summary>
            The RefinementCriteria class encapsulates all query criteria
            related to faceted search.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.Refinement)">
            <summary>
            Adds a specific refinement identifying a specific subset
            of results to which the query should be restricted.
            </summary>
            <param name="refinement">Refinement data</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.RefinementSpecification{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds a RefinementSpecification identifying the facets that
            should be generated at query time.
            </summary>
            <param name="refinementSpecification">Specification identifying the relevent refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.RefinementInfo)">
            <summary>
            Add a RefinementInfo data structure to the criteria.
            </summary>
            <param name="refinementInfo"></param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Clear">
            <summary>
            Clears this criteria of any refinement specifications or 
            restrictions that it may contain.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementCriteria.Items">
            <summary>
            Gets a read-only collection of the refinement information associated
            with this criteria.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementCriteria.IsEnabled">
            <summary>
            Gets or sets a flag indicating whether or not refinement functionality
            is enabled for a query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.StringRefinementSpecification">
            <summary>
            The StringRefinementSpecification represents a strongly typed refinement specification 
            for string index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Search.StringRefinementSpecification.Filter">
            <summary>
            Hidden until this functionality becomes available.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.StringRefinementSpecification.Order">
            <summary>
            Hidden until this functionality becomes available.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementOrder">
            <summary>
            The RefinementOrder enumeration describes the available methods
            by which refinement values may be sorted.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Frequency">
            <summary>
            Sort order is determined according to the frequency of terms.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Count">
            <summary>
            Sort order is determined according to the count of facet buckets.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Label">
            <summary>
            Sort order is determined according to the label of the facet buckets.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementOrderData">
            <summary>
            The RefinementOrderData class describes the method by which
            refinement results should be sorted.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Search.SearchContentProperty">
            <summary>
            The ContentProperty class provides access to the PropertyExpressions 
            which map default content properties to index fields.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Id">
            <summary>
            Gets the PropertyExpression for the content ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Language">
            <summary>
            Gets the PropertyExpression for the content language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderId">
            <summary>
            Gets the PropertyExpression for the folder ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ContentType">
            <summary>
            Gets the PropertyExpression for the content type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ContentSubType">
            <summary>
            Gets the PropertyExpression for the content subtype field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Title">
            <summary>
            Gets the PropertyExpression for the content title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Path">
            <summary>
            Gets the PropertyExpression for the content path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Tags">
            <summary>
            Gets the PropertyExpression for the content tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Size">
            <summary>
            Gets the PropertyExpression for the content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Description">
            <summary>
            Gets the PropertyExpression for the content description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Author">
            <summary>
            Gets the PropertyExpression for the content author field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.DateCreated">
            <summary>
            Gets the PropertyExpression for the content date created field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the content date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.XmlConfigId">
            <summary>
            Gets the PropertyExpression for the content SmartForm ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ExpiryType">
            <summary>
            Gets the PropertyExpression for the content expiry type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ExpiryDate">
            <summary>
            Gets the PropertyExpression for the content expiry date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderName">
            <summary>
            Gets the PropertyExpression for the content folder name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.GoLiveDate">
            <summary>
            Gets the PropertyExpression for the content go live date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapDate">
            <summary>
            Gets the PropertyExpression for the map date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapLongitude">
            <summary>
            Gets the PropertyExpression for the map longitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapLatitude">
            <summary>
            Gets the PropertyExpression for the map latitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapAddress">
            <summary>
            Gets the PropertyExpression for the map address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderPath">
            <summary>
            Gets the PropertyExpression for the content folder path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderIdPath">
            <summary>
            Gets the PropertyExpression for the content folder ID path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Private">
            <summary>
            Gets the PropertyExpresion for the field indicating whether or not the content is private.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.AssetVersion">
            <summary>
            Gets the PropertyExpression for the asset version path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.SiteId">
            <summary>
            Gets the PropertyExpression for the ID of the parent site.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCredentials">
            <summary>
            The SearchCredentials class is a data structure describing the
            credentials necessary to communicate with a search service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Domain">
            <summary>
            Gets or sets the Window's domain.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCustomProperty">
            <summary>
            The SearchCustomProperty class is a factory for property expressions
            targeting custom property fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>StringPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>IntegerPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>DecimalPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>DatePropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>BooleanPropertyExpression representing the custom property field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchECommerceProperty">
            <summary>
            The ECommerceProperty class provides access to the default
            PropertyExpressions for formulating e-commerce queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Id">
            <summary>
            Gets the PropertyExpression for product content ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Language">
            <summary>
            Gets the PropertyExpression for the product content language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.CatalogNumber">
            <summary>
            Gets the PropertyExpression for product folder ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Description">
            <summary>
            Gets the PropertyExpression for the product description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the product QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ImageUrl">
            <summary>
            Gets the PropertyExpression for the product image field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.PathCategory">
            <summary>
            Gets the PropertyExpression for the product content path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Rank">
            <summary>
            Gets the PropertyExpression for the result rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted product summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Size">
            <summary>
            Gets the PropertyExpression for the product content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ProductType">
            <summary>
            Gets the PropertyExpression for the product type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ProductTypeId">
            <summary>
            Gets the PropertyExpression for the product type ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.SkuNumber">
            <summary>
            Gets the PropertyExpression for the SKU number field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Height">
            <summary>
            Gets the PropertyExpression for the product height field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Width">
            <summary>
            Gets the PropertyExpression for the product width field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Length">
            <summary>
            Gets the PropertyExpression for the product length field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Weight">
            <summary>
            Gets the PropertyExpression for the product weight field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Purchased">
            <summary>
            Gets the PropertyExpression for the purchased field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.CurrencyId">
            <summary>
            Gets the PropertyExpression for the currency ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ListPrice">
            <summary>
            Gets the PropertyExpression for the list price field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.SalePrice">
            <summary>
            Gets the PropertyExpression for the sale price field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Buyable">
            <summary>
            Gets the PropertyExpression for the buyable field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Title">
            <summary>
            Gets the PropertyExpression for the product title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Discontinued">
            <summary>
            Gets the PropertyExpression for the product discontinued field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchGroupProperty">
            <summary>
            The GroupProperty class provides access to the default
            PropertyExpressions for formulating community group queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Id">
            <summary>
            Gets the PropertyExpression for the group ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Name">
            <summary>
            Gets the PropertyExpression for the name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.CreatorId">
            <summary>
            Gets the PropertyExpression for the group creator ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Enroll">
            <summary>
            Gets the PropertyExpression for the enroll field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Location">
            <summary>
            Gets the PropertyExpression for the location field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.ShortDescription">
            <summary>
            Gets the PropertyExpression for the short description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.LongDescription">
            <summary>
            Gets the PropertyExpression for the long description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Path">
            <summary>
            Gets the PropertyExpression for the path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Tags">
            <summary>
            Gets the PropertyExpression for the tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Avatar">
            <summary>
            Gets the PropertyExpression for the user avatar field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Title">
            <summary>
            Gets the PropertyExpression for the title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Size">
            <summary>
            Gets the PropertyExpression for the size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.EmailAddress">
            <summary>
            Gets the PropertyExpression for the email address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Type">
            <summary>
            Gets the PropertyExpression for the user type field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchMetadataProperty">
            <summary>
            The SearchMetadataProperty class is a factory for property expressions
            targeting metadata fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>StringPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>IntegerPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>DecimalPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>DatePropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>BooleanPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Search.SearchProfiles.KeywordProfile.Equals(System.Object)">
            <summary>
            Returns true if the specified KeywordProfile's Term is equal to the Term in this instance of KeywordProfile
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if the specified object equals this one, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Search.SearchProfiles.KeywordProfile.GetHashCode">
            <summary>
            Gets the hash code based on the Term for this instance of KeywordProfile.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProvider">
            <summary>
            The SearchProvider class is a data structure describing a component
            capabable of providing search functionality to a CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.Equals(System.Object)">
            <summary>
            Returns true if the specified object is a provider equivalent to this one.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.ToString">
            <summary>
            Gets the string representation of this instance.
            </summary>
            <returns>String representation of this instance</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Id">
            <summary>
            Gets or sets the ID for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Type">
            <summary>
            Gets or sets the type code for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.AdminEndpoint">
            <summary>
            Gets or sets the administrative service endpoint for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.AdminCredentials">
            <summary>
            Gets or sets the credentials for this provider's administrative service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data XML for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Components">
            <summary>
            Gets or sets the collection of components associated with this provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderComponent">
            <summary>
            The SearchProviderComponent class is a data structure describing a component
            supporting a SearchProvider associated with the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Id">
            <summary>
            Gets or sets the ID for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Type">
            <summary>
            Gets or sets the type code for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.ProviderId">
            <summary>
            Gets or sets the ID of the parent provider for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Endpoint">
            <summary>
            Gets or sets the service endpoint for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Credentials">
            <summary>
            Gets or sets the credentials for this component's service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data XML for this component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderComponentType">
            <summary>
            The SearchProviderComponentType identifies the type code
            values for SearchProviderComponents.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderComponentType.Content">
            <summary>
            Gets the type code for a 'Content' (indexing) search component.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderComponentType.Query">
            <summary>
            Gets the type code for a 'Query' search component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderType">
            <summary>
            The SearchProviderType identifies the type code
            values for SearchProviders.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderType.MsSearchServer">
            <summary>
            Gets the type code for a Microsoft Search Server provider.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderType.MsFast">
            <summary>
            Gets the type code for a Microsoft Fast provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchResponseData">
            <summary>
            The SearchResponseData class is a data structure delivering
            the results of a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResponseData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Results">
            <summary>
            Gets or sets a collection of results relevent to the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.SuggestedResults">
            <summary>
            Gets or sets a collection of suggested results relevent to the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.PagingInfo">
            <summary>
            Gets or sets the paging details for this result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.SpellingSuggestion">
            <summary>
            Gets or sets a spelling suggestion for the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.ElapsedTime">
            <summary>
            Gets or sets the elapsed execution time for the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Terms">
            <summary>
            Gets or sets a collection of search terms identified in submitted query.        
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Facets">
            <summary>
            Gets or sets a list of Facets corresponding to the Search Results
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchResultData">
            <summary>
            The SearchResultData class represents an individual result item
            of a search query. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="row">Result data row</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor(System.Data.DataRow)">
            <summary>
            Constructor
            </summary>
            <param name="row">Result data row</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsNull(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.HasColumn(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsMultiValue(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsMultiValue(System.String)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property. If the value
            represents a single-value result, the single-value form will be returned. If the 
            value represents a multi-value result, the multi-value (collection) form will be
            returned.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(System.String,System.Object)">
            <summary>
            Sets a value for the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Date value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Sets a value for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Integer (long) value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Decimal value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Sets a value for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">Collection of string values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.PropertyCount">
            <summary>
            Returns the number of fields in this result item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Similarity">
            <summary>
            Gets or sets datac describing how closely this result item 
            relates to other items in the result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(System.String)">
            <summary>
            Gets and sets the value for the specified property. If the value of the field
            is null, DBNull is returned.
            </summary>
            <param name="propertyName">Name of property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Gets and sets the value for the specified string property. If the value of the field is
            null, String.Empty is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Gets and sets the value for the specified decimal property. If the value of the field
            is null, 0 is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Gets and sets the value for the specified integer property. If the value of the field
            is null, 0 is returned.
            </summary>        
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Gets and sets the value for the specified date property. If the value of the field
            is null, DateTime.MinValue is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Gets and sets the value for the specified boolean property. If the value of the field
            is null, false is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified string property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of strings</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified integer property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of integer (long) values</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified decimal property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of decimal</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified boolean property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of boolean</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified date property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of date</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchSettingsData">
            <summary>
            Ektron CMS site search settings object
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.Equals(System.Object)">
            <summary>
            Returns true if the specified object is a SearchSettingsData instance equivalent to this one.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.ToString">
            <summary>
            Gets the string representation of this instance.
            </summary>
            <returns>String representation of this instance</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Empty">
            <summary>
            Gets the singleton 'empty' instance of SearchSettingsData.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.UniqueId">
            <summary>
            Gets or sets the unique id for the associated CMS site.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.ContentSource">
            <summary>
            Gets or sets the name of the content source for the associated CMS site.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Interval">
            <summary>
            Gets or sets the incremental crawl interval for the content source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.AdminService">
            <summary>
            Gets or sets the search server admin service URL (with port).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.QueryService">
            <summary>
            Gets or sets the search query service URL (with port).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Filter">
            <summary>
            Gets or sets the filters for data operations that trigger
            the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.IsActive">
            <summary>
            Gets or sets a flag indicating if this configuration is the 
            active configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data assocatied with
            this search configuration.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchSmartFormProperty">
            <summary>
            The SearchSmartFormProperty class is a factory for property expressions
            targeting Smart Form fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>StringPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>IntegerPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>DecimalPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>DatePropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>BooleanPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchType">
            <summary>
            Helper class for generating expressions to limit search result types.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsContent">
            <summary>
            Generates an expression that limits search result type to content.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsNonUserContent">
            <summary>
            Generates an expression that limits search result type to content.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsForum">
            <summary>
            Generates an expression that limits search result type to forums.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsMultimedia">
            <summary>
            Generates an expression that limits search result type to multimedia.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsDocument">
            <summary>
            Generates an expression that limits search result type to CMS documents. 
            Any valid document types added using the CMS, such as office files, images, pdf or multimedia are included when limiting results by using this property 
            (Please note that valid file types are defined in the Asset Server Setup in the Settings section of workarea of your site).
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsProduct">
            <summary>
            Generates an expression that limits search result type to products.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsUser">
            <summary>
            Generates an expression that limits search result type to users.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsGroup">
            <summary>
            Generates an expression that limits search result type to groups.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsExternal">
            <summary>
            Generates an expression that limits search result type to groups.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchUserProperty">
            <summary>
            The UserProperty class provides access to the default
            PropertyExpressions for formulating user queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Id">
            <summary>
            Gets the PropertyExpression for the user ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Language">
            <summary>
            Gets the PropertyExpression for the user language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.UserName">
            <summary>
            Gets the PropertyExpression for the user name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.EmailAddress">
            <summary>
            Gets the PropertyExpression for the email address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.DisplayName">
            <summary>
            Gets the PropertyExpression for the display name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Path">
            <summary>
            Gets the PropertyExpression for the path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Tags">
            <summary>
            Gets the PropertyExpression for the user tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Size">
            <summary>
            Gets the PropertyExpression for the content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Avatar">
            <summary>
            Gets the PropertyExpression for the user avatar field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Type">
            <summary>
            Gets the PropertyExpression for the user type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapLongitude">
            <summary>
            Gets the PropertyExpression for the map longitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapLatitude">
            <summary>
            Gets the PropertyExpression for the map latitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapAddress">
            <summary>
            Gets the PropertyExpression for the map address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.FirstName">
            <summary>
            Gets the PropertyExpression for the first name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.LastName">
            <summary>
            Gets the PropertyExpression for the last name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.PrivateProfile">
            <summary>
            Gets the PropertyExpression for the private profile field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.UserFriends">
            <summary>
            Gets the PropertyExpression for the user fiends field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MembershipUser">
            <summary>
            Gets the PropertyExpression for the membership user field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilarityResponseData">
            <summary>
            The SimilarityResponseData class encapsulates information describing
            how closely a result item relates to other items in the result set.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SimilarityResponseData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilarityResponseData.SimilarityVector">
            <summary>
            Gets or sets a collection of similiarty tokens which
            provide document term relevency data.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilaritySearchCriteria">
            <summary>
            The SimilaritySearchCriteria class captures metadata associated
            with a particular result item. This data is used to refine the
            parent query to a set of results that are similar to that
            result item.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SimilaritySearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.IsEnabled">
            <summary>
            Gets or sets a flag indicating whether or not similarity search
            should be enabled for the parent query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.SimilarityVector">
            <summary>
            Gets a document vector describing a particular indexed item which 
            is to be evaluated by the search provider, identifying other similar
            documents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.QueryType">
            <summary>
            Gets or sets the type of similarity query to be issued.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilarityQueryType">
            <summary>
            The SimilarityQueryType describes the individual types of similarity
            queries that may be issued.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Include">
            <summary>
            The similarity query will match similar items even if the parent query
            has no matches.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Require">
            <summary>
            The similarity query will only match similar items if the parent query
            has matches also.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Exclude">
            <summary>
            Similar items will be excluded from the parent query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResultData">
            <summary>
            Defines a suggested search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.Equals(System.Object)">
            <summary>
            Returns true if the specified suggested result is equal
            to this instance.
            </summary>
            <param name="obj">Suggested result to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.GetHashCode">
            <summary>
            Returns the hash code for this instance of SuggestedResultData.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.ToString">
            <summary>
            Returns the string representation of this instance of SuggestedResultData.
            </summary>
            <returns>Suggested result string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Title">
            <summary>
            Gets and sets the title of the suggested result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Url">
            <summary>
            Gets and sets the URL of the suggested result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Description">
            <summary>
            Gets and sets the description of the suggested result
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResultSet">
            <summary>
            The SuggestedResultSet associates a set of search terms with an
            ordered collection of suggested result items.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Id">
            <summary>
            Gets or sets the unique identifier for this suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Name">
            <summary>
            Gets or sets the name for this suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Phrases">
            <summary>
            Gets the collection of additional search terms supporting this
            suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.SuggestedResults">
            <summary>
            Gets the collection of suggested results associated with the
            terms of this result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.LastModified">
            <summary>
            Gets or sets the date and time at which this suggested result set
            was last modified.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSet">
            <summary>
            The SynonymSet class is a data structure representing
            an individual set of synonymous search terms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSet.Contains(System.String)">
            <summary>
            Returns true if the synonym set contains the specified term.
            </summary>
            <param name="term">Synonym term</param>
            <returns>True if the synonym set contains the specified term</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.Id">
            <summary>
            Gets or sets the synonym set identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.LanguageId">
            <summary>
            Gets or sets the language id;
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.Terms">
            <summary>
            Gets or sets the collection of synonymous terms.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSetTerm">
            <summary>
            The SynonymSetTerm class is a data structure identifying
            an individual term associated with a SynonymSet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetTerm.Equals(System.Object)">
            <summary>
            Returns true if the specified object is equal to this term, false otherwise.
            </summary>
            <param name="obj">Term to compare</param>
            <returns>True if the specified object is equal to this term, false otherwise</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSetTerm.Id">
            <summary>
            Gets or sets the term's identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSetTerm.Term">
            <summary>
            Gets or sets the value of the term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResult">
            <summary>
            The SuggestedResult class is a data structure representing an
            individual suggested result item of a suggested result set. It
            identifies the target of the suggested result and provides
            additional descriptive data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.Equals(System.Object)">
            <summary>
            Returns true if the specified Suggested Result is equal
            to this instance.
            </summary>
            <param name="obj">Suggested result to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.GetHashCode">
            <summary>
            Returns the hash code for this instance of SuggestedResult.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.ToString">
            <summary>
            Returns the string representation of this instance of SuggestedResult.
            </summary>
            <returns>Suggested result string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Id">
            <summary>
            Gets or sets the unique identifier for this suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Title">
            <summary>
            Gets or sets the title of the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Url">
            <summary>
            Gets or sets the URL for the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Description">
            <summary>
            Gets or sets the description for the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.ContentId">
            <summary>
            Gets or sets the content ID associated with suggested result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.GetUserData(System.String)">
            <summary>
            Returns a new UserData object prepopulated with any properties from the external authentication provider.
            </summary>
            <param name="userKey">The key of the user in the third party authenticator.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.RequestInformation">
            <summary>
            Gets or sets the current EkRequestInformation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.IsHttps">
            <summary>
            Gets a flag indicating if current request is https.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.AuthenticationTypeId">
            <summary>
            Gets the Authentication Type Associated with this UserData provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserContext">
            <summary>
            Summary description for UserContext
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUser">
            <summary>
            Gets the current user
            </summary>
            <returns>The current user data, or <c>null</c>.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserDevice(System.Boolean)">
            <summary>
            Gets the current user device configuration information
            </summary>
            <param name="useCache">
            By default the code will use Caching, but this may be bypassed if desired (e.g. 
            for Device Preview, where cached values may be out of sync).
            </param>
            <returns>
            The list of user's CmsDeviceConfigurationData
            </returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserDevice">
            <summary>
            Gets the current user device configuration information
            </summary>
            <returns>
            The list of user's CmsDeviceConfigurationData
            </returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserLocationInfo">
            <summary>
            Gets the current user location information using GeoIP database
            </summary>
            <returns>User location data or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetReferrer">
            <summary>
            Gets the current user referrer information
            </summary>
            <returns>User referrer data.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentOrganization">
            <summary>
            Gets the current user location information using GeoIP database
            </summary>
            <returns>User company data or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.SetCurrentUserPricebookId(System.Int64)">
            <summary>
            Sets the Current User PricebookId in the session
            </summary>
            <param name="pricebookId">Id of the pricebook</param>
        </member>
        <member name="M:Ektron.Cms.UserContext.SetCurrentUserPricebookIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            Sets the Current User PricebookIds in the session
            </summary>
            This Method to be made public in future
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserPricebookId">
            <summary>
             Gets the Current User PricebookId from the session
            </summary>
            <returns>PricebookId</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserPricebookIdList">
            <summary>
            Gets the Current User PricebookIds from the session
            </summary>
            <returns></returns>
            This Method to be made public in future
        </member>
        <member name="M:Ektron.Cms.UserContext.ClearData">
            <summary>
            Clears the current user context data, device configuration data, location information 
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContext.OverrideIP(System.String)">
            <summary>
            Sets the currunt user's ip for testing 
            </summary>
            <param name="ip">valid ip address</param>
        </member>
        <member name="P:Ektron.Cms.UserContext.Session">
            <summary>
            Gets the current Session object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserContext.IP">
            <summary>
            Gets the IP address of the current user
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserContext.CurrentUsername">
            <summary>
            Gets or sets the current username, or <c>null</c>.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserContextCacheManager">
            <summary>
            Implements a session data cache whose lifetime is only limited to one request.
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUser(System.String)">
            <summary>
            Gets the current user, if any, of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns>The current user, or <c>null</c>.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUser(System.String,Ektron.Cms.UserData)">
            <summary>
            Sets the current user of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="user">The user.</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserLocationInfo(System.String)">
            <summary>
            Gets the current user location information, of a session
            </summary>
            <param name="sessionId">The session ID</param>
            <returns>The current user's location information, od <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserLocationInfo(System.String,Ektron.Cms.UserLocationData)">
            <summary>
            Sets the current user location in the session
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="userLocationData">The user's location information</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserDevice">
            <summary>
            Gets the current user device configurations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserDevice(System.Collections.Generic.List{Ektron.Cms.Device.CmsDeviceConfigurationData})">
            <summary>
            Sets the current  user device configurations in session
            </summary>
            <param name="userDeviceData"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserOrganization(System.String,Ektron.Cms.UserOrganizationData)">
            <summary>
            Sets the current user organization in session
            </summary>
            <param name="sessionId"></param>
            <param name="userOrganizationData"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserPricebookIdList(System.String)">
            <summary>
            Gets the current user Pricebookids in the session
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserPricebookIdList(System.String,System.Collections.Generic.List{System.Int64})">
            <summary>
            Sets the current user pricebookid in the session
            </summary>
            <param name="sessionId"></param>
            <param name="pricebookids"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserReferrer(System.String)">
            <summary>
            Gets the current user referrer information, of a session
            </summary>
            <param name="sessionId">The session ID</param>
            <returns>The current user's referrer information, or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserReferrer(System.String,Ektron.Cms.UserReferrerData)">
            <summary>
            Sets the current user referrer in the session
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.ClearData(System.String)">
            <summary>
            Clears all cached data of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsRatingStrategy.OnAfterDeleteRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Rating is deleted.
            </summary>
            <param name="id">ID of Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsRatingStrategy.OnAfterUpdateRating(Ektron.Cms.RatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Rating is edited.
            </summary>
            <param name="data">The Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsContentRatingStrategy.OnAfterDeleteContentRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is deleted.
            </summary>
            <param name="id">ID of Content Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsContentRatingStrategy.OnAfterUpdateContentRating(Ektron.Cms.ContentRatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is edited.
            </summary>
            <param name="data">The Content Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.WebEventStrategy">
            <summary>
            Web event strategies base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeAdd(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before adding a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterAdd(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after adding a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before deleting a webevent
            </summary>
            <param name="id">id of the webevent</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after deleting a webevent
            </summary>
            <param name="id">id of the webevent</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforePublish(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before publishing a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterPublish(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after publishing a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeUpdate(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterUpdate(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeAddVariance(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterAddVariance(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeCancelOccurrence(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented , this method is called before cancelling an occurence
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterCancelOccurrence(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented , this method is called after cancelling an occurence
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AdaptiveLibraryImages.library">
            <summary>
            Only load the library manager when needed, since it is only used in one case.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AdaptiveLibraryImages.logger">
            <summary>
            A lazy-loaded reference to the log writer.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AdaptiveLibraryImages.processor">
            <summary>
            Load the processor in all cases.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AdaptiveLibraryImages.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Cleans up references to the library image from the adaptive image 
            cache.
            </summary>
            <param name="id">Id of library item to be deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AdaptiveLibraryImages.OnAfterAdd(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Generates the adaptive image cache for added library images.
            </summary>
            <param name="eventItem">The event item.</param>
            <param name="eventArgs">The <see cref="T:Ektron.Cms.Extensibility.CmsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AdaptiveLibraryImages.OnAfterUpdate(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Updates the adaptive image cache for library images.
            </summary>
            <param name="eventItem">The item.</param>
            <param name="eventArgs">The <see cref="T:Ektron.Cms.Extensibility.CmsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AdaptiveLibraryImages.GetFilePath(Ektron.Cms.LibraryData)">
            <summary>
            Gets the file path for the library item, whether it is an asset or
            a library image.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AdaptiveLibraryImages.Library">
            <summary>
            Gets a reference to the library manager.
            </summary>
            <value>
            The active library manager instance.
            </value>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AdaptiveLibraryImages.Log">
            <summary>
            Gets a reference to the log writer.
            </summary>
            <value>
            The log writer.
            </value>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.AutoMachineTranslate">
            <summary>
            Automatically performs machine translation to locales ending with x-mt when source content is marked ready for translation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.AutoPseudoLocalize">
            <summary>
            Automatically performs pseudo localization to locales ending with x-pseudo when source content is TBD.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageData">The CmsMessageData object which was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageTypeStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageTypeStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageTypeData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageTypeData">The CmsMessageData object which was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyItemStrategy.OnAfterDeleteTaxonomyItem(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is deleted.
            </summary>
            <param name="id">ID of TaxonomyItem that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyItemStrategy.OnAfterUpdateTaxonomyItem(Ektron.Cms.TaxonomyItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is edited.
            </summary>
            <param name="taxonomyItem">The TaxonomyItem that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyStrategy.OnAfterDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Taxonomy is deleted.
            </summary>
            <param name="id">ID of Taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyStrategy.OnAfterUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Taxonomy is edited.
            </summary>
            <param name="taxonomyData">The Taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy">
            <summary>
            Ensures device previews are assigned to the correct breakpoint.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.breakpoints">
            <summary>
            Local reference to the device breakpoint manager implementation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.previews">
            <summary>
            Local reference to the device preview manager implementation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Assigns device previews from other breakpoints
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Confirms device previews currently assigned to the breakpoint and searches
            for previews from other breakpoints to assign.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Assigns device previews orphaned by the breakpoint being deleted to the next
            largest breakpoint or none.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetBreakpoint(System.Int32,System.Int64)">
            <summary>
            Gets the breakpoint that applies to the supplied width.
            </summary>
            <param name="width">Width to find a breakpoint for.</param>
            <param name="excludedBreakpointId">The ID of a breakpoint to exclude from the search.</param>
            <returns>
            The matching breakpoint or null.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetNextBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the next breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint to search from.</param>
            <returns>The next breakpoint or null</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if a null breakpoint is supplied.</exception>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetPreviousBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the previous breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint to search from.</param>
            <returns>The previous breakpoint or null.</returns>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.Breakpoints">
            <summary>
            Gets the device breakpoint manager.
            </summary>
            <value>
            The device breakpoint manage.
            </value>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.Previews">
            <summary>
            Gets the device preview manager.
            </summary>
            <value>
            The device preview manage.
            </value>
        </member>
        <member name="T:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy">
            <summary>
            Manages generic devices for each breakpoint based on copies of preview 
            device templates.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.previews">
            <summary>
            Local reference to the device preview manager implementation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy"/> class
            and populates its internal data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Create a new device preview for the breakpoint for each available 
            device preview template.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Deletes preview devices for the breakpoint which have been created
            from a device preview template.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Updates preview devices for the breakpoint which have been created
            from a device preview template so their width matches the 
            breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.GetModelName(Ektron.Cms.Mobile.DevicePreviewTemplateData,Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the name of the model based on template and the breakpoint.
            </summary>
            <param name="template">The device.</param>
            <param name="breakpoint">The breakpoint.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.ScaleDevicePreviewDimensions(Ektron.Cms.Mobile.DevicePreviewData,System.Int32)">
            <summary>
            Scales the device preview dimensions to the provided viewport 
            width.
            </summary>
            <param name="preview">The device preview to update.</param>
            <param name="viewportWidth">The width of the viewport after scaling.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.ScaleDevicePreviewDimensions(Ektron.Cms.Mobile.DevicePreviewData,System.Int32,Ektron.Cms.Mobile.DevicePreviewTemplateData)">
            <summary>
            Scales the template dimensions to the provided viewport width and
            applies them to the preview device.
            </summary>
            <param name="preview">The device preview to update.</param>
            <param name="viewportWidth">The width of the viewport after scaling.</param>
            <param name="template">The template on which the scaling is based.</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.Previews">
            <summary>
            Gets the device preview manager.
            </summary>
            <value>
            The device preview manage.
            </value>
        </member>
        <member name="P:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.TemplateDevices">
            <summary>
            Gets or sets all of the available template devices.
            </summary>
            <value>
            The template devices.
            </value>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTodoListStrategy.OnAfterDeleteTodoList(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTodoListStrategy.OnAfterUpdateTodoList(Ektron.Cms.ToDo.TodoListData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="todoList">The TodoList that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.QueryStrategy">
            <summary>
            The QueryStrategy is an abstract class describing a component capable of
            responding to query-related events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnBeforeKeywordQuery(Ektron.Cms.Search.KeywordSearchCriteria,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals that a 'keyword' query is about to be requested.
            </summary>
            <param name="criteria">Criteria for the pending query</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnAfterKeywordQuery(Ektron.Cms.Search.KeywordSearchCriteria,Ektron.Cms.Search.SearchResponseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals the completion of a 'keyword' query.
            </summary>
            <param name="criteria">Criteria for the query</param>
            <param name="response">Query response</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnBeforeAdvancedQuery(Ektron.Cms.Search.AdvancedSearchCriteria,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals that an 'advanced' query is about to be requested.
            </summary>
            <param name="criteria">Criteria for the pending query</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnAfterAdvancedQuery(Ektron.Cms.Search.AdvancedSearchCriteria,Ektron.Cms.Search.SearchResponseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals the completion of an 'advanced' query.
            </summary>
            <param name="criteria">Criteria for the query</param>
            <param name="response">Query response</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.Register(System.Type,System.Type)">
            <summary>
            Registers a mapping within the current container for the 
            specified types. If a type mapping already exists for the 
            'from' type, it will be override with the specified mapping.
            </summary>
            <param name="from">Interface or class type key</param>
            <param name="to">Type to map</param>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.IsRegistered(System.Type)">
            <summary>
            Returns true if the specified type has a corresponding
            mapping registered within the current container, false otherwise.
            </summary>
            <param name="type">Interface or class type key</param>
            <returns>True if the specified type has a mapping, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.GetMappedType(System.Type)">
            <summary>
            Returns the type mapped to the specified type within the current 
            container. If no mapping exists, null is returned.
            </summary>
            <param name="fromType">Type key</param>
            <returns>Mapped type</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.GetDevicePreviewManager">
            <summary>
            Gets the device preview manager configured for the container.
            </summary>
            <returns>The configured device preview manager.</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.LoadStrategy``1(System.String)">
            <summary>
            Loads a strategy instance of the specified type.
            </summary>
            <typeparam name="T">Strategy type</typeparam>
            <param name="typeName">The assembly-qualified name of the type to get.</param>
            <returns>Strategy instance of the specified type</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.ecmCookie(System.String)">
            <summary>
            Returns the value for a given key.
            </summary>
            <param name="keyName">The cookie key.</param>
            <returns>Object</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.GetEktGUID">
            <summary>
            Returns a unique ID stored as EktGUID, used to track visitors to the site.
            </summary>
            <returns>A unique identifier for the current visitor.</returns>
            <remarks>If the cookie value is not set, this function will set it and return the new GUID value. Otherwise it returns the cookie GUID.
            If the user does not have cookies enabled, it returns String.Empty.</remarks>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.ProcessServiceCall(Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            This checks the current BusinessObject call to see if it is being made in a WCF service context.
            If it is, it checks for authentication headers and does any neccessary impersonation\environment modifications
            </summary>
            <param name="requestInformation"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.GetUserByToken(System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary> 
            Gets a user based upon a supplied authentication token.
            </summary>
            <returns>The current user data, or <c>null</c>.</returns>
        </member>
    </members>
</doc>
