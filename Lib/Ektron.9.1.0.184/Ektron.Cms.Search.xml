<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ektron.Cms.Search</name>
    </assembly>
    <members>
        <member name="T:Ektron.Cms.Search.CmsSuggestedResults">
            <summary>
            The CmsSuggestedResults provides access to suggested results
            data specifically managed by the CMS (as opposed to a search
            provider like Search Server).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.#ctor">
            <summary>
            Consturctor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Initialize">
            <summary>
            Prepares this instance of CmsSuggestedResults for use.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetList">
            <summary>
            Gets a collection of all suggested result sets.
            </summary>
            <returns>Collection of suggested result sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetItem(System.Guid)">
            <summary>
            Gets the suggested result set identified by the
            specified ID.
            </summary>
            <param name="setId">Suggested result set ID</param>
            <returns>Suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetItem(System.String)">
            <summary>
            Gets the suggested result set associated with the specified
            search phrase
            </summary>
            <param name="phrase">Target search phrase</param>
            <returns>Suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Delete(System.Guid)">
            <summary>
            Deletes the suggested result set identified by the 
            specified ID.        
            </summary>
            <param name="id">Suggested result set ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Add(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Adds the specified suggested result set.
            </summary>
            <param name="set">Suggested result set</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Update(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Updates the specified suggested result set.
            </summary>
            <param name="set">Suggested result set</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Get(System.Nullable{System.Guid},System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            Gets the suggested result set identified by the
            specified ID.
            </summary>
            <remarks>
            Note: Set ID takes precedence over the phrase parameter
            when searching for the appropriate suggested result.
            </remarks>
            <param name="setId">Suggested result set ID</param>
            <param name="phrase">Suggested result phrase</param>
            <param name="connection">Open DB connection</param>
            <returns>Suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.Add(Ektron.Cms.Search.SuggestedResultSet,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Adds the specified suggested result set.
            </summary>
            <param name="set">Set to add</param>
            <param name="transaction">Transaction within which to execute the 'add'.</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetSuggestedResultSetColumns(System.Data.IDataReader)">
            <summary>
            Gets the column ordinals for the 'SuggestedResultSet' table.
            </summary>
            <param name="reader">Reader from which to extract the ordinals</param>
            <returns>Columns for the 'SuggestedResultSet' table</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetSuggestedResultPhraseColumns(System.Data.IDataReader)">
            <summary>
            Gets the column ordinals for the 'SuggestedResultPhrase' table.
            </summary>
            <param name="reader">Reader from which to extract the ordinals</param>
            <returns>Columns for the 'SuggestedResultPhrase' table</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSuggestedResults.GetSuggestedResultColumns(System.Data.IDataReader)">
            <summary>
            Gets the column ordinals for the 'SuggestedResultPhrase' table.
            </summary>
            <param name="reader">Reader from which to extract the ordinals</param>
            <returns>Columns for the 'SuggestedResultPhrase' table</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Initialize">
            <summary>
            Initiatizes this component for use.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.GetList(System.Int32)">
            <summary>
            Gets a collection of all synonym sets for the specified language.
            </summary>
            <param name="languageId">Language ID</param>
            <returns>Collection of synonym sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.GetItem(System.Guid)">
            <summary>
            Gets a synonym set with the specified ID.
            </summary>
            <param name="id">Set ID</param>
            <returns>Synonym sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Update(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Updates the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Update(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Updates the collection of synonym sets.
            </summary>
            <param name="data">Synonym sets</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Add(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Adds the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Add(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Adds the collection of synonym sets.
            </summary>
            <param name="data">Synonym sets</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.Delete(System.Guid,System.Int32)">
            <summary>
            Deletes the specified synonym set.
            </summary>
            <param name="id">Set Id</param>
            <param name="languageId">Language Id</param>
        </member>
        <member name="M:Ektron.Cms.Search.CmsSynonyms.VerifyNoDuplicates(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Verifies that a synonym set does not contain any duplicate entries.
            </summary>
            <param name="data">Synonym set</param>
        </member>
        <member name="P:Ektron.Cms.Search.CmsSynonyms.ConnectionString">
            <summary>
            Gets the connection string for the site's database.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CmsSynonyms.SiteDatabaseServer">
            <summary>
            Gets the name of the site's database server.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CmsSynonyms.SiteDatabase">
            <summary>
            Gets the name of the site's database.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CrawlerBase">
            <summary>
            This class serves as the base class for ICrawler implementations for different search providers.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddContent(Ektron.Cms.ContentData)">
            <summary>
            Initiates an incremental crawl when content is added to the system.
            </summary>
            <param name="content">Content that was added</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateContent(Ektron.Cms.ContentData)">
            <summary>
            Initiates an incremental crawl when content is updated in the system.
            </summary>
            <param name="content">Content that was updated</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteContent(System.Int64)">
            <summary>
            Initiates an incremental crawl when content is deleted from the system.
            </summary>
            <param name="contentId">ID of content that was deleted</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddFolder(Ektron.Cms.FolderData)">
            <summary>
            Initiates an incremental crawl when a folder is added to the system.
            </summary>
            <param name="folder">Folder that was added</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateFolder(Ektron.Cms.FolderData)">
            <summary>
            Initiates an incremental crawl when a folder is updated in the system.
            </summary>
            <param name="folder">Folder that was updated</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteFolder(System.Int64)">
            <summary>
            Initiates an incremental crawl when a folder is deleted from the system.
            </summary>
            <param name="folderId">ID of folder that was deleted</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.CopyFolder(System.Int64,System.Int64)">
            <summary>
            Initiates an incremental crawl when a CMS folder is Copied.
            </summary>
            <param name="sourceFolderId">Folder Id of source folder</param>
            <param name="destinationFolderId">Folder Id of destination folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.MoveFolder(System.Int64)">
            <summary>
            Initiates an incremental crawl when a CMS folder is Moved.
            </summary>
            <param name="folderId">Folder Id after move</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Initiates a full crawl when a property is added to the system.
            </summary>
            <param name="metaType">Property that was added</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Initiates a full crawl when a property is updated in the system.
            </summary>
            <param name="metaType">Property that was updated</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteProperty(System.Int64)">
            <summary>
            Initiates a full crawl when a property is deleted from the system.
            </summary>
            <param name="propertyId">ID of property that was deleted</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property add event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property update event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteCustomProperty(System.Int64,System.Int32)">
            <summary>
            Signals the crawler to handle a custom property delete event.
            </summary>
            <param name="propertyId">Property ID</param>  
            <param name="languageId">Language ID</param>              
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object add event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object update event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteCustomPropertyObject(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.CustomPropertyObjectType,System.Int64)">
            <summary>
            Signals the crawler to handle a custom property object delete event.
            </summary>        
            <param name="objectId">CMS object ID</param>
            <param name="languageId">Language ID</param>
            <param name="cmsObjectType">CMS object type</param>
            <param name="propertyId">Custom property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property add event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property update event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteUserProperty(System.Int64)">
            <summary>
            Signals the crawler to handle a user property delete event.
            </summary>
            <param name="propertyId">Property ID</param>          
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an add user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an update user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteUser(System.Int64)">
            <summary>
            Signals the crawler to handle a delete user event.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an add colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an delete colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an add Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an update Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteGroup(System.Int64)">
            <summary>
            Signals the crawler to handle a delete Group event.
            </summary>
            <param name="GroupId">Group ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an add library item event.
            </summary>
            <param name="data">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an update library item event.
            </summary>
            <param name="data">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteLibraryItem(System.Int64)">
            <summary>
            Signals the crawler to handle a delete library item event.
            </summary>
            <param name="id">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an add taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an update taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteTaxonomyItem(System.Int64)">
            <summary>
            Signals the crawler to handle an delete taxonomy item event.
            </summary>
            <param name="id">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an add XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteXmlConfiguration(System.Int64)">
            <summary>
            Signals the crawler to handle an delete XML configuration event.
            </summary>
            <param name="id">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateXmlIndex(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update to XML Index configuration event (saving the index fields on second screen of Smart form creation).
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.TagObject(Ektron.Cms.TagAssignmentData)">
            <summary>
            Signals the crawler to handle a tag assignment event.
            </summary>
            <param name="assignmentData">Tag assignment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteObjectTag(System.Int64,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes,System.Int64)">
            <summary>
            Signals the crawler to handle a tag delete event.
            </summary>
            <param name="tagId">Tag ID</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object Type</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.PublishCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a catalog entry publish event.
            </summary>
            <param name="id">Entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a catalog entry delete event.
            </summary>
            <param name="id">Entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.PublishWebEvent(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Signals the crawler to handle a web event publish event.
            </summary>
            <param name="eventData">Web event data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteWebEvent(System.Int64)">
            <summary>
            Signals the crawler to handle a web event delete event.
            </summary>
            <param name="id">Web event ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddBlogComment(Ektron.Cms.BlogComment)">
            <summary>
            Signals the crawler to handle a blog comment publish event.
            </summary>
            <param name="comment">Blog comment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle a discussion topic add event.
            </summary>
            <param name="topic">Topic data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddDiscussionReply(Ektron.Cms.TaskData)">
            <summary>
            Signals the crawler to handle a discussion reply event.
            </summary>
            <param name="reply">Reply data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle an update discussion forum event.
            </summary>
            <param name="topic">Discussion topic</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an add Manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an update Manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a delete Manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DisableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a disable Manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.EnableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an enable Manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an add Auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an update Auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a delete Auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DisableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a disable Auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.EnableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an enable Auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteManualAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteAutoAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteRegExAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteCommunityAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateAliasSetting(System.String,System.Object)">
            <summary>
            Signals the crawler to handle a URL aliasing settings update.
            </summary>
            <param name="settingsName">Settings key</param>
            <param name="settingsValue">Settings value</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle an add template event.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeleteTemplate(System.Int64)">
            <summary>
            Signals the crawler to handle a delete template event.
            </summary>
            <param name="id">Template id</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle an update template event.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.AddPermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the addition of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdatePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the update of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.DeletePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the deletion of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdateItemInheritance(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            inheritance setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is inherited?</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.UpdatePrivateSetting(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            privacy setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is private?</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartIncrementalCrawl">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartIncrementalCrawl(System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartFullCrawl">
            <summary>
            Requests a full crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartContentCrawl(Ektron.Cms.ContentData)">
            <summary>
            Issues an incremental crawl according to the type
            of content specified.
            </summary>
            <param name="content">Content triggering the crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartContentCrawl">
            <summary>
            Issues an incremental crawl if crawling of HTML content
            has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartContentCrawl(System.Boolean)">
            <summary>
            Issues an incremental crawl if crawling of HTML content
            has been enabled.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartLibraryCrawl(Ektron.Cms.LibraryData)">
            <summary>
            Issues an incremental crawl if crawling of library data has been enabled.
            </summary>        
            <param name="libraryData">Library data</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartDocumentCrawl">
            <summary>
            Issues an incremental crawl if crawling of document content has been enabled.
            </summary>        
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartDocumentCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of document content has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartForumCrawl">
            <summary>
            Issues an incremental crawl if crawling of forum content
            has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartForumCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of forum content has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartProductCrawl">
            <summary>
            Issues a crawl if crawling of product content has been enabled.
            </summary>        
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartProductCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of product content has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityMemberCrawl">
            <summary>
            Issues an incremental crawl if crawling of community members
            has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityMemberCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of community members has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartUserCrawl">
            <summary>
            Issues an incremental crawl if crawling of community members
            has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartUserCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of community members has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityGroupCrawl">
            <summary>
            Issues an incremental crawl if crawling of community groups
            has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityGroupCrawl(System.Boolean)">
            <summary>
            Issues a crawl if crawling of community members has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityContentCrawl">
            <summary>
            Issues a crawl if crawling of community content has been enabled.
            </summary>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.StartCommunityContentCrawl(System.Boolean)">
            <summary>
            Issues an incremental crawl if crawling of community content
            has been enabled.
            </summary>
            <param name="fullCrawl">True to issue a full crawl, false to issue an incremental</param>
            <returns>True if initiatied</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsSystemContent(Ektron.Cms.ContentData)">
            <summary>
            Returns true if the content represents non-public system content which, 
            in most cases, should not trigger a crawl.
            </summary>
            <param name="content">Content to verify</param>
            <returns>True if the content represents system content</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsSystemFolder(Ektron.Cms.FolderData)">
            <summary>
            Returns true if the folder represents non-public system folder which, 
            in most cases, should not trigger a crawl.
            </summary>
            <param name="folder">folder to verify</param>
            <returns>True if the folder represents a system folder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsSystemFolder(System.String)">
            <summary>
            Returns true if the folder represents non-public system folder which, 
            in most cases, should not trigger a crawl.
            </summary>
            <param name="folder">folder to verify</param>
            <returns>True if the folder represents a system folder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsSystemUser(Ektron.Cms.UserData)">
            <summary>
            Returns true if the user represents a non-public system user
            </summary>
            <param name="user">User to verify</param>
            <returns>True if the user represents a system user</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsCrawlNeeded(Ektron.Cms.ContentData)">
            <summary>
            Returns true if the content is currently in a published state.
            </summary>
            <param name="content">Content to verify</param>
            <returns>True if content is published</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsActiveContent(Ektron.Cms.ContentData)">
            <summary>
            Returns true if the specified content data represents active content.
            </summary>
            <param name="content">Content data</param>
            <returns>True if content is active, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsPendingContent(Ektron.Cms.ContentData)">
            <summary>
            Returns true if the specified content is pending publication.
            </summary>
            <param name="content">Content data</param>
            <returns>True if content is pending publication, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsWorkspaceContent(Ektron.Cms.ContentData)">
            <summary>
            Returns true if the specified content resides in a user
            or group workspace.
            </summary>
            <param name="content">Content to verify</param>
            <returns>True if the content resides in a user or group workspace</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.IsCommunityFolder(System.Int64)">
            <summary>
            Returns true if the specified folder is a community folder.
            </summary>
            <param name="folderId">Folder to verify</param>
            <returns>True if the specified folder is a community folder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.GetContent(Ektron.Cms.LibraryData)">
            <summary>
            Gets ContentData associated with a particular library item.
            </summary>
            <param name="data">ContentData </param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlerBase.GetFolder(System.Int64)">
            <summary>
            Gets the FolderData associated with the specified ID.
            </summary>
            <param name="id">Folder ID</param>
            <returns>Folder data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryCompiler.Compile(System.String)">
            <summary>
            Compiles a string of query text into an Expression tree.
            </summary>
            <param name="queryText">Query text to compile</param>
            <returns>Expression tree representing query text</returns>
        </member>
        <member name="T:Ektron.Cms.Search.JsonQuerySuggestionForCultureResult">
            <summary>
            This class stores the query suggestions for a partial search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.JsonQuerySuggestionForCultureResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.JsonQuerySuggestionForCultureResult.Suggestions">
            <summary>
            Gets or sets the list of the query suggestions for a partial search query.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.JsonQuerySuggestionResponse">
            <summary>
            This class stores the query suggestion information for a particular search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.JsonQuerySuggestionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.JsonQuerySuggestionResponse.QuerySuggestionForCultureResult">
            <summary>
            Gets or sets the QuerySuggestionForCultureResult for a particular search query.
            </summary>        
        </member>
        <member name="M:Ektron.Cms.Search.ExtendedConfiguration.Serialize``1(``0)">
            <summary>
            Serializes the specified data to an XML file.
            </summary>
            <param name="path">Output path for XML file</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExtendedConfiguration.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified XML file to a SiteConfiguration instance.
            </summary>
            <param name="path">Input path for the XML file</param>
            <returns>Deserialized SiteConfiguration data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ConfigureSearchServerServiceFactory.Create(System.String)">
            <summary>
            Creates and returns a client capable of communicating with the
            SearchRequestService hosted at the specified endpoint.
            </summary>
            <param name="endpoint">Service URL</param>
            <returns>SearchRequestServiceClient</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ConfigureSearchServerServiceFactory.GetClient``1(System.String)">
            <summary>
            Returns an open channel to the specified endpoint.
            </summary>
            <returns>Channel to the endpoint</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ConfigureSearchServerServiceFactory.GetWsHttpBinding">
            <summary>
            Creates and initializes the HTTP binding used to communicate with
            this applications respective services.
            </summary>
            <returns>HTTP binding</returns>
        </member>
        <member name="T:Ektron.Cms.Search.DocumentPromotionManager">
            <summary>
            The DocumentPromotionManager class allows adding document promotions to search results
            and returns the relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentPromotionManager.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentPromotionManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentPromotionManager.AddDocumentPromotion(Ektron.Cms.Interfaces.Search.SearchProfiles.SearchProfile)">
            <summary>
            Adds a Document Promotion using information in the SearchProfile object.
            </summary>
            <param name="profile">Document Promotion information contained in the SearchProfile object</param>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentPromotionManager.AddKeywordDocumentPromotion(System.String,System.String,Ektron.Cms.Interfaces.Search.SearchProfiles.IPromotion)">
            <summary>
            Adds a Document Promotion to the default SearchProfile (created by SearchConfig) using information in the IPromotion object.
            </summary>
            <param name="name">Name of the Search Profile</param>
            <param name="keyword">Search Keyword for which Document Promotion is to be added</param>
            <param name="promotion">Document Promotion information contained in the IPromotion object</param>
        </member>
        <member name="P:Ektron.Cms.Search.DocumentPromotionManager.ServiceEndpoint">
            <summary>
            Gets the SearchRequestService service endpoint.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FacetedResultsHelper.GetFacets(Ektron.Cms.Search.Proxies.QueryService.EWFacet[])">
            <summary>
            Helper method for mapping the Result Facets across webservice interfaces
            Need to look into Automapper for the same
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder">
            <summary>
            The FS2010FqlQueryRequestBuilder class is a component capable of assembling
            an FQL query request for Microsoft FAST Search Server 2010.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryRequestBuilder`1">
            <summary>
            The IQueryRequestBuilder is an interface describing a component capable 
            of assembling query request (of type T).
            </summary>
            <typeparam name="T">Query request data type</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.Build(System.Int32)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID</param>
            <returns>Instance of type T</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.Build(System.Int32,Ektron.Cms.Search.Expressions.Expression@)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID</param>
            <param name="expression">
            Modified expression tree represented by the request being built.
            </param>
            <returns>Instance of type T</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddQueryText(System.String)">
            <summary>
            Adds the specified query text to the query.
            </summary>
            <param name="queryText">Query text</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddExpression(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds the specified expression to the request.
            </summary>
            <param name="expression">Query expression</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddScope(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Adds the specified scopes to the request.
            </summary>
            <param name="scopes">Collection of scopes</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddReturnProperties(System.Collections.Generic.HashSet{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds the specified return properties to the request.
            </summary>
            <param name="properties">Collection of properties</param>
            <returns>Reference to this request builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddOrderData(System.Collections.Generic.List{Ektron.Cms.Search.OrderData})">
            <summary>
            Adds the specified order data to the request.
            </summary>
            <param name="orderData">Sort order data</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddPagingInfo(Ektron.Cms.PagingInfo)">
            <summary>
            Adds the specified paging data to the request.
            </summary>
            <param name="pagingInfo">Paging data</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddLocale(Ektron.Cms.Search.Locale)">
            <summary>
            Adds the specified locale information to the request.
            </summary>
            <param name="locale">Request locale</param>
            <returns>Reference to this request builder</returns>   
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddSimilarityCriteria(Ektron.Cms.Search.SimilaritySearchCriteria)">
            <summary>
            Adds similarity criteria information to the request.
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.IQueryRequestBuilder`1.AddRefinementCriteria(Ektron.Cms.Search.RefinementCriteria)">
            <summary>
            Adds refinement criteria information to the request.
            </summary>
            <param name="refinementCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>       
        </member>
        <member name="P:Ektron.Cms.Search.IQueryRequestBuilder`1.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether stemming should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IQueryRequestBuilder`1.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether implicit and behavior should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IQueryRequestBuilder`1.IncludeSpecialTermResults">
            <summary>
            Gets or sets a flag indicating whether special term results should be included.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.#ctor(Ektron.Cms.Search.ISearchSettings)">
            <summary>
            Constructor
            </summary>
            <param name="searchSettingsManager">Search settings data</param>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.Build(System.Int32)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID for this request</param>
            <returns>KeywordQueryRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.Build(System.Int32,Ektron.Cms.Search.Expressions.Expression@)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID for this request</param>
            <param name="expression">
            Modified expression tree represented by the request being built.
            </param>
            <returns>KeywordQueryRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddQueryText(System.String)">
            <summary>
            Adds the specified query text to the query.
            </summary>
            <param name="queryText">Query text</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddExpression(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds the specified expression to the request.
            </summary>
            <param name="expression">Query expression</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddScope(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Adds the specified scopes to the request.
            </summary>
            <param name="scopes">Collection of scopes</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddReturnProperties(System.Collections.Generic.HashSet{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds the specified return properties to the request.
            </summary>
            <param name="properties">Collection of properties</param>
            <returns>Reference to this request builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddOrderData(System.Collections.Generic.List{Ektron.Cms.Search.OrderData})">
            <summary>
            Adds the specified order data to the request.
            </summary>
            <param name="orderData">Sort order data</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddPagingInfo(Ektron.Cms.PagingInfo)">
            <summary>
            Adds the specified paging data to the request.
            </summary>
            <param name="pagingInfo">Paging data</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddLocale(Ektron.Cms.Search.Locale)">
            <summary>
            Adds the specified locale information to the request.
            </summary>
            <param name="locale">Request locale</param>
            <returns>Reference to this request builder</returns>   
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddSimilarityCriteria(Ektron.Cms.Search.SimilaritySearchCriteria)">
            <summary>
            Adds similarity criteria information to the request.
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.AddRefinementCriteria(Ektron.Cms.Search.RefinementCriteria)">
            <summary>
            Adds refinement criteria information to the request.
            </summary>
            <param name="refinementCriteria">Refinement criteria information</param>
            <returns>Reference to this request builder</returns>
        </member>
        <member name="P:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether stemming should be 
            applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether implicit and behavior 
            should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.FS2010.FS2010FqlQueryRequestBuilder.IncludeSpecialTermResults">
            <summary>
            Gets or sets a flag indicating whether special term results should be included.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.FS2010Property">
            <summary>
            The FS2010Property class exposes singleton instances of FAST
            Search Server specific property expressions.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.FS2010.FS2010Property.DocumentVector">
            <summary>
            Gets the property expression representing a document vector.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.FS2010.FS2010Property.CharSet">
            <summary>
            Gets the property expression representing the character set
            of a particular result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010Property.#cctor">
            <summary>
            Constructor;
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder">
            <summary>
            The FS2010QueryResponseBuilder is a class describing a component capable 
            of assembling a FAST Search Server 2010 query response.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IRefinedQueryResponseBuilder`2">
            <summary>
            The IRefinedQueryResponseBuilder interface describes a component capable
            of building a response from a search provider supporting a refinement
            result set.
            </summary>
            <typeparam name="T">Revelent result set data type</typeparam>
            <typeparam name="R">Refinement result set data type</typeparam>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryResponseBuilder`1">
            <summary>
            The IQueryResponseBuilder is an interface describing a component capable 
            of assembling a query response (from a result set of type T).
            </summary>
            <typeparam name="T">Query result set data type</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.Build">
            <summary>
            Builds response data from the data supplied to this response builder.
            </summary>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddSpellingSuggestions(System.String,System.String)">
            <summary>
            Adds the specified query spelling suggestion to the response.
            </summary>
            <param name="original">Original query text</param>
            <param name="suggestion">Spelling suggestion</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddElapsedTime(System.Int32)">
            <summary>
            Adds the specified elapsed time (in milliseconds) to the response.
            </summary>
            <param name="milliseconds">Elapsed time</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddPagingInfo(Ektron.Cms.PagingInfo,System.Int32)">
            <summary>
            Adds the specified paging information to the response.
            </summary>
            <param name="pagingInfo">Paging information</param>
            <param name="totalRecords">Total records</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddReleventResults(`0)">
            <summary>
            Adds the specified result set to the response.
            </summary>
            <param name="resultSet">Query result set</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddSuggestedResults">
            <summary>
            Adds suggested result data (derived from the query terms)  
            to the response.
            </summary>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddQueryTerms(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified query terms to the response.
            </summary>
            <param name="terms">List of query terms</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryResponseBuilder`1.AddQueryTerms(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds a list of query terms, derived from the specified expression,
            to the response.
            </summary>
            <param name="expression">Expression tree</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IRefinedQueryResponseBuilder`2.AddRefinementResults(`1)">
            <summary>
            Adds refinement results (of type R) to search response.
            </summary>
            <param name="resultSet">Refinement results</param>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.#ctor(Ektron.Cms.Search.ISuggestedResults)">
            <summary>
            Constructor
            </summary>
            <param name="suggestedResultsManager">Suggested results manager</param>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddRefinementResults(Ektron.Cms.Search.Proxies.QueryService.EWFacet[])">
            <summary>
            Adds refinement results to search response.
            </summary>
            <param name="resultSet">Refinement results</param>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.Build">
            <summary>
            Builds response data from the data supplied to this response builder.
            </summary>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddSpellingSuggestions(System.String,System.String)">
            <summary>
            Adds the specified query spelling suggestion to the response.
            </summary>
            <param name="original">Original query text</param>
            <param name="suggestion">Spelling suggestion</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddElapsedTime(System.Int32)">
            <summary>
            Adds the specified elapsed time (in milliseconds) to the response.
            </summary>
            <param name="milliseconds">Elapsed time</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddPagingInfo(Ektron.Cms.PagingInfo,System.Int32)">
            <summary>
            Adds the specified paging information to the response.
            </summary>
            <param name="pagingInfo">Paging information</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddReleventResults(System.Data.DataTable)">
            <summary>
            Adds the specified result set to the response.
            </summary>
            <param name="resultSet">Query result set</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddSuggestedResults">
            <summary>
            Adds suggested result data (derived from the query terms)  
            to the response.
            </summary>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddQueryTerms(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified query terms to the response.
            </summary>
            <param name="terms">List of query terms</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.AddQueryTerms(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds a list of query terms, derived from the specified expression,
            to the response.
            </summary>
            <param name="expression">Expression tree</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010QueryResponseBuilder.CleanSummary(Ektron.Cms.Search.SearchResultData)">
            <summary>
            Cleans up the highlighted summary string of the specified result if it
            FAST happens to have misdetected the character set of the result.
            </summary>
            <remarks>
            This is a HACK for defect #66477. All CMS content goes into the index
            encoded as UTF-8. FAST auto-detects the encoding and uses that as the
            basis for returning the highlighted summary. Unfortunately, its detection
            of the character set is inaccurate for small content items. This can result
            in unexpected characters appearing in the content.
            
            This method CAN result in a loss of data from the summary.
            </remarks>
            <param name="result">Result item with summary to be cleaned</param>
        </member>
        <member name="T:Ektron.Cms.Search.ICriteriaValidationRule">
            <summary>
            The ICriteriaValidationRule interface describes a component
            that encapsulates the logic necessary to ensure that search
            criteria meets some specification relevent to the
            feature set exposed by a particular search provider.    
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICriteriaValidationRule.Validate">
            <summary>
            Validates that search criteria meets some specification
            relevent to the feature set exposed by a particular search
            provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ICriteriaValidator">
            <summary>
            The ICriteriaValidator interface describes a component capable
            of validating that the specified search criteria is consistent
            with the feature set supported by a particular provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICriteriaValidator.AddRule(Ektron.Cms.Search.ICriteriaValidationRule)">
            <summary>
            Adds a validation rule to this validator.
            </summary>
            <param name="rule">Rule to be added</param>
        </member>
        <member name="T:Ektron.Cms.Search.SearchResultBuilder">
            <summary>
            The SearchResultBuilder class is an abstract base facilitating
            ISearchResultBuilder implementations for specific search
            providers.    
            </summary>        
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.Initialize">
            <summary>
            Initializes this result data builder for use.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.Initialize(System.Data.DataRow)">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.IsNull(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.HasProperty(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.IsMultiValue(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.IsMultiValue(System.String)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property.
            </summary>
            <param name="property">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(System.String,System.Object)">
            <summary>
            Sets a value for the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Date value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Sets a value for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Integer (long) value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Decimal value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Sets a value for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">Collection of string values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultBuilder.PropertyCount">
            <summary>
            Returns the number of fields in this result item.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointPropertyNameResolver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.Expressions.FSStringValueExpression">
            <summary>
            Defines an expression representing a string value and its
            applicable synonyms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.Expressions.FSStringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.Expressions.FSStringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.FS2010AuthenticationHandler">
            <summary>
            Authentication handler for FS2010 query service requests
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler">
            <summary>
            Authentication handler for MS query service requests
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler.#ctor(Ektron.Cms.Search.Proxies.QueryService.IQueryServiceChannel)">
            <summary>
            Constructor
            </summary>
            <param name="queryService">SS2008 query service</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler.Handle(Ektron.Cms.Search.Permission)">
            <summary>
            Configures the authentication handler with the given permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler.Handle(Ektron.Cms.Search.ManualUserPermission)">
            <summary>
            Configures the authentication handler with the given manual user permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler.Handle(Ektron.Cms.Search.CurrentUserPermission)">
            <summary>
            Configures the authentication handler with the given current user permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSAuthenticationHandler.Handle(Ektron.Cms.Search.AdministratorPermission)">
            <summary>
            Configures the authentication handler with the given administrator permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="T:Ektron.Cms.Search.FS2010.FS2010SearchProvider">
            <summary>
            The FS2010SearchProvider is an implementation of the ISearchProvider
            interface supporting communication with 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.MSCommon.MSSearchProvider">
            <summary>
            Common functionality for Microsoft Search Providers
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits a query according to the specified advanced search criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.HandleException(System.ServiceModel.FaultException{System.ServiceModel.ExceptionDetail})">
            <summary>
            Handles a FaultException returned from the Search Server query
            service and translates it to the appropriate SearchException.
            </summary>
            <remarks>
            If the status code does not indicate an error, no exception
            will be returned.
            </remarks>
            <param name="faultException">Exception to be handled</param>
            <returns>SearchException to be thrown</returns>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.CreateQueryServiceClient">
            <summary>
            Instantiates a new query service client.
            </summary>        
            <returns>Query service client</returns>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.LogRequest(Ektron.Cms.Search.Proxies.QueryService.KeywordQueryRequest)">
            <summary>
            Logs the outgoing keyword query request to search server.
            </summary>
            <param name="request">Keyword query request</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.MSSearchProvider.LogRequest(Ektron.Cms.Search.Proxies.QueryService.FullTextQueryRequest)">
            <summary>
            Logs the outgoing full-text SQL query request to search server.
            </summary>
            <param name="request">Full-text SQL query request</param>
        </member>
        <member name="P:Ektron.Cms.Search.MSCommon.MSSearchProvider.CacheManager">
            <summary>
            Gets a reference to the implementation of ICacheManager intended
            for use by SS2010SearchProvider objects.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.MSCommon.MSSearchProvider.SuggestedResultsManager">
            <summary>
            Gets a reference to the implementation of ISuggestedResults intended
            for use by SS2010SearchProvider objects.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.MSCommon.MSSearchProvider.Settings">
            <summary>
            Gets a reference to this object's instance of the search settings API.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010SearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010SearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.FS2010.FS2010SearchProvider.Validate(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Validates that the specified criteria is consistent with the
            provider's feature set.
            </summary>
            <param name="criteria">Search criteria</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.QueryServiceClient.Handle(Ektron.Cms.Search.Permission)">
            <summary>
            Configures the authentication handler with the given permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.QueryServiceClient.Handle(Ektron.Cms.Search.ManualUserPermission)">
            <summary>
            Configures the authentication handler with the given manual user permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.QueryServiceClient.Handle(Ektron.Cms.Search.CurrentUserPermission)">
            <summary>
            Configures the authentication handler with the given current user permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="M:Ektron.Cms.Search.MSCommon.QueryServiceClient.Handle(Ektron.Cms.Search.AdministratorPermission)">
            <summary>
            Configures the authentication handler with the given administrator permission
            </summary>
            <param name="permission">Permission to apply to the authentication handler</param>
        </member>
        <member name="T:Ektron.Cms.Search.QueryComponentExtendedConfiguration">
            <summary>
            The QueryComponentExtendedConfiguration class is a serializable data structure
            representing the extended configuration data associated associated with a
            Microsoft Search Server query service application.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryComponentExtendedConfiguration.FromXml(System.String)">
            <summary>
            Returns the QueryComponentExtendedConfiguration represented by the
            specified xml.
            </summary>
            <param name="xml">XML to convert to a component</param>
            <returns>QueryComponentExtendedConfiguration represented by the specified xml</returns>
        </member>
        <member name="M:Ektron.Cms.Search.QueryComponentExtendedConfiguration.ToXml(Ektron.Cms.Search.QueryComponentExtendedConfiguration)">
            <summary>
            Returns the XML representation of the specified data structure.
            </summary>
            <param name="component">Component to convert to XML</param>
            <returns>XML representation of the specified data structure</returns>
        </member>
        <member name="P:Ektron.Cms.Search.QueryComponentExtendedConfiguration.Id">
            <summary>
            Gets or sets the identifier for the query component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryComponentExtendedConfiguration.Name">
            <summary>
            Gets or sets the name of the query component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ContentSourceManager">
            <summary>
            The ContentSourceManager class provides access Search Server
            content source data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ContentSourceManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ContentSourceManager.Get">
            <summary>
            Gets a collection of all content sources hosted on the
            Search Server configured for this site.
            </summary>
            <returns>Collection of content sources</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ContentSourceManager.GetSourceData(Ektron.Cms.Search.Proxies.ConfigureSearchServerService.Catalog)">
            <summary>
            Converts an instance of the ConfigureSearchServer service's
            catalog data structure to a SourceData instance.
            </summary>
            <param name="catalog">Catalog data</param>
            <returns>Content source data</returns>
        </member>
        <member name="P:Ektron.Cms.Search.ContentSourceManager.Settings">
            <summary>
            Gets the search settings associated with the current site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.ContentSourceManager.RequestInfoProvider">
            <summary>
            Gets the request information associated with the current request.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CrawlComponentExtendedConfiguration">
            <summary>
            The CrawlComponentExtendedConfiguration class is a serializable data structure
            representing the extended configuration data associated associated with a
            Microsoft Search Server content service application.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlComponentExtendedConfiguration.FromXml(System.String)">
            <summary>
            Returns the CrawlComponentExtendedConfiguration represented by the
            specified xml.
            </summary>
            <param name="xml">XML to convert to a component</param>
            <returns>CrawlComponentExtendedConfiguration represented by the specified xml</returns>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlComponentExtendedConfiguration.ToXml(Ektron.Cms.Search.CrawlComponentExtendedConfiguration)">
            <summary>
            Returns the XML representation of the specified data structure.
            </summary>
            <param name="component">Component to convert to XML</param>
            <returns>XML representation of the specified data structure</returns>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlComponentExtendedConfiguration.Id">
            <summary>
            Gets or sets the identifier for the crawl component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlComponentExtendedConfiguration.Name">
            <summary>
            Gets or sets the name of the query component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CrawlFlag">
            <summary>
            The CrawlFlag class provides access to an internal indicator
            identifying whether or not an incremental crawl request is pending
            for the site's data.
            </summary>
            <remarks>
            This class supports legacy behavior of SharePoint-based providers. See
            the CrawlFlags class <see cref="!:CrawlFlags"/> for current behavior.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlFlag.Set">
            <summary>
            Sets the crawl flag to indicate that a crawl is pending request.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CrawlFlag.Get">
            <summary>
            Gets the value of the crawl flag for the current CMS site.
            </summary>
            <returns>True if a crawl is pending, false otherwise</returns>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFlag.Instance">
            <summary>
            Gets the singleton instance of the CrawlFlag class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchServerSettingsData">
            <summary>
            The SearchServerSettingsData class is a data structure representing
            search configuration information specifically relevant to a Microsoft
            Search Server provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.Create(Ektron.Cms.Search.SearchSettingsData)">
            <summary>
            Factory method creating a SearchServerSettingsData instance populated with
            the data contained within the specified SearchSettingsData object.
            </summary>
            <param name="settings">Settings to load</param>
            <returns>SearchServerSettingsData instance</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">null request object passed to the function</exception>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.Equals(System.Object)">
            <summary>
            Returns true if the specified object is equal to this instance.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.ToString">
            <summary>
            Returns the string representation of this instance.
            </summary>
            <returns>String representation of this instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsData.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.Empty">
            <summary>
            Gets the empty singleton instance of SearchServerSettingsData.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.ContentSourceName">
            <summary>
            Search server content source associated with Ektron CMS site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.SearchServer">
            <summary>
            Search server address associated with Ektron CMS site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.Credentials">
            <summary>
            Credentials with which to login to search server
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.SearchServerAdminService">
            <summary>
            Url to the search server admin service
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.SearchServerQueryService">
            <summary>
            Url to the search server Ektron service
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.CrawlInterval">
            <summary>
            Interval (in milliseconds) between each potential incremental crawl.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.UniqueId">
            <summary>
            Unique ID with which to identify CMS sites from search server
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.Filter">
            <summary>
            Inclusion filters applied to the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.ContentServiceId">
            <summary>
            Identifier for the associated content service application.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.ContentServiceName">
            <summary>
            Name for the associated content service application.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.QueryServiceId">
            <summary>
            Identifier for the associated query service application.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerSettingsData.QueryServiceName">
            <summary>
            Name for the associated query service application.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchServerSettingsManager">
            <summary>
            The SearchServerSettingsManager provides access to search server
            specified configuration data associated with the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerSettingsManager.GetItem">
            <summary>
            Gets the search server specific settings data from the database.
            </summary>
            <returns>Search server configuration</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SharepointQueryPropositionService">
            <summary>
            A class that submits requests for query suggestions to the Microsoft Search Provider
            and returns the relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.SharepointQueryPropositionService.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">QuerySuggestionRequest parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="T:Ektron.Cms.Search.SharePointSearchResultBuilder">
            <summary>
            The SharePointSearchResultBuilder class is an ISearchResultBuilder implementation
            supporting the assembling of data for individual result records returned
            from a query of the SharePoint-based search engines.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SharePointSearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.CoreSortPropertyHandler">
            <summary>
            The CoreSortPropertyHandler class processes a core CMS property and
            returns a PropertyExpression suitable for use in search result sorting.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrPropertyHandler">
            <summary>
            The SolrPropertyHandler class is a base implementation of a chained
            handler supporting the processing of operations on PropertyExpressions.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyHandler.SetSuccessor(Ektron.Cms.Search.Solr.SolrPropertyHandler)">
            <summary>
            Set the handler to succeed this one in the chain.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyHandler.Handle(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Handles the specified property. If this handler cannot process
            the property, it will allow the succeeding handler to attempt
            work. If there is no successor, the original value will be
            returned.
            </summary>
            <param name="property">PropertyExpression to process</param>
            <returns>Processed PropertyExpression</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrPropertyHandler.Successor">
            <summary>
            Gets the handler succeeding this one in the chain.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.CoreSortPropertyHandler.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.CoreSortPropertyHandler.Handle(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Handles a core CMS property and returns a PropertyExpression 
            suitable for use in search result sorting.
            </summary>
            <param name="property">Property expression</param>
            <returns>Property expression for sorting</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.Client.QueryPropositionErrorData">
            <summary>
            A class representing the response of the QueryProposition restful WCF service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.Client.QueryPropositionErrorData.ErrorCode">
            <summary>
            Error Code of Exception
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.Client.QueryPropositionErrorData.ExceptionType">
            <summary>
            Type of Exception
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.Client.QueryPropositionErrorData.Message">
            <summary>
            Message of Exception
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.Client.QueryPropositionErrorData.StackTrace">
            <summary>
            Stack trace of Exception
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SearchSolrProperty">
            <summary>
            The SearchSolrProperty class exposes enhanced functionality
            around PropertyExpressions representing Solr index fields. This
            provides access to behavior unique to the Solr search engine.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Solr.SearchSolrProperty.Default">
            <summary>
            Gets the default index property.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Solr.SearchSolrProperty.LanguageSensitive">
            <summary>
            Gets a collection of properties supporting language-specific
            text processing.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateExactStringProperty(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Creates a property expression referencing the exact-match companion field
            for the specified property expression. These companion fields provide access
            to an untokenized and unfiltered representation of CMS property data, which
            can be particularly useful for performing exact term matches and requesting
            refinements. Note: Companion fields for Ektron properties are always
            multi-value fields.
            </summary>
            <param name="property">Property for which the companion expression should be created</param>
            <returns>Multi-value exact-match companion property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateExactStringProperty(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Creates a property expression referencing the exact-match companion field
            for the specified property expression. These companion fields provide access
            to an untokenized and unfiltered representation of CMS property data, which
            can be particularly useful for performing exact term matches and requesting
            refinements. Note: Companion fields for Ektron properties are always
            multi-value fields.
            </summary>
            <param name="property">Property for which the companion expression should be created</param>
            <returns>Exact-match companion property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateExactStringProperty(System.String)">
            <summary>
            Creates a property expression referencing the exact-match companion field
            for the specified property expression. These companion fields provide access
            to an untokenized and unfiltered representation of CMS property data, which
            can be particularly useful for performing exact term matches and requesting
            refinements. Note: Companion fields for Ektron properties are always
            multi-value fields.
            </summary>
            <param name="name">Name of the property for which the companion expression should be created</param>
            <returns>Exact-match companion property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateStringSortProperty(System.String)">
            <summary>
            Creates a property expression referencing the explicit single value companion field
            for the specified property expression. Note: This is an internal function used to resolve
            companion index fields (particulary for Smart Form fields) where we must act on a
            multi-value field as if it were a single value field.
            </summary>
            <param name="name">Property name to translate</param>
            <returns>Explicit single value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateIntegerSortProperty(System.String)">
            <summary>
            Creates a property expression referencing the explicit single value companion field
            for the specified property expression. Note: This is an internal function used to resolve
            companion index fields (particulary for Smart Form fields) where we must act on a
            multi-value field as if it were a single value field.
            </summary>
            <param name="name">Property name to translate</param>
            <returns>Explicit single value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateDecimalSortProperty(System.String)">
            <summary>
            Creates a property expression referencing the explicit single value companion field
            for the specified property expression. Note: This is an internal function used to resolve
            companion index fields (particulary for Smart Form fields) where we must act on a
            multi-value field as if it were a single value field.
            </summary>
            <param name="name">Property name to translate</param>
            <returns>Explicit single value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateDateSortProperty(System.String)">
            <summary>
            Creates a property expression referencing the explicit single value companion field
            for the specified property expression. Note: This is an internal function used to resolve
            companion index fields (particulary for Smart Form fields) where we must act on a
            multi-value field as if it were a single value field.
            </summary>
            <param name="name">Property name to translate</param>
            <returns>Explicit single value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SearchSolrProperty.CreateBooleanSortProperty(System.String)">
            <summary>
            Creates a property expression referencing the explicit single value companion field
            for the specified property expression. Note: This is an internal function used to resolve
            companion index fields (particulary for Smart Form fields) where we must act on a
            multi-value field as if it were a single value field.
            </summary>
            <param name="name">Property name to translate</param>
            <returns>Explicit single value property expression</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SmartFormSortPropertyHandler">
            <summary>
            The SmartFormSortPropertyHandler class processes a Smart Form property and
            returns a PropertyExpression suitable for use in search result sorting.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SmartFormSortPropertyHandler.Handle(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Handles a Smart Form property and returns a PropertyExpression 
            suitable for use in search result sorting.
            </summary>
            <param name="property">Property expression</param>
            <returns>Property expression for sorting</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SolrCrawler">
            <summary>
            Manages the Solr/Manifold crawl initiation for relevent CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.GetState">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an full crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartIncrementalCrawl">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartIncrementalCrawl(System.Boolean)">
            <summary>
            Requests that the local Ektron Search Server Service
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
            <param name="isDelayed">Flag indicating whether to respect the crawl interval</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartFullCrawl">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an full crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartIncrementalCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
            <param name="crawlType">crawlType indicating the type of ektron job to crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for an incremental crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="isDelayed">Flag indicating whether to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for a full crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests a full crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.FireIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for an incremental crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="isDelayed">Flag indicating whether to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.FireFullCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for a full crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.AddProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Initiates a full crawl when a property is added to the system.
            </summary>
            <param name="metaType">Property that was added</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.UpdateProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Initiates a full crawl when a property is updated in the system.
            </summary>
            <param name="metaType">Property that was updated</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.DeleteProperty(System.Int64)">
            <summary>
            Initiates a full crawl when a property is deleted from the system.
            </summary>
            <param name="propertyId">ID of property that was deleted</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.AddCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property add event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.UpdateCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property update event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.DeleteCustomProperty(System.Int64,System.Int32)">
            <summary>
            Signals the crawler to handle a custom property delete event.
            </summary>
            <param name="propertyId">Property ID</param>  
            <param name="languageId">Language ID</param>              
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.AddCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object add event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.UpdateCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object update event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.DeleteCustomPropertyObject(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.CustomPropertyObjectType,System.Int64)">
            <summary>
            Signals the crawler to handle a custom property object delete event.
            </summary>        
            <param name="objectId">CMS object ID</param>
            <param name="languageId">Language ID</param>
            <param name="cmsObjectType">CMS object type</param>
            <param name="propertyId">Custom property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.TagObject(Ektron.Cms.TagAssignmentData)">
            <summary>
            Signals the crawler to handle a tag assignment event.
            </summary>
            <param name="assignmentData">Tag assignment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.DeleteObjectTag(System.Int64,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes,System.Int64)">
            <summary>
            Signals the crawler to handle a tag delete event.
            </summary>
            <param name="tagId">Tag ID</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object Type</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.AddTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle an add template event.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.DeleteTemplate(System.Int64)">
            <summary>
            Signals the crawler to handle a delete template event.
            </summary>
            <param name="id">Template id</param>
        </member>
        <member name="M:Ektron.Cms.Search.SolrCrawler.UpdateTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle an update template event.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="P:Ektron.Cms.Search.SolrCrawler.SolrSettingsData">
            <summary>
            Gets or sets the search settings for the configuration provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SolrCrawler.ServiceEndpoint">
            <summary>
            Gets the search crawler service endpoint.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SolrCrawler.CoreName">
            <summary>
            Gets the Solr Admin Service endpoint.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.Client.SolrJsonQueryCompletion">
            <summary>
            A class representing the response of the QueryProposition restful WCF service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.Client.SolrJsonQueryCompletion.Suggestion">
            <summary>
            Spelling suggestion
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.Client.SolrJsonQueryCompletionResponse">
            <summary>
            A class representing the response of the QueryProposition restful WCF service.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.Client.SolrJsonQueryCompletionResult">
            <summary>
            A class representing the response of the QueryProposition restful WCF service.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.Client.SolrJsonSpellCheckResponeParser">
            <summary>
            A class that deserializes the JSON spellcheck response from Solr to SolrJsonSpellCheckResponse
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.Client.SolrJsonSpellCheckResponeParser.ParseSolrJsonSpellCheckReponse(System.String)">
            <summary>
            Deserializes the JSON spellcheck response from Solr to SolrJsonSpellCheckResponse
            </summary>
            <param name="jsonString">JSON spellcheck response string from QueryPropostion restful WCF service</param>
            <returns>QueryCompletionResponse</returns>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while parsing the JSON string</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.Get(Ektron.Cms.Search.DecimalRefinementSpecification,Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacet)">
            <summary>
            Creates a DecimalFacet based on data returned from a Solr query.
            </summary>
            <param name="spec">Refinement specification requesting the facet</param>
            <param name="facet">Solr facet data</param>
            <returns>DecimalFacet based on data returned from a Solr query</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.Get(Ektron.Cms.Search.IntegerRefinementSpecification,Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacet)">
            <summary>
            Creates a IntegerFacet based on data returned from a Solr query.
            </summary>
            <param name="spec">Refinement specification requesting the facet</param>
            <param name="facet">Solr facet data</param>
            <returns>IntegerFacet based on data returned from a Solr query</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.Get(Ektron.Cms.Search.DateRefinementSpecification,Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacet)">
            <summary>
            Creates a DateFacet based on data returned from a Solr query.
            </summary>
            <param name="spec">Refinement specification requesting the facet</param>
            <param name="facet">Solr facet data</param>
            <returns>DateFacet based on data returned from a Solr query</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.Get(Ektron.Cms.Search.StringRefinementSpecification,Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacet)">
            <summary>
            Creates a StringFacet based on data returned from a Solr query.
            </summary>
            <param name="spec">Refinement specification requesting the facet</param>
            <param name="facet">Solr facet data</param>
            <returns>StringFacet based on data returned from a Solr query</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.CreateValue``1(``0,``0)">
            <summary>
            Creates a BoundedValue instance representing the specified
            upper and lower bounds.
            </summary>
            <typeparam name="T">Value type</typeparam>
            <param name="lowerBound">Lower bound value</param>
            <param name="upperBound">Upper bound value</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFacetTransformer.ToLocalTime(System.DateTime)">
            <summary>
            Converts the specified DateTime value to the local time.
            </summary>
            <param name="value">DateTime value to convert</param>
            <returns>DateTime value as local time</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrQueryPropositionService">
            <summary>
            A class that submits queries for auto completion to the Solr Provider
            and returns the relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">QuerySuggestionRequest parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryPropositionService.GetQueryCompletionFromService(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrQueryPropositionService.Settings">
            <summary>
            Gets or sets the search settings for the configuration provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrQueryPropositionService.SolrSettings">
            <summary>
            Gets or sets the search settings for the configuration provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrFormatter">
            <summary>
            The SolrFormatter class exposes methods facilitating the conversion of
            supported .NET data types to their corresponding Solr formats.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.DateTime)">
            <summary>
            Gets a DateTime value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.Int64)">
            <summary>
            Gets a long value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.Double)">
            <summary>
            Gets a double value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.Boolean)">
            <summary>
            Gets a boolean value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.String)">
            <summary>
            Gets a string value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetValue(System.String,System.Boolean)">
            <summary>
            Gets a string value formatted for submission to Solr.
            </summary>
            <param name="val">Value to format</param>
            <returns>Formatted string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.String)">
            <summary>
            Gets a filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="value">Value to filter by</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.Int64)">
            <summary>
            Gets a filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="value">Value to filter by</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.Double)">
            <summary>
            Gets a filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="value">Value to filter by</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.DateTime)">
            <summary>
            Gets a filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="value">Value to filter by</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.Int64,System.Int64)">
            <summary>
            Gets a ranged filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="lowerBound">Lower bound of the range</param>
            <param name="upperBound">Upper bound of the range</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.Double,System.Double)">
            <summary>
            Gets a ranged filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="lowerBound">Lower bound of the range</param>
            <param name="upperBound">Upper bound of the range</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.GetFilterQuery(Ektron.Cms.Search.Expressions.PropertyExpression,System.DateTime,System.DateTime)">
            <summary>
            Gets a ranged filter query string prepared for submission to Solr.
            </summary>
            <param name="property">Property on which to filter</param>
            <param name="lowerBound">Lower bound of the range</param>
            <param name="upperBound">Upper bound of the range</param>
            <returns>Filter query string</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.RemoveLanguagePrefix(System.String)">
            <summary>
            Removes the language prefix, which is a product of the indexing
            process, from string values.
            </summary>
            <param name="input">Index value</param>
            <returns>Cleaned string value</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrFormatter.RemoveLanguagePrefix(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the language prefix, which is a product of the indexing
            process, from string values.
            </summary>
            <param name="input">Index values</param>
            <returns>Cleaned string values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyNameResolver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyNameResolver.Resolve(System.String,Ektron.Cms.Search.PropertyCategory,Ektron.Cms.Search.PropertyType)">
            <summary>
            Resolves the Solr index field associated with the specified CMS field.        
            </summary>
            <param name="name">CMS field name</param>
            <param name="category">Category of CMS property</param>
            <param name="type">Data type for property values</param>
            <returns>Resolved property name</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyNameResolver.Resolve(System.String,Ektron.Cms.Search.PropertyCategory,Ektron.Cms.Search.PropertyType,System.Boolean)">
            <summary>
            Resolves the Solr index field associated with the specified CMS field.        
            </summary>
            <param name="name">CMS field name</param>
            <param name="category">Category of CMS property</param>
            <param name="type">Data type for property values</param>
            <param name="stripChars">Strip non-alphanumeric characters</param>
            <returns>Resolved property name</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrPropertyNameResolver.CreatePropertyName(System.String,Ektron.Cms.Search.PropertyCategory,System.Boolean)">
            <summary>
            Creates a property name for the specified CMS field.
            </summary>
            <param name="name">CMS field name</param>
            <param name="category">Category of CMS property</param>
            <param name="stripChars">Strip non-alphanumeric characters</param>
            <returns>Property name</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder">
            <summary>
            The SolrQueryRequestBuilder class is capable of assembling a query request 
            for a Solr instance. (3.6.x)
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.#ctor(Ektron.Cms.Search.SearchSettingsData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.Build(System.Int32)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID for this request</param>
            <returns>SolrRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.Build(System.Int32,Ektron.Cms.Search.Expressions.Expression@)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID for this request</param>
            <param name="expression">
            Modified expression tree represented by the request being built.
            </param>
            <returns>SolrRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddQueryText(System.String)">
            <summary>
            Adds the specified query text to the query.
            </summary>
            <param name="queryText">Query text</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddExpression(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds the specified expression to the request.
            </summary>
            <param name="expression">Query expression</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddScope(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Adds the specified scopes to the request.
            </summary>
            <param name="scopes">Collection of scopes</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddReturnProperties(System.Collections.Generic.HashSet{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds the specified return properties to the request.
            </summary>
            <param name="properties">Collection of properties</param>
            <returns>Reference to this request builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddOrderData(System.Collections.Generic.List{Ektron.Cms.Search.OrderData})">
            <summary>
            Adds the specified order data to the request.
            </summary>
            <param name="orderData">Sort order data</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddPagingInfo(Ektron.Cms.PagingInfo)">
            <summary>
            Adds the specified paging data to the request.
            </summary>
            <param name="pagingInfo">Paging data</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddLocale(Ektron.Cms.Search.Locale)">
            <summary>
            Adds the specified locale information to the request.
            </summary>
            <param name="locale">Request locale</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddSimilarityCriteria(Ektron.Cms.Search.SimilaritySearchCriteria)">
            <summary>
            Adds similarity criteria information to the request.
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>       
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.AddRefinementCriteria(Ektron.Cms.Search.RefinementCriteria)" -->
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.EnsureBounds(Ektron.Cms.Search.BoundedValue{System.DateTime})">
            <summary>
            Ensures that the specified bounds are valid, otherwise an exception is thrown.
            </summary>
            <param name="bounds">Bounds value to validate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.EnsureBounds(Ektron.Cms.Search.BoundedValue{System.Double})">
            <summary>
            Ensures that the specified bounds are valid, otherwise an exception is thrown.
            </summary>
            <param name="bounds">Bounds value to validate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.EnsureBounds(Ektron.Cms.Search.BoundedValue{System.Int64})">
            <summary>
            Ensures that the specified bounds are valid, otherwise an exception is thrown.
            </summary>
            <param name="bounds">Bounds value to validate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.PrepareSortProperty(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Prepares a requested sort property for application to the query.
            </summary>
            <remarks>
            String fields for Ektron properties are redirected to the corresponding
            exact-match companion field as tokenized data is not supported for sorting.
            </remarks>
            <param name="property">Sort property to be prepared</param>
            <returns>Prepared sort property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether stemming should be 
            applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether implicit and behavior 
            should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrQueryRequestBuilder.IncludeSpecialTermResults">
            <summary>
            Gets or sets a flag indicating whether special term results should be included.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder">
            <summary>
            The SolrQueryResponseBuilder is a class capable of assembling a Solr query response.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.#ctor(Ektron.Cms.Search.SearchSettingsData,Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Constructor
            </summary>
            <param name="settingsData">Search settings</param>
            <param name="criteria">Search criteria</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.Build">
            <summary>
            Builds response data from the data supplied to this response builder.
            </summary>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddSpellingSuggestions(System.String,System.String)">
            <summary>
            Adds the specified query spelling suggestion to the response.
            </summary>
            <param name="original">Original query text</param>
            <param name="suggestion">Spelling suggestion</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddSpellingSuggestions(System.String,Ektron.Cms.Search.Proxies.SolrQueryService.SolrSpellCheckResults)">
            <summary>
            Adds the specified query spelling suggestion to the response.
            </summary>
            <param name="original">Original query text</param>
            <param name="spellCheckResults">Spelling suggestions</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddElapsedTime(System.Int32)">
            <summary>
            Adds the specified elapsed time (in milliseconds) to the response.
            </summary>
            <param name="milliseconds">Elapsed time</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddPagingInfo(Ektron.Cms.PagingInfo,System.Int32)">
            <summary>
            Adds the specified paging information to the response.
            </summary>
            <param name="pagingInfo">Paging information</param>
            <param name="totalRecords">Total record count</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddReleventResults(System.Collections.Generic.ICollection{Ektron.Cms.Search.Proxies.SolrQueryService.SolrResult})">
            <summary>
            Adds the specified result set to the response.
            </summary>
            <param name="resultSet">Query result set</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddSuggestedResults">
            <summary>
            Adds suggested result data (derived from the query terms)  
            to the response.
            </summary>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddQueryTerms(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified query terms to the response.
            </summary>
            <param name="terms">List of query terms</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddQueryTerms(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds a list of query terms, derived from the specified expression,
            to the response.
            </summary>
            <param name="expression">Expression tree</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddHighlights(Ektron.Cms.Search.Proxies.SolrQueryService.SolrHighlights)">
            <summary>
            Adds highlight data (hit highlighted summary) to the response.
            </summary>
            <param name="highlights">Solr highlight data</param>
            <returns>Reference to this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.AddRefinementResults(Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacets)">
            <summary>
            Adds refinement results to search response.
            </summary>
            <param name="solrFacets">Refinement results</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToSearchResultData(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResult)">
            <summary>
            Converts a SolrDocument instance to a SearchResultData instance.
            </summary>
            <param name="d">SolrDocument to convert</param>
            <returns>SearchResultData instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToBooleanEnumerable(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResultField)">
            <summary>
            Converts the specified field value to an enumerable of bool values.
            </summary>
            
            <param name="resultField">Solr document</param>
            <returns>Enumerable of bool values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToIntegerEnumerable(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResultField)">
            <summary>
            Converts the specified field value to an enumerable of long values.
            </summary>
            
            <param name="resultField">Solr document</param>
            <returns>Enumerable of long values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToDecimalEnumerable(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResultField)">
            <summary>
            Converts the specified field value to an enumerable of double values.
            </summary>
            
            <param name="resultField">Solr document</param>
            <returns>Enumerable of double values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToDateEnumerable(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResultField)">
            <summary>
            Converts the specified field value to an enumerable of DateTime values.
            </summary>
            
            <param name="resultField">Solr document</param>
            <returns>Enumerable of DateTime values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.ToStringEnumerable(Ektron.Cms.Search.Proxies.SolrQueryService.SolrResultField)">
            <summary>
            Converts the specified field value to an enumerable of string values.
            </summary>
            
            <param name="resultField">Solr document</param>
            <returns>Enumerable of string values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.PrepareHighlights">
            <summary>
            Prepares the 'hit highlighted summary' for each result if
            summaries were requested (and if summary data was returned
            from the search provider).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrQueryResponseBuilder.GetStringFacet(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.Proxies.SolrQueryService.SolrFacet)">
            <summary>
            Converts a SolrFacet to the corresponding StringFacet type.
            </summary>
            <param name="p">Refinement property</param>
            <param name="f">Solr facet response</param>
            <returns>StringFacet representation of this data</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrSearchProvider">
            <summary>
            The SolrSearchProvider is an implementation of the ISearchProvider
            interface supporting communication with the configured Solr instance.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria to the configured Solr instance.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria to the configured Solr instance.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.Validate(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Validates that the specified criteria is consistent with the
            provider's feature set.
            </summary>
            <param name="criteria">Search criteria</param>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.HandleFaultException(System.ServiceModel.FaultException{System.ServiceModel.ExceptionDetail})">
            <summary>
            Handles a FaultException returned from the Search Server query
            service and translates it to the appropriate SearchException.
            </summary>
            <remarks>
            If the status code does not indicate an error, no exception
            will be returned.
            </remarks>
            <param name="faultException">Exception to be handled</param>
            <returns>SearchException to be thrown</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchProvider.LogRequest(Ektron.Cms.Search.Proxies.SolrQueryService.SolrRequest)">
            <summary>
            Logs the request information to the Event Viewer.
            </summary>
            <param name="request">Request data</param>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrSearchProvider.Settings">
            <summary>
            Gets or sets the search settings for the configuration provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrSearchProvider.SuggestedResults">
            <summary>
            Gets or sets a reference to the implementation of ISuggestedResults.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Solr.SolrSearchResultBuilder">
            <summary>
            The SolrSearchResultBuilder class is an ISearchResultBuilder implementation
            supporting the assembling of data for individual result records returned
            from a query of the Solr search engine.
            </summary>    
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSearchResultBuilder.ToLocalTime(System.DateTime)">
            <summary>
            Converts the specified DateTime value to the local time.
            </summary>
            <param name="value">DateTime value to convert</param>
            <returns>DateTime value as local time</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Solr.SolrSettingsData.Empty">
            <summary>
            Gets the empty singleton instance of SearchServerSettingsData.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Solr.SolrSettingsManager.GetItem">
            <summary>
            Gets the search server specific settings data from the database.
            </summary>
            <returns>Search server configuration</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SharePointScopeResolver.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SharePointScopeResolver.#ctor(Ektron.Cms.Search.SearchServerSettingsData)">
            <summary>
            Constructor
            </summary>
            <param name="settings">Search Settings</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SharePointScopeResolver.Resolve(Ektron.Cms.Search.Expressions.ScopeExpression)">
            <summary>
            Resolves the scope name for the specified ScopeExpression.
            </summary>
            <param name="scope">Scope expression</param>
            <returns>Scope name</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SharePointScopeResolver.Algorithm">
            <summary>
            Gets the hash algorithm applied to long scope names.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder">
            <summary>
            The SS2010FullTextQueryRequestBuilder class is a component capable of assembling
            a full text SQL query request for Search Server 2010.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.#ctor(Ektron.Cms.Search.ISearchSettings)">
            <summary>
            Constructor
            </summary>
            <param name="searchSettingsManager">Search settings</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.Build(System.Int32)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID</param>
            <returns>QueryPacket instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.Build(System.Int32,Ektron.Cms.Search.Expressions.Expression@)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID</param>
            <param name="expression">
            Modified expression tree represented by the request being built.
            </param>
            <returns>KeywordQueryRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddQueryText(System.String)">
            <summary>
            Adds the specified query text to the query. [Not supported]
            </summary>
            <param name="queryText">Query text</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddExpression(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds the specified expression to the request.
            </summary>
            <param name="expression">Query expression</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddScope(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Adds the specified scopes to the request.
            </summary>
            <param name="scopes">Collection of scopes</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddReturnProperties(System.Collections.Generic.HashSet{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds the specified return properties to the request.
            </summary>
            <param name="properties">Collection of properties</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddOrderData(System.Collections.Generic.List{Ektron.Cms.Search.OrderData})">
            <summary>
            Adds the specified order data to the request.
            </summary>
            <param name="orderData">Sort order data</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddPagingInfo(Ektron.Cms.PagingInfo)">
            <summary>
            Adds the specified paging data to the request.
            </summary>
            <param name="pagingInfo">Paging data</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddLocale(Ektron.Cms.Search.Locale)">
            <summary>
            Adds the specified locale information to the request.
            </summary>
            <param name="locale">Request locale</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddSimilarityCriteria(Ektron.Cms.Search.SimilaritySearchCriteria)">
            <summary>
            Adds similarity criteria information to the request. [Not supported]
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.AddRefinementCriteria(Ektron.Cms.Search.RefinementCriteria)">
            <summary>
            Adds refinement criteria information to the request. [Not supported]
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.IncludeSpecialTermResults">
            <summary>
            Gets or sets a flag indicating whether special term results should be included.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether stemming should be applied to the query. [Not supported]
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010FullTextQueryRequestBuilder.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether implicit and behavior should be applied to the query. [Not supported]
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder">
            <summary>
            The SS2010KeywordQueryRequestBuilder class is a component capable of assembling
            a keyword query request for Search Server 2010.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.#ctor(Ektron.Cms.Search.ISearchSettings)">
            <summary>
            Constructor
            </summary>
            <param name="searchSettingsManager">Search settings</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.Build(System.Int32)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="language">Language ID</param>
            <returns>QueryPacket instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.Build(System.Int32,Ektron.Cms.Search.Expressions.Expression@)">
            <summary>
            Builds a request from the data supplied to this request builder.
            </summary>
            <param name="expression">
            Modified expression tree represented by the request being built.
            </param>
            <param name="language">Language ID</param>
            <returns>KeywordQueryRequest instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddQueryText(System.String)">
            <summary>
            Adds the specified query text to the query.
            </summary>
            <param name="queryText">Query text</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddExpression(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds the specified expression to the request.
            </summary>
            <param name="expression">Query expression</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddScope(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Adds the specified scopes to the request.
            </summary>
            <param name="scopes">Collection of scopes</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddReturnProperties(System.Collections.Generic.HashSet{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds the specified return properties to the request.
            </summary>
            <param name="properties">Collection of properties</param>
            <returns>Reference to this request builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddOrderData(System.Collections.Generic.List{Ektron.Cms.Search.OrderData})">
            <summary>
            Adds the specified order data to the request.
            </summary>
            <param name="orderData">Sort order data</param>
            <returns>Reference to this request builder</returns> 
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddPagingInfo(Ektron.Cms.PagingInfo)">
            <summary>
            Adds the specified paging data to the request.
            </summary>
            <param name="pagingInfo">Paging data</param>
            <returns>Reference to this request builder</returns>  
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddLocale(Ektron.Cms.Search.Locale)">
            <summary>
            Adds the specified locale information to the request.
            </summary>
            <param name="locale">Request locale</param>
            <returns>Reference to this request builder</returns>   
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddSimilarityCriteria(Ektron.Cms.Search.SimilaritySearchCriteria)">
            <summary>
            Adds similarity criteria information to the request. [Not supported]
            </summary>
            <param name="similarityCriteria">Similarity criteria information</param>
            <returns>Reference to this request builder</returns>        
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.AddRefinementCriteria(Ektron.Cms.Search.RefinementCriteria)">
            <summary>
            Adds refinement criteria information to the request. [Not supported]
            </summary>
            <param name="refinementCriteria">Refinement criteria information</param>
            <returns>Reference to this request builder</returns>       
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.BuildScopeQuery(System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression})">
            <summary>
            Builds a scope query string based on the specified ScopeExpression
            collection.
            </summary>
            <param name="scopeExpressions">Target scopes</param>
            <returns>Scope query string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether stemming should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether implicit and behavior should be applied to the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SS2010.SS2010KeywordQueryRequestBuilder.IncludeSpecialTermResults">
            <summary>
            Gets or sets a flag indicating whether special term results should be included.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder">
            <summary>
            The SS2010QueryResponseBuilder is a class describing a component capable 
            of assembling a Search Server 2010 query response.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.#ctor(Ektron.Cms.Search.ISuggestedResults)">
            <summary>
            Constructor
            </summary>
            <param name="suggestedResultsManager">Suggested results manager</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.Build">
            <summary>
            Builds response data from the data supplied to this response builder.
            </summary>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddSpellingSuggestions(System.String,System.String)">
            <summary>
            Adds the specified query spelling suggestion to the response.
            </summary>
            <param name="original">Original query text</param>
            <param name="suggestion">Spelling suggestion</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddElapsedTime(System.Int32)">
            <summary>
            Adds the specified elapsed time (in milliseconds) to the response.
            </summary>
            <param name="milliseconds">Elapsed time</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddPagingInfo(Ektron.Cms.PagingInfo,System.Int32)">
            <summary>
            Adds the specified paging information to the response.
            </summary>
            <param name="pagingInfo">Paging information</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddQueryTerms(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Adds a list of query terms, derived from the specified expression,
            to the response.
            </summary>
            <param name="expression">Expression tree</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddQueryTerms(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified query terms to the response.
            </summary>
            <param name="terms">List of query terms</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddReleventResults(System.Data.DataTable)">
            <summary>
            Adds the specified result set to the response.
            </summary>
            <param name="resultSet">Query result set</param>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010QueryResponseBuilder.AddSuggestedResults">
            <summary>
            Adds suggested result data (derived from the query terms)  
            to the response.
            </summary>
            <returns>Instance of this response builder</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Validation.RefinementsValidationRule">
            <summary>
            The RefinementsValidationRule ensures that the caller has not
            supplied any refinements criteria as it is not supported for
            Search Server 2010.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Validation.RefinementsValidationRule.#ctor(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Constructor
            </summary>
            <param name="criteria">Criteria to be validated</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Validation.RefinementsValidationRule.Validate">
            <summary>
            Validates that the user has not supplied any refinements criteria.
            A NotSupportedException is thrown if refinements criteria is found.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Validation.SimilaritySearchValidationRule">
            <summary>
            The SimilaritySearchValidationRule ensures that the caller has not
            supplied any similarity search criteria as it is not supported for
            Search Server 2010.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Validation.SimilaritySearchValidationRule.#ctor(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Constuctor
            </summary>
            <param name="criteria">Search criteria</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Validation.SimilaritySearchValidationRule.Validate">
            <summary>
            Validates that the user has not supplied any similarity search criteria.
            A NotSupportedException is thrown if similarity search criteria is found.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CriteriaValidator">
            <summary>
            The SS2010CriteriaValidator class validates that search criteria 
            is consistent with the feature set supported by Search Server 2010.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CriteriaValidator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CriteriaValidator.AddRule(Ektron.Cms.Search.ICriteriaValidationRule)">
            <summary>
            Adds a validation rule to this validator.
            </summary>
            <param name="rule">Rule to be added</param>
        </member>
        <member name="M:Ektron.Cms.Search.CriteriaValidator.Validate">
            <summary>
            Executes all validation rules associated with this validator.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchRequestServiceFactory">
            <summary>
            The SearchRequestServiceFactory encapsulates the construction logic
            for SearchRequestService clients.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchRequestServiceFactory.Create(System.String)">
            <summary>
            Creates and returns a client capable of communicating with the
            SearchRequestService hosted at the specified endpoint.
            </summary>
            <param name="endpoint">Service URL</param>
            <returns>SearchRequestServiceClient</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchRequestServiceFactory.Close(Ektron.Cms.Search.Proxies.SearchRequestService.ISearchRequestService)">
            <summary>
            Safely closes the specified proxy instance.
            </summary>
            <param name="service">Proxy instance to be closed</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchRequestServiceFactory.GetClient``1(System.String)">
            <summary>
            Returns an open channel to the specified endpoint.
            </summary>
            <returns>Channel to the endpoint</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchRequestServiceFactory.GetHttpBinding">
            <summary>
            Creates and initializes the HTTP binding used to communicate with
            this applications respective services.
            </summary>
            <returns>HTTP binding</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchServerCrawler">
            <summary>
            Manages search server crawl initiation for relevent CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.GetState">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an full crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartIncrementalCrawl">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartIncrementalCrawl(System.Boolean)">
            <summary>
            Requests that the local Ektron Search Server Service
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
            <param name="isDelayed">Flag indicating whether to respect the crawl interval</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartFullCrawl">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an full crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartIncrementalCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the local Search Request Service instance
            relay a request for an incremental crawl to the Search Server
            content source associated with the calling CMS site.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for an incremental crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="isDelayed">Flag indicating whether to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests that the SolrAdminService
            relay a request for a full crawl of the job associated with the
            Solr core associated with the calling CMS site.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchServerCrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests a full crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchServerCrawler.ServiceEndpoint">
            <summary>
            Gets the search crawler service endpoint.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SourceData">
            <summary>
            The SourceData class identifies an individual
            search data source (index, catalog, etc.).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SourceData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SourceData.Name">
            <summary>
            Gets or sets the name of the search data source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SourceData.Type">
            <summary>
            Gets or sets the search data source type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SourceData.StartAddresses">
            <summary>
            Gets or sets a collection of addresses that identify
            the base or root of a search data source.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SourceDataType">
            <summary>
            The SourceDataType enumeration describes the various
            types of search data sources.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Expressions.FromExpression">
            <summary>
            Defines an expression representing the "from" clause in a SQL query
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.FromExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.FromExpression.Accept(Ektron.Cms.Search.SS2010.SS2010ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Expressions.InflectionalStringValueExpression">
            <summary>
            Defines an expression representing a string value and its
            applicable inflections.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.InflectionalStringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.InflectionalStringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Expressions.OrderByExpression">
            <summary>
            Defines an expression representing an "order-by" clause for a SQL query
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.OrderByExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.OrderByExpression.Accept(Ektron.Cms.Search.SS2010.SS2010ExpressionVisitor)">
            <summary>
            Accepts a SS2008 specific visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.SelectExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.SelectExpression.Accept(Ektron.Cms.Search.SS2010.SS2010ExpressionVisitor)">
            <summary>
            Accepts a SS2008 specific visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.Expressions.ThesaurusStringValueExpression">
            <summary>
            Defines an expression representing a string value and its
            applicable synonyms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.ThesaurusStringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.ThesaurusStringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.WhereExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.Expressions.WhereExpression.Accept(Ektron.Cms.Search.SS2010.SS2010ExpressionVisitor)">
            <summary>
            Accepts a SS2008 specific visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.SS2010AuthenticationHandler">
            <summary>
            Authentication handler for SS2010 query service requests
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SS2010.SS2010SearchProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010SearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria to the Sharepoint/Search Server.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010SearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits an advanced query according to the specified criteria  to the Sharepoint/Search Server.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SS2010.SS2010SearchProvider.Validate(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Validates that the specified criteria is consistent with the
            Search Server 2010 feature set.
            </summary>
            <param name="criteria">Search criteria</param>
        </member>
        <member name="T:Ektron.Cms.Search.Validation.QueryablePropertyValidationRule">
            <summary>
            The QueryablePropertyValidationRule ensures that the properties referenced
            in the expression tree of a particluar query are in fact all supported
            for querying.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Validation.QueryablePropertyValidationRule.queryPropertyBlacklist">
            <summary>
            Blacklist of properties that cannot be queried (only returned).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Validation.QueryablePropertyValidationRule.#ctor(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Constructor
            </summary>
            <param name="criteria">Criteria to validate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Validation.QueryablePropertyValidationRule.Validate">
            <summary>
            Ensures that the properties referenced in the expression tree of 
            a particluar query are in fact all supported for querying.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Validation.SortablePropertyValidationRule">
            <summary>
            The SortablePropertyValidateRule ensures that the 'sort by' properties
            specified in a particular query are allowed for sorting.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Validation.SortablePropertyValidationRule.sortPropertyBlacklist">
            <summary>
            Blacklist of properties that are not supported for sorting.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Validation.SortablePropertyValidationRule.sortPropertyAscendingBlacklist">
            <summary>
            Blacklist of properties that are not supported for ascending sorts.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Validation.SortablePropertyValidationRule.#ctor(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Constructor
            </summary>
            <param name="criteria">Criteria to validate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Validation.SortablePropertyValidationRule.Validate">
            <summary>
            Ensures that the 'sort by' properties specified in a 
            particular query are allowed for sorting.
            </summary>
        </member>
    </members>
</doc>
