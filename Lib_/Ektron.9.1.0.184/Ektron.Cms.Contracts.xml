<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ektron.Cms.Contracts</name>
    </assembly>
    <members>
        <member name="T:Ektron.Cms.Activity.ActivityCommentProperty">
            <summary>
            Enumeration of ActivityComment columns available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.ActivityId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.Comment">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserAvatar">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserDisplayName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.DateCreated">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.CanDelete">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCommentCriteria">
            <summary>
            Criteria class for retrieving ActivityComment data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.Criteria`1">
            <summary>
            Class used to represent Criteria for retreiving items within the CMS. 
            This class is used as the parameter to most GetList methods found in the Manager classe sin the Ektron.Cms.Framework APIs.
            </summary>
            <typeparam name="T">The enum representing the propertys used for filtering the given data classes.  For example, ContentProperty would be used for filtering in the ContentManager Api.</typeparam>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.AddFilter(`0,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a new CriteriaFilter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">
            The value to filter on.  The value should be the same data type as the corresponding property in the associated data class.
            For example, if Filtering on ContentProperty.Id, the value should be a long because ContentData.Id is a long.
            If using the CriteriaFilterOperator.In or NotIn operator, the Value you should be an IEnumerable list or List of long values.
            </param>
            <returns>newly added filter.</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.FindAllFieldFilters(`0)">
            <summary>
            Used to find filters within the criteria that use the supplied Field value.  Returns null if no filters are found.
            </summary>
            <param name="field">The field value to find filters for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.FindFieldFilter(`0)">
            <summary>
            Used to find a filter within the criteria that use the supplied Field value. Returns the first one found or null if no filters are found.
            </summary>
            <param name="field">The field value to find filters for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.PopulateCommand(System.Data.Common.DbCommand,System.Collections.Generic.Dictionary{`0,System.String},System.String)">
            <summary>
            Populates the supplied command object with the Sql select statement and DBParameters based upon the current criteria object.
            The generated sql select statement generates the column list in the same order as supplied in the columnMap.  A second statement is also created
            That returns a single value which is the total number of records available matching the criteria filter.  Thsi would be used to populate the
            Criteria.PagingInfo.TotalRecords property.
            </summary>
            <param name="command">DBCommand to populate.</param>
            <param name="columnMap">Dictionary mapping T enum values to valid column names in db.</param>
            <param name="tableName">Name of table to create select statement for.</param>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.GenerateSql(System.Data.Common.DbCommand,System.Collections.Generic.Dictionary{`0,System.String},System.String@,System.String@,System.String@)">
            <summary>
            Generates the where clause and order by clause for the current criteria object.
            </summary>
            <param name="command">DBCommand to add DBParameters to.</param>
            <param name="columnMap">hashtable mapping T Field values to string column names.</param>
            <param name="whereClause">out value - resulting where clause</param>
            <param name="orderByClause">out value - resulting order by</param>
        </member>
        <member name="M:Ektron.Cms.Common.Criteria`1.ToCacheKey">
            <summary>
            Returns a string representation of the criteria that can be used as a cache key.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.CurrentFilterGroup">
            <summary>
            Gets the default (first) filtergroup.  Used for basic adding\removing filters.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.UseAggregation">
            <summary>
            Set whether to use aggregation.  This is is for internal use.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.AggregateField">
            <summary>
            Field to use for aggregation. This is is for internal use.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.GroupByOperation">
            <summary>
            The group by operation to apply to the results(Sum or None). This is is for internal use.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.GroupByField">
            <summary>
             The group by field to apply to the results. This is is for internal use.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.Condition">
             <summary>
             The Logical operator to apply to the filters.  The default value is "AND".
             </summary>
            <remarks>The Criteira Condition controls the operator for the default filter group as well as the ANDing\Oring the filter groups together.</remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.PagingInfo">
            <summary>
            The paging parameters to apply to the search.  By default, PagingInfo.RecordsPerPage is set to 50.  
            To retreive more records, modify this value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.OrderByField">
            <summary>
            Set the property used to order the results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.OrderByDirection">
            <summary>
            Sets the order direction (Ascending or Descending).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.Filters">
            <summary>
            Lists of filters defined in this criteria object.  To add new Filters, you can add them here or use the AddFilter method (reccomended).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.FilterGroups">
            <summary>
            Gets  alist of filter groups.  Filtergroups can be created to do filter grouping (i.e. parenthesis in the where clause).
            The groups use the criteria's Condition like other filters, but can use their own condition internally.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.Columns">
            <summary>
            The columns of the criteria
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.RequiredFilterGroup">
            <summary>
            Gets or sets a required filter group.  This group will be appended to the final filter using an AND operator regardless of the criteria's 
            defined Condition.  This would be used to enforce language restriction, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Criteria`1.RequiredFilterSql">
            <summary>
            Gets or sets a required filter.  This sql will be added to the end of the where filter using an AND operator.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCommentData">
            <summary>
            Data class representing comments on an ActivityStream Activity
            </summary>
        </member>
        <member name="T:Ektron.Cms.CmsData`1">
            <summary>
            Cms Data Base class
            </summary>
            <typeparam name="T">Type</typeparam>
        </member>
        <member name="T:Ektron.Cms.BaseData`1">
            <summary>
            Base data class 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Ektron.Cms.ICmsBaseData`1.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="M:Ektron.Cms.BaseData`1.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="M:Ektron.Cms.BaseData`1.GetMessage(System.String)">
            <summary>
            Get Message from resource
            </summary>
            <param name="messageTitle">message title</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.CmsData`1.Clone">
            <summary>
            Perform a deep Copy of the object.
            </summary>
            <returns>The copied object.</returns>
        </member>
        <member name="P:Ektron.Cms.CmsData`1.Id">
            <summary>
            Gets or sets the ID of this data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.Id">
            <summary>
            Gets or sets the Id of the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.ActivityId">
            <summary>
            Gets or sets the Id of the Activity the comment belongs to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.Comment">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserId">
            <summary>
            Gets or sets the ID of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserAvatar">
            <summary>
            Gets or sets the avater of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserDisplayName">
            <summary>
            Gets or sets the display name of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.DateCreated">
            <summary>
            Gets or sets the date the comment was created.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.TimeLapse">
            <summary>
            Gets or sets the time lapse for the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.CanDelete">
            <summary>
            Gets or sets the Can delete permissions for the comment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCriteria">
            <summary>
            Criteria class for use specifically with ActivityStreams.  It can be used in place of Criteria&gt;ActivityProperty&lt; for 
            further customizing the activity result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCriteria.ReturnCommentCount">
            <summary>
            Gets or sets the number of comments to return for each activity in the requested activity list.  
            If 0, no comments will be returned.
            If -1, All Comments will be returned.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityProperty">
            <summary>
            Enumeration representing ActivityData properties that can be filtered and sorted on.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityData">
            <summary>
            Data class representing an Activity that has occured within the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CmsLocalizedData`1.LanguageId">
            <summary>
            Gets or sets the Language ID of this data object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Activity.ActivityData.Validate">
            <summary>
            Validates the current ActivityData instance is in a valid state for saving.  Returns collection of validation errors if not valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Id">
            <summary>
            Gets or set the Id of the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ActivityTypeId">
            <summary>
            Gets or sets the ActivityType for this Activity.  Built in CMS Activity are defined in EkEnumeration.ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ObjectId">
            <summary>
            Gets or sets the Id of the object associated with this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ActionUser">
            <summary>
            Gets or sets the user who caused this activity to occur. For example, the user who posted a blog post or uploaded a document.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ScopeObjectId">
            <summary>
            Gets or sets the Id of the scope object associated with this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.LanguageId">
            <summary>
            Gets or sets the Language associated with this activity's message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Message">
            <summary>
            Gets or sets the message for this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Date">
            <summary>
            Gets or sets the date the activity occured.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.SiteId">
            <summary>
            Gets or sets the Id of the site that the activity originated from.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.TimeLapse">
            <summary>
            Gets the time lapse for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.CommentCount">
            <summary>
            Gets or sets the Comment count for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Comments">
            <summary>
            Gets or sets the Comments for the activity.  This property will not be populated unless explicitly specified when calling API.
            To get the total comment count, see CommentCount property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.UniqueId">
            <summary>
            Gets or sets the UniqueIdentifier for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.CanComment">
            <summary>
            Gets or sets the Can Comment permissions for the activity.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeProperty">
            <summary>
            Enumeration of ActivityType columns available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.ObjectType">
            <summary>
            (EkEnumeration.ActivityObjectType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.ActionType">
            <summary>
            (EkEnumeration.ActivityActionType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Scope">
            <summary>
            (EkEnumeration.ActivityScope)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.DisplayInPreferences">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.IsPublishByDefault">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.SupportsComments">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeCriteria">
            <summary>
            Criteria class for retrieving ActivityType data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeData">
            <summary>
            Data class representing activity types that inside and outside the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.Name">
            <summary>
            gets or sets the name of the ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.ObjectType">
            <summary>
            gets or sets the Cms Object Type associated with activity.  This may be null for custom activities.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.ActionType">
            <summary>
            gets or sets the Action associated with the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.Scope">
            <summary>
            gets or sets the Scope of the activity.  For example, it may originate from a community group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.DisplayInPreferences">
            <summary>
            Gets or sets the Preference Display flag.  If true, users will be able to define notification preferences for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.SupportsComments">
            <summary>
            Gets or sets the flag indicating if this ActivityType supports commenting.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.IActivityComment">
            <summary>
            Interface for ActivityComment business logic.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.BeaconData">
            <summary>
            Provider Information that is available to public. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.ProviderType">
            <summary>
            provider type of beacon data, it could be "google", "WebTrends" etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.UserAccount">
            <summary>
            User Account of the beacon data. It usually the id inserted to the script.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.TrackingCodePath">
            <summary>
            Path to locate the beacon user control which contains the script to insert to the page.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod">
            <summary>
            Time peroid over which values are totalled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod.EntireDateRange">
            <summary>
            Values are totalled for the entire StartDate to EndDate range
            </summary>
        </member>
        <member name="F:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod.ByDay">
            <summary>
            Values are totalled for each day within the StartDate to EndDate range
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilter.#ctor(Ektron.Cms.Interfaces.Analytics.Provider.Metric,Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterOperator,System.Double)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilter.#ctor(Ektron.Cms.Interfaces.Analytics.Provider.Dimension,Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterOperator,System.String)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterGroup.AddFilter(Ektron.Cms.Interfaces.Analytics.Provider.Metric,Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterOperator,System.Double)">
            <summary>
            Adds a new CriteriaFilter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
            <returns>newly added filter.</returns>
        </member>
        <member name="P:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterGroup.Condition">
            <summary>
            Gets or Sets the LogicalOperator for the FilterGroup.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterGroup.AddFilter(Ektron.Cms.Interfaces.Analytics.Provider.Dimension,Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterOperator,System.String)">
            <summary>
            Adds a new filter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
            <returns>newly added filter.</returns>
        </member>
        <member name="P:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterGroup.Condition">
            <summary>
            Gets or Sets the LogicalOperator for the FilterGroup.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.SegmentFilter.#ctor(Ektron.Cms.Analytics.Providers.SegmentProperty,Ektron.Cms.Interfaces.Analytics.Provider.SegmentFilterOperator,System.String)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="T:Ektron.Cms.Analytics.IGoogleAnalyticsV3Manager">
            <summary>
            Google Analytics V3 Interface.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.IGoogleAnalyticsV3Manager.GetUserAccount">
            <summary>
            Get User Account Details
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.IGoogleAnalyticsV3Manager.GetProfileId">
            <summary>
            Get Profile Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.IGoogleAnalyticsV3Manager.GetKeyFilePath">
            <summary>
            Get Key File Path
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.IGoogleAnalyticsV3Manager.GetEmailAddress">
            <summary>
            Get Email.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField">
            <summary>
            Analytics Sortable Field
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Visits">
            <summary>
            Visits
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.PageViews">
            <summary>
            Page views
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.UniqueViews">
            <summary>
            Unique Views
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.TimeOnSite">
            <summary>
            Time on site
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.TimeOnPage">
            <summary>
            Time on Page
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Bounces">
            <summary>
            Bounces
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Exits">
            <summary>
            Exists
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Entrances">
            <summary>
            Entraces
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.AverageTimeOnSite">
            <summary>
            Average Time On Site
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.AverageTimeOnPage">
            <summary>
            Average Time On Page
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.BounceRate">
            <summary>
            Bounce Rate
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.ExitRate">
            <summary>
            Exit Rate
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.PageViewsPerVisit">
            <summary>
            Pages Per Visit
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.PercentNewVisits">
            <summary>
            Percent New Visits
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsReportData">
            <summary>
            Analytics Report Data 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.Add(Ektron.Cms.Analytics.Reporting.AnalyticsReportItem)">
            <summary>
            Add method
            </summary>
            <param name="reportItem">report item</param>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeSpanOnSite(System.DateTime)">
            <summary>
            Day Averafe Time Span on Site 
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeOnPage(System.DateTime)">
            <summary>
            Returns the Day Average time on page
            </summary>
            <param name="dateTime">Date / Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeSpanOnPage(System.DateTime)">
            <summary>
            Day Average Time Span on Page
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayBounceRate(System.DateTime)">
            <summary>
            Day Bounce Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayExitRate(System.DateTime)">
            <summary>
            Day Exit Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayPagesPerVisit(System.DateTime)">
            <summary>
            Day pages per visit
            </summary>
            <param name="dateTime">Day Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.PercentNewVisits(System.DateTime)">
            <summary>
            Percent new visits
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthVisits(System.DateTime)">
            <summary>
            Montly Visits
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPageViews(System.DateTime)">
            <summary>
            Month Page Views
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthUniqueViews(System.DateTime)">
            <summary>
            Month Unique Views
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthTimeOnSite(System.DateTime)">
            <summary>
            Month Time on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthBounces(System.DateTime)">
            <summary>
            Month Bounces
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthExits(System.DateTime)">
            <summary>
            Monthly Exits
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthEntrances(System.DateTime)">
            <summary>
            Month Entrances
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeOnSite(System.DateTime)">
            <summary>
            Month Average Time on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeSpanOnSite(System.DateTime)">
            <summary>
            Monthly Average Time Span on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeOnPage(System.DateTime)">
            <summary>
            Monthly Average Time On Page
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeSpanOnPage(System.DateTime)">
            <summary>
            Month Average Time Span on Page
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthBounceRate(System.DateTime)">
            <summary>
            Monthl Bounce Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthExitRate(System.DateTime)">
            <summary>
            Monthly Exit rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPagesPerVisit(System.DateTime)">
            <summary>
            Montly Pages per visit
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPercentNewVisits(System.DateTime)">
            <summary>
            Month Percent New Visits
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.HasChildren">
            <summary>
            Has Children
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.ReportDataSet">
            <summary>
            Report Data Set for dynamics data
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.Segment">
            <summary>
            Segment Data
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalResults">
            <summary>
            Total Results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalVisits">
            <summary>
            Total Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPageViews">
            <summary>
            Total Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalUniqueViews">
            <summary>
            Total Unique Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalTimeOnSite">
            <summary>
            Total time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalTimeOnPage">
            <summary>
            Total Time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalBounces">
            <summary>
            Total Bounces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalExits">
            <summary>
            Total Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalEntrances">
            <summary>
            Total Entrances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalNewVisits">
            <summary>
            Total New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeOnSite">
            <summary>
            Total Average time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeOnPage">
            <summary>
            Total Average time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeSpanOnSite">
            <summary>
            Total Average Time Span on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeSpanOnPage">
            <summary>
            Total Average time Span on page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalBounceRate">
            <summary>
            Total Bounce Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalExitRate">
            <summary>
            Total Exit Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPagesPerVisit">
            <summary>
            Total Pages per visit
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPercentNewVisits">
            <summary>
            Total Percent New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumVisits">
            <summary>
            Maximum Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumPageViews">
            <summary>
            Maximum Page views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumUniqueViews">
            <summary>
            Maximum unique views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumTimeOnSite">
            <summary>
            Maximum time on site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumTimeOnPage">
            <summary>
            Maximum time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumExits">
            <summary>
            Maximum Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumEntrances">
            <summary>
            Maximum Entraces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.ReportItems">
            <summary>
            Report items
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.GetDateTimes">
            <summary>
            Get Date Times
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem">
            <summary>
            AnalyticsReportItem class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="visits">visits</param>
            <param name="pageViews">page Views</param>
            <param name="uniqueViews">unique views</param>
            <param name="timeOnSite">time on site</param>
            <param name="timeOnPage">time on page</param>
            <param name="bounces">bounces</param>
            <param name="exits">exits</param>
            <param name="entrances">entrances</param>
            <param name="newVisits">new Visits</param>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="visits">visits</param>
            <param name="pageViews">page Views</param>
            <param name="uniqueViews">unique Views</param>
            <param name="timeOnSite">Time on site</param>
            <param name="timeOnPage">Time on Page</param>
            <param name="bounces">bounces</param>
            <param name="exits">exits</param>
            <param name="entrances">entrances</param>
            <param name="newVisits">new Visits</param>
            <param name="date"></param>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Visits">
            <summary>
            Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PageViews">
            <summary>
            Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.UniqueViews">
            <summary>
            Unique Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.TimeOnSite">
            <summary>
            Time on Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.TimeOnPage">
            <summary>
            Time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Bounces">
            <summary>
            Bounces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Exits">
            <summary>
            Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Entrances">
            <summary>
            Entrances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.NewVisits">
            <summary>
            New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MobileViews">
            <summary>
            Mobile Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Reloads">
            <summary>
            Reloads
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Visitors">
            <summary>
            Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.KBytes">
            <summary>
            K bytes
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ClickThrough">
            <summary>
            Click through
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Revenue">
            <summary>
            Revenue
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.DailyVisitors">
            <summary>
            Daily Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MonthlyVisitors">
            <summary>
            Monthly Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.NewVisitors">
            <summary>
            New Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentOfVisits">
            <summary>
            Percent of Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Units">
            <summary>
            units
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Instances">
            <summary>
             Instances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentofPreviousStep">
            <summary>
            Percent of Previous Step
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ConversionRate">
            <summary>
            Converstion Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Subscriptions">
            <summary>
             Subscriptions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ArticleRequest">
            <summary>
            Article Request
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.FeedRead">
            <summary>
            Feed Read
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Events">
            <summary>
            Events
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Post">
            <summary>
            Posts
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Comments">
            <summary>
            Comments
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageRevenue">
            <summary>
            Average Revenue
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageUnitPerCycle">
            <summary>
            Average Unit Per Cycle
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.DailyBuyer">
            <summary>
            Daily Buyer
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MonthlyBuyer">
            <summary>
            Monthly Buyer
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartAdd">
            <summary>
            Cart Add
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartRemove">
            <summary>
            Cart Remove
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.EmailCampaigns">
            <summary>
            Email Campaigns
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CheckoutsStarted">
            <summary>
            Checkouts Started
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartCompletions">
            <summary>
            Cart Completions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ProductViews">
            <summary>
            Product Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ClickthroughRate">
            <summary>
            Click through Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.OnsiteAdClickthroughs">
            <summary>
            On site Ad Click thoughs
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.OnsiteAdImpressions">
            <summary>
            On site ad impressions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AveragePageViews">
            <summary>
            Average Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeOnSite">
            <summary>
            Average Time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeSpanOnSite">
            <summary>
            Average Time Span on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeOnPage">
            <summary>
            Average time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeSpanOnPage">
            <summary>
            Average time Span on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.BounceRate">
            <summary>
            Bounce Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ExitRate">
            <summary>
            Exit rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PagesPerVisit">
            <summary>
            Pages per visit
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentNewVisits">
            <summary>
            Percent New Visits
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.YearTotalData.MonthVisits(System.DateTime)">
            //////////////
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.ProfileId">
            <summary>Gets or Sets the ProfileId. </summary>       
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Oauth_token">
            <summary>OAuth 2.0 token for the current user.</summary>                        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.PrettyPrint">
            <summary>Returns response with indentations and line breaks.</summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Dimensions">
            <summary>A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.EndDate">
            <summary>End date for fetching Analytics data. All requests should specify an end date formatted as YYYY-MM-DD.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Filters">
            <summary>A comma-separated list of dimension or metric filters to be applied to Analytics data.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Ids">
            <summary>Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics profile ID.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Metrics">
            <summary>A comma-separated list of Analytics metrics. E.g., 'ga:visits,ga:pageviews'. At least one metric must be specified.</summary>               
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Segment">
            <summary>An Analytics advanced segment to be applied to data.</summary>              
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.Sort">
            <summary>A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.StartDate">
            <summary>Start date for fetching Analytics data. All requests should specify a start date formatted as YYYY-MM-DD.</summary>           
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.Request.StartIndex">
            <summary>An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.</summary>         
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.GaDataRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GaDataRequest.EmailAddress">
            <summary>
            Gets or Sets the console application email address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GaDataRequest.Scope">
            <summary>
            Gets or Sets the google API scope.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GaDataRequest.Certificate">
            <summary>
            Gets or Sets the certificate.
            </summary>
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.McfDataRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.ColumnHeaders">
            <summary>Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.</summary>            
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.ContainsSampledData">
            <summary>Determines if Analytics data contains samples.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.Id">
            <summary>Unique ID for this data response.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.ItemsPerPage">
            <summary>The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.NextLink">
            <summary>Link to next page for this Analytics data query.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.PreviousLink">
            <summary>Link to previous page for this Analytics data query.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.ProfileInfo">
            <summary>Information for the profile, for which the Analytics data was requested.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.Query">
            <summary>Analytics data request query parameters.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.Rows">
            <summary>Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.SelfLink">
            <summary>Link to this page.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.TotalResults">
            <summary>The total number of rows for the query, regardless of the number of rows in the response.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.GoogleData.TotalsForAllResults">
            <summary>Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.</summary>        
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.AccountId">
            <summary>Account ID to which this profile belongs.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.InternalWebPropertyId">
            <summary>Internal ID for the web property to which this profile belongs.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.ProfileId">
            <summary>Profile ID.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.ProfileName">
            <summary>Profile name.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.TableId">
            <summary>Table ID for profile.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ProfileInfoData.WebPropertyId">
            <summary>Web Property ID to which this profile belongs.</summary>                
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.ColumnHeadersData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ColumnHeadersData.ColumnType">
            <summary>Column Type. Either DIMENSION or METRIC.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ColumnHeadersData.DataType">
            <summary>Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.ColumnHeadersData.Name">
            <summary>Column name.</summary>                
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Dimensions">
            <summary>List of analytics dimensions.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.EndDate">
            <summary>End date.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Filters">
            <summary>Comma-separated list of dimension or metric filters.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Ids">
            <summary>Unique table ID.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.MaxResults">
            <summary>Maximum results per page.</summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Metrics">
            <summary>List of analytics metrics.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Segment">
            <summary>Analytics advanced segment.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.Sort">
            <summary>List of dimensions or metrics based on which Analytics data is sorted.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.StartDate">
            <summary>Start date.</summary>                
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.QueryData.StartIndex">
            <summary>Start index.</summary>                
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.Items">
            <summary>A list of advanced segments.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.ItemsPerPage">
            <summary>The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.Kind">
            <summary>Collection type for advanced segments.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.NextLink">
            <summary>Link to next page for this advanced segment collection.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.PreviousLink">
            <summary>Link to previous page for this advanced segment collection.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.StartIndex">
            <summary>The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.TotalResults">
            <summary>The total number of results for the query, regardless of the number of results in the response.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentsData.Username">
            <summary>Email ID of the authenticated user</summary>        
        </member>
        <member name="M:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Created">
            <summary>Time the advanced segment was created.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Definition">
            <summary>Advanced segment definition.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Id">
            <summary>Advanced segment ID.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Kind">
            <summary>Resource type for Analytics advanced segment.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Name">
            <summary>Advanced segment name.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.SegmentId">
            <summary>Segment ID. Can be used with the &apos;segment&apos; parameter in Data Feed.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.SelfLink">
            <summary>Link for this advanced segment.</summary>        
        </member>
        <member name="P:Ektron.Cms.ThirdParty.Google.OAuth2.SegmentItem.Updated">
            <summary>Time the advanced segment was last modified.</summary>     
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.CalendarFunctions.GetRecurrenceDayOfWeek(System.DateTime)">
            <summary>
            Gets the recurrenceDayOfWeek for the supplied datetime. If the day is the last occurrance for the month, 
            then RecurrenceDayOfWeek.Last is returned.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Common.Calendar.TimeZoneInfo">
             <summary>
             Utility class for dealing with DateTime values and multiple time zones.
             </summary>
             <remarks>
             This code is based off of sample code provided by microsoft.  Details can be found in this MSDN blog entry: http://blogs.msdn.com/bclteam/archive/2006/04/03/567119.aspx.
             Code download: http://download.microsoft.com/download/4/5/5/4555538c-6002-4f04-8c58-2b304af92402/converttimezone.exe
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.TimeZoneInfo.GetSystemTimeZoneList">
            <summary>
            Returns a list of the timezones registered on the system.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.FolderData">
            <summary>
            Summary description for FolderData
            </summary>
        </member>
        <member name="M:Ektron.Cms.FolderData.Validate">
            <summary>
            Validates this folderdata object
            </summary>
            <returns>ValidationResults instance</returns>
        </member>
        <member name="P:Ektron.Cms.FolderData.TemplateId">
            <summary> 
            Gets or sets the folder template's ID for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The folder template's long ID.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.ParentId">
            <summary> 
            Gets or sets the folder's parent folder ID for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The folder's parent folder long ID.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.NameWithPath">
            <summary> 
            Gets or sets the folder's name with its path. This path is the tree structure 
            in the Workarea, not a folders file system path. For example: <para></para> 
            If you want the <b>Medication Management</b> folder in the Ektron Medical demo site Workarea, 
            it would appear as <c>~YourSite~/Products/Medication Management/</c> 
            </summary> 
            <value></value> 
            <returns>The folder's name with its path. For example, <c>~YourSite~/Products/Medication Management/</c></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderIdWithPath">
            <summary>
            Gets or Sets the FolderID's with its path. This path is the tree structure in the workarea.
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.Name">
            <summary> 
            Gets or sets the folder's name for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The folder's name</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.Description">
            <summary> 
            Gets or sets a folder's description information for the FolderData object. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The folder's description.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.Inherited">
            <summary> 
            Gets or sets whether the folder's permission are inherited from the the parent folder. This is for the FolderData object. <para></para> 
            <b>True</b> = inherit the parent folder's permissions.<para></para> 
            <b>False</b> = do not inherit the parent folder's permissions. 
            </summary> 
            <value></value> 
            <returns>Returns true if the folder is inheriting from its parent. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsPermissionsInherited">
            <summary> 
            Gets or sets whether the folder's permission are inherited from the the parent folder. This is for the FolderData object. <para></para> 
            <b>True</b> = inherit the parent folder's permissions.<para></para> 
            <b>False</b> = do not inherit the parent folder's permissions. 
            </summary> 
            <value></value> 
            <returns>Returns true if the folder is inheriting from its parent. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsHidden">
            <summary>
            Gets or Sets the IsHidden Property
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.InheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the folder Permissions is inheriting. This is for the FolderData object. 
            Note: Use this Property only to get the data.
            </summary> 
            <value></value> 
            <returns>The long ID of the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.PrivateContent">
            <summary> 
            Gets or sets whether the content in a folder is private. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder's contents private.<para></para> 
            <b>False</b> = the folder's contents are public. 
            </summary> 
            <value></value> 
            <returns>Returns true if the folder's contents are private. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.XmlInherited">
            <summary> 
            Gets or sets whether the folder inherits the XML configuration from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits the XML configuration from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit the XML configuration from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the XML is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsXmlInherited">
            <summary> 
            Gets or sets whether the folder inherits the XML configuration from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits the XML configuration from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit the XML configuration from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the XML is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.XmlInheritedFrom">
            <summary> 
            Gets or sets the parent folder ID from which the XML is inherited. This is for the FolderData object.
            Note: Use this Property only to get the data.
            </summary> 
            <value></value> 
            <returns>The parent folder's integer ID.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.XmlConfiguration">
            <summary> 
            Gets or sets the XML configuration for a folder. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>An array of XmlConfigData.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.StyleSheet">
            <summary> 
            Gets or sets a style sheet that defines the styles of the content within the content folder. 
            This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The folder's style sheet.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TemplateFileName">
            <summary> 
            Gets a template name for the folder. This is Readonly property. To set the Template use TemplateId. 
            Content in this folder appears on your Web site within the template you choose. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The template name.</returns> 
            <remarks>(Readonly)</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.StyleSheetInherited">
            <summary> 
            Gets or sets the whether the style sheet is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits style sheet information from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit style sheet information from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the style sheet information is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsStyleSheetInherited">
            <summary> 
            Gets or sets the whether the style sheet is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits style sheet information from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit style sheet information from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the style sheet information is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TemplateInherited">
            <summary> 
            Gets or sets the whether the template is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits the template from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit the template from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the style sheet information is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsTemplateInherited">
            <summary> 
            Gets or sets the whether the template is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits the template from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit the template from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the style sheet information is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TemplateInheritedFrom">
            <summary>
            Gets or sets the parent folder ID from which the Template is inherited. This is for the FolderData object.
            Note: Use this Property only to get the data.
            </summary>
            <value></value> 
            <returns>The parent folder's integer ID.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.ApprovalMethod">
            <summary> 
            Gets or set whether or not to force all approvers to approve the content that is added to the folder. This is for the FolderData object.<para></para> 
            <b>0</b> = Do Not Force All Approvers - content checked-out during the approval process will continue through the approval chain.<para></para> 
            <b>1</b> = Force All Approvers - content checked-out during the approval process forces the approval chain to reset to the beginning. 
            </summary> 
            <value></value> 
            <returns> 
            Returns 0 (zero) if you are not forcing all approvers. <para></para> 
            Returns 1 (one) if you are forcing all approvers. 
            </returns> 
            <remarks></remarks> 
            [Obsolete("This property is no longer supported.  Use ApprovalType")]
        </member>
        <member name="P:Ektron.Cms.FolderData.ApprovalType">
            <summary> 
            Gets or set whether or not to force all approvers to approve the content that is added to the folder. This is for the FolderData object.<para></para> 
            <b>DoNotApprove</b> = Do Not Force All Approvers - content checked-out during the approval process will continue through the approval chain.<para></para> 
            <b>Approve</b> = Force All Approvers - content checked-out during the approval process forces the approval chain to reset to the beginning. 
            </summary> 
            <value></value> 
            <returns> 
            Returns EkEnumeration.FolderApprovalType.DoNotApprove if you are not forcing all approvers. <para></para> 
            Returns EkEnumeration.FolderApprovalType.Approve if you are forcing all approvers. 
            </returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderData.ChildFolders">
            <summary> 
            Gets the child folders for this folderdata instance. Setting data has no effect when updating or adding.
            </summary> 
            <value></value> 
            <returns>Child folders as an array of FolderData.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.MetaInheritedFrom">
            <summary> 
            Gets or sets the parent folder ID from which to inherit metadata information. This is for the FolderData object.
            Note: Use this Property only to get the data.
            </summary> 
            <value></value> 
            <returns>The parent folder's integer ID.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.MetaInherited">
            <summary> 
            Get or set whether the metadata is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits metadata from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit metadata from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if metadata is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsMetaInherited">
            <summary> 
            Get or set whether the metadata is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder inherits metadata from the parent folder.<para></para> 
            <b>False</b> = the folder does not inherit metadata from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if metadata is inherited from the parent folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.HasChildren">
            <summary> 
            Gets or sets whether the folder has child folders. This is for the FolderData object.<para></para> 
            <b>True</b> = the folder has child folders.<para></para> 
            <b>False</b> = the folder does not child folders. 
            </summary> 
            <value></value> 
            <returns>Returns true if folder has child folders. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.PublishPdfEnabled">
            <summary> 
            Get or set whether the folder allows assets to be published in another format. 
            For example, as PDF or HTML. This is for the FolderData object.<para></para> 
            <b>True</b> = assets in the folder can be published in another format.<para></para> 
            <b>False</b> = assets are not published in another format. 
            </summary> 
            <value></value> 
            <returns>Returns true if assets in the folder can be published in another format. Otherwise, returns false.</returns> 
            <remarks> 
            If set to true, either the PublishPdfActive property or the PublishHtmlActive property 
            must be set to true. 
            </remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.PublishPdfActive">
            <summary> 
            Get or set whether assets in the folder are published as a PDF. This is for the FolderData object.<para></para> 
            <b>True</b> = assets in the folder are published as a PDF.<para></para> 
            <b>False</b> = assets are not published as a PDF. 
            </summary> 
            <value></value> 
            <returns>Returns true if assets in the folder are published as a PDF. Otherwise, returns false.</returns> 
            <remarks>The PublishPdfEnable property must be set to true.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.PublishHtmlActive">
            <summary> 
            Get or set whether assets in the folder are published as HTML. This is for the FolderData object.<para></para> 
            <b>True</b> = assets in the folder are published as HTML.<para></para> 
            <b>False</b> = assets are not published as HTML. 
            </summary> 
            <value></value> 
            <returns>Returns true if assets in the folder are published as HTML. Otherwise, returns false.</returns> 
            <remarks>The PublishPdfEnable property must be set to true.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.Permissions">
            <summary> 
            Gets or sets a list of folder permissions for the logged in user. This is for the FolderData object. If you 
            use Ektron.Cms.API to access this information, there is an internal Admin user and all permissions are returned. 
            As an alternative, use Ektron.Cms.ContentAPI. 
            </summary> 
            <value></value> 
            <returns>A list of folder permissions for the logged in user.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderMetadata">
            <summary>
            Gets or sets Content MetaData for this folder
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderTemplates">
            <summary>
            Gets or sets Content MetaData for this folder
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.UpdatedContent">
            <summary> 
            Gets or sets the total number of content items that have been updated. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The total number of content items that have been updated.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TotalContent">
            <summary> 
            Gets or sets the total number of content items in the folder. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The total number of content items in the folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsDomainFolder">
            <summary> 
            Gets or sets whether or not the folder is a domain folder. This is for the FolderData object.<para></para> 
            <b>True</b> = folder is a domain folder.<para></para> 
            <b>False</b> = folder is not a domain folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the folder is a domain folder. Otherwise, returns false.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.DomainStaging">
            <summary> 
            Gets or sets the domain of the staging server when using the site replication feature. For example:<para></para> 
            <c>staging.yourektroncmssite.com</c><para></para> 
            This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The staging server domain.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.DomainProduction">
            <summary> 
            Gets or sets the domain of the production server when using the site replication feature. For example:<para></para> 
            <c>www.yourektroncmssite.com</c><para></para> 
            This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The production server domain.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderType">
            <summary> 
            Gets or sets the type of folder in the Workarea. The <c>FolderType</c> property can be used to verify if a given folder accepts the type of content being submitted. 
            This is for the FolderData object. <para></para> 
            Available Types:<para></para> 
            * <b>0</b> = Content - a content folder that contains assets, documents and HTML content. 
            * <b>2</b> = Domain - designates the folder as a domain folder when using the Multi-site feature. 
            * <b>5</b> = Root - Specifies a folder as root folder. This option is not available. 
            * <b>6</b> = Community - Membership users can add and edit content contained in these folders. 
            </summary> 
            <value></value> 
            <returns>An integer value that equals a type of folder. Folder types are listed above.</returns> 
            <remarks></remarks> 
            can't mark obsolete workarea folder tree breaks. [Obsolete("This property is no longer supported. Use Type")]
        </member>
        <member name="P:Ektron.Cms.FolderData.Type">
            <summary>
            Valid FolderTypes:<para></para> 
            * <b>Content</b> = Content - a content folder that contains assets, documents and HTML content. 
            * <b>Domain</b> = Domain - designates the folder as a domain folder when using the Multi-site feature. 
            * <b>Root</b> = Root - Specifies a folder as root folder. This option is not available. 
            * <b>Community</b> = Community - Membership users can add and edit content contained in these folders.
            </summary>
            <returns>Returns folderType from FolderType Enumeration.</returns>         
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderData.SitemapInherited">
            <summary> 
            Gets or sets whether or not the Sitemap information for this folder is inherited. This is for the FolderData object. 
            * <b>0</b> (Zero) = False 
            * <b>1</b> = True 
            </summary> 
            <value></value> 
            <returns> 
            Returns an integer representing whether the Sitemap is inherited. 
            * <b>0</b> (Zero) = False 
            * <b>1</b> = True 
            </returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsSitemapInherited">
            <summary> 
            Gets or sets whether or not the Sitemap information for this folder is inherited. This is for the FolderData object. 
            * <b>0</b> (Zero) = False 
            * <b>1</b> = True 
            </summary> 
            <value></value> 
            <returns> 
            Returns an integer representing whether the Sitemap is inherited. 
            * <b>0</b> (Zero) = False 
            * <b>1</b> = True 
            </returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.SitemapInheritedFrom">
            <summary> 
            Gets or sets the integer ID of the folder from which the Sitemap information is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the folder from which the Sitemap information is inherited.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.SitemapPath">
            <summary> 
            Gets or sets the SitemapPath as an array of Common.SitemapPath. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>An array of Common.SitemapPath.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.BreadCrumbPath">
            <summary> 
            Gets or sets the SitemapPath as an array of Common.SitemapPath. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>An array of Common.SitemapPath.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.ReplicationMethod">
            <summary> 
            Gets or sets whether or not the content in the folder is replicated via quick deploy. The default is 0 (zero). 
            This is for the FolderData object. 
            * <b>0</b> = do not replicate content. This is the default.<para></para> 
            * <b>1</b> = replicate content via the Quick Deploy feature. 
            </summary> 
            <value></value> 
            <returns> 
            An integer representing whether content in the folder is replicated via quick deploy. 
            * <b>0</b> = do not replicate content. This is the default. <para></para> 
            * <b>1</b> = replicate content via the Quick Deploy feature. 
            </returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsCommunityFolder">
            <summary> 
            Marks a folder as being a community folder. A community folder allows the editing of content by membership users. This is for the FolderData object. <para></para> 
            <b>True</b> = folder is a community folder.<para></para> 
            <b>False</b> = folder is not community folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if the folder is a community folder. Otherwise, returns false.</returns> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TaxonomyInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the taxonomy is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The TaxonomyInherited property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.TaxonomyInherited">
            <summary> 
            Gets or sets whether taxonomy is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = taxonomy is inherited from the parent folder.<para></para> 
            <b>False</b> = taxonomy is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if taxonomy is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsTaxonomyInherited">
            <summary> 
            Gets or sets whether taxonomy is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = taxonomy is inherited from the parent folder.<para></para> 
            <b>False</b> = taxonomy is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if taxonomy is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.AliasInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the alias is inherited. This is for the FolderData object.
            Note: Use this Property only to get the data.
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The aliasinherited property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.AliasInherited">
            <summary> 
            Gets or sets whether alias is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = alias is inherited from the parent folder.<para></para> 
            <b>False</b> = alias is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if alias is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsAliasInherited">
            <summary> 
            Gets or sets whether alias is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = alias is inherited from the parent folder.<para></para> 
            <b>False</b> = alias is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if alias is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.AliasRequired">
            <summary> 
            Gets or sets whether force aliasing selection is required when creating or editing content. This is for the FolderData object.<para></para> 
            <b>True</b> = force aliasing is required when creating or editing content.<para></para> 
            <b>False</b> = force aliasing is not required when creating or editing content. 
            </summary> 
            <value></value> 
            <returns>Returns true if a force aliasing is required when creating of publishing content.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderData.FlagInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the flag is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The flagInherited property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.FlagInherited">
            <summary> 
            Gets or sets whether flag is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = flag is inherited from the parent folder.<para></para> 
            <b>False</b> = flag is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if falg is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsFlagInherited">
            <summary> 
            Gets or sets whether flag is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = flag is inherited from the parent folder.<para></para> 
            <b>False</b> = flag is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if falg is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsCategoryRequired">
            <summary> 
            Gets or sets whether at least one taxonomy category selection is required when creating or editing content. This is for the FolderData object.<para></para> 
            <b>True</b> = one taxonomy category is required when creating or editing content.<para></para> 
            <b>False</b> = a taxonomy category is not required when creating or editing content. 
            </summary> 
            <value></value> 
            <returns>Returns true if a taxonomy category is required when creating of publishing content.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderTaxonomy">
            <summary> 
            Gets or Sets the taxonomy for a folder as an array of TaxonomyBaseData. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>An array of TaxononmyBaseData.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.FolderFlags">
            <summary> 
            Gets or sets the flag for a folder as an array of FlagDefData. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>An array of FlagDefData.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsContentSearchableInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the IsContentSearchable is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The IsContentSearchable property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IsContentSearchableInherited">
            <summary> 
            Gets or sets whether IsContentSearchable is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = IsContentSearchable is inherited from the parent folder.<para></para> 
            <b>False</b> = IsContentSearchable is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if IsContentSearchable is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderData.IscontentSearchable">
            <summary> 
            Gets or sets whether force ContentSearchable selection is required when creating or editing content. This is for the FolderData object.<para></para> 
            <b>True</b> = force ContentSearchable is required when creating or editing content.<para></para> 
            <b>False</b> = force ContentSearchable is not required when creating or editing content. 
            </summary> 
            <value></value> 
            <returns>Returns true if a force ContentSearchable is required when creating of publishing content.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderData.DisplaySettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.DisplaySettingsInheritedFrom">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderData.IsDisplaySettingsInherited">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebCalendarData.IsValid(Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Validates the Calendar object and returns a list of errors.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Campaign.Common.CampaignProperty">
            <summary>
            Enumeration of Campaign columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData">
            <summary>
             CampaignManagement Settings data class
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.CampaignMediaList">
            <summary>
            List of Media's (Campaign Medium e.g: Email, Banner, website)
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.DateModified">
            <summary>
            Date Modified
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.UserId">
            <summary>
            User Id 
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.LandingPageAliasPrefix">
            <summary>
            Landing Page Alias Prefix
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.ProvisionInfo">
            <summary>
            This value will be updated when CMS provision tool is used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CampaignManagementSettingsData.SocialChannels">
            <summary>
            Gets Social channels information of a Landing Page.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.CTAVersion">
            <summary>
            CTA version for Embed Code.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.CTAVersion.Version1">
            <summary>
            CTA Version1 HTML code
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ActionTypeData">
            <summary>
            Action Type Data Class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.IActionTypeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IActionTypeData.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IActionTypeData.CallToActionType">
            <summary>
            Call to Action type.(Eg: Image, Text link, Button)
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ActionTypeData.#ctor(System.String)">
            <summary>
            Assign Action Text on Instance.
            </summary>
            <param name="actionText">Action Text</param>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ActionTypeData.Text">
            <summary>
            Action Text
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ActionTypeData.CallToActionType">
            <summary>
            Type of CTA.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ButtonCTAData">
            <summary>
            Button type CTA Data class
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.ButtonColor">
            <summary>
            Button Color
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.ButtonStyle">
            <summary>
            Button Style.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.IsInheritPageStyles">
            <summary>
            Inherit Page Styles.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.FontSize">
            <summary>
            Font Size.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.FontColor">
            <summary>
            Font color.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IButtonCTA.FontFamily">
            <summary>
            Font Family.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ButtonCTAData.#ctor">
            <summary>
            Initializes a new instance of the ButtonCTA class
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ButtonCTAData.#ctor(System.String)">
            <summary>
            Assign Action Text 
            </summary>
            <param name="text">Action Text</param>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.ButtonColor">
            <summary>
            Button Color
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.ButtonStyle">
            <summary>
            Button Style.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.IsInheritPageStyles">
            <summary>
            Inherit Page Styles.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.FontSize">
            <summary>
            Font Size.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.FontColor">
            <summary>
            Font color.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.FontFamily">
            <summary>
            Font Family.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ButtonCTAData.CallToActionType">
            <summary>
            Button Type Call to Action
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.CallToActionData">
            <summary>
            Call To Action Data class
            </summary>
        </member>
        <member name="T:Ektron.Cms.ContentData">
            <summary>
            A data object that contains the properties that make up a content item.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.LanguageId">
            <summary>
            Get or sets the language ID of the content item for the ContentData object.
            </summary>
            <value></value>
            <returns>Language ID as an integer. For example, 1033 (English).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Title">
            <summary>
            Gets or sets the content item's title for the ContentData object.
            </summary>
            <value></value>
            <returns>Title of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Teaser">
            <summary>
            Gets or sets a content's summary information for the ContentData object.
            </summary>
            <value></value>
            <returns>Summary information for the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Html">
            <summary>
            Gets or sets the content item's HTML for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value that represents the HTML that makes up a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Quicklink">
            <summary>
            Gets or sets the content item's Quicklink in the CMS400.NET for the ContentData object.
            </summary>
            <value></value>
            <returns>A content item's Quicklink information.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Image">
            <summary>
            Gets or sets the path to an image in the library that you want to associate with 
            the content for the ContentData object.
            </summary>
            <value></value>
            <returns>Path to the image in the library.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.ImageThumbnail">
            <summary>
            Gets or sets the path to a thumbnail image in the library that you want to associate with
            the content for the ContentData object. 
            </summary>
            <value></value>
            <returns>Path to the thumbnail image in the library.</returns>
            <remarks>This property was deprecated in 8.5.</remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.IsPrivate">
            <summary>
            Gets or sets whether a content item is private and not viewable on the public Web site. Set to True
            to make a content item private for the ContentData object. 
            </summary>
            <value></value>
            <returns>Returns true if the content item is set to private.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.Type">
            <summary>
            Gets or sets Type for the ContentData object. 
            </summary>
            <value></value>
            <returns>Returns integer type of the Content for ContentData object.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.SubType">
            <summary>
            Gets or sets the content subtype.
            </summary>
            <value></value>
            <returns>Returns the subtype of the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.ExternalTypeId">
            <summary>
            Gets or sets the external content subtype (used for the DxH external content types.
            e.g. Sharepoint, Dynamics,
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentBaseData.AssetData">
            <summary>
            Gets or sets a content item's asset data information when the content item is a managed 
            file, Office Document, Multimedia file or Open Office document. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>Returns content item's asset data information as Ektron.Cms.Common.AssetData.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.ContentData.Validate">
            <summary>
            Validation method for this object
            </summary>
            <returns>ValidationResults instance</returns>
        </member>
        <member name="P:Ektron.Cms.ContentData.Permissions">
            <summary>
            Gets or sets permission data for the ContentData object.  
            </summary>
            <value></value>
            <returns>Permissions as a PermissionData object.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EditorFirstName">
             <summary>
             Gets the content editor's first name for the ContentData object.
            This property is populated on retrieval, but is not persisted when saving ContentData. 
             </summary>
             <value></value>
             <returns>The editor's first name as a string.</returns>
             <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EditorLastName">
            <summary>
            Gets the content editor's last name for the ContentData object.
            This property is populated on retrieval, but is not persisted when saving ContentData. 
            </summary>
            <value></value>
            <returns>The editor's last name as a string.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Comment">
            <summary>
            Gets or sets comment information associated with a content item for the ContentData object.
            </summary>
            <value></value>
            <returns>Comment information associated with a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DateModified">
            <summary>
            Gets or sets the content's last edit date for the ContentData object.
            </summary>
            <value></value>
            <returns>Content's last edit date as a DateTime.</returns>
            <remarks>Supersedes LastEditDate</remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.LastEditDate">
            <summary>
            Gets or sets the content's last edit date for the ContentData object.
            </summary>
            <value></value>
            <returns>Content's last edit date as a string.</returns>
            <remarks>Obsolete: Use DateModified, which returns a DateTime rather than a string.</remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DisplayLastEditDate">
            <summary>
            Gets or sets the content's last edit date formatted for display for the ContentData 
            object. For example, <c>June 11, 2007</c>.
            </summary>
            <value></value>
            <returns>Content's last edit date formatted for display.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DateCreated">
            <summary>
            Gets or sets the creation date of a content item for the ContentData object.
            </summary>
            <value></value>
            <returns>The creation date of a content item as DateTime.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DisplayDateCreated">
            <summary>
            Gets or sets the creation date of a content item formatted for display for the 
            ContentData object. For example, <c>June 11, 2007</c>.
            </summary>
            <value></value>
            <returns>Creation date of a content item formatted for display.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.UserId">
            <summary>
            Gets or sets the ID of the user for the ContentData object.
            </summary>
            <value></value>
            <returns>User ID as a Long.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.UserName">
            <summary>
            Important: This property is obsolete. To retrieve the user name, call EkUser GetActiveUserbyID with the correct User ID.<para></para>
            Gets or sets the content's username for the ContentData object.
            </summary>
            <value></value>
            <returns>The content's username.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.FolderId">
            <summary>
            Gets or Sets the content item's folder ID for the ContentData object.  
            </summary>
            <value></value>
            <returns>Folder ID as an Long.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.IsInherited">
            <summary>
            Gets or sets whether the content item inherits permissions from the folder settings for the ContentData object.
            </summary>
            <value></value>
            <returns>A boolean that returns true when the content item inherits permissions from the folder settings.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.IsPermissionsInherited">
            <summary>
            Gets or sets whether the content item inherits permissions from the folder settings for the ContentData object.
            </summary>
            <value></value>
            <returns>A boolean that returns true when the content item inherits permissions from the folder settings.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.InheritedFrom">
            <summary>
            Gets or sets the folder ID from which to inherit permissions for the ContentData object.
            </summary>
            <value></value>
            <returns>An numeric ID representing the folder from which permissions are inherited.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.PermissionInheritedFrom">
            <summary>
            Gets or sets the folder ID from which to inherit permissions for the ContentData object.
            </summary>
            <value></value>
            <returns>An numeric ID representing the folder from which permissions are inherited.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Status">
            <summary>
            This property should be considered read-only. This value is managed by the Ektron approval workflow (if any) attached to the item.
            Gets the letter value representing the status of a content item for the ContentData object.
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>
            <value></value>
            <returns>A letter value representing the status of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.GoLive">
            <summary>
            Gets or sets the start date a content item goes live on the site. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value that represents the date a content item goes live.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.GoLiveDate">
            <summary>
            Gets or sets the Golive date a content item goes live on the site. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value that represents the date a content item goes live.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DisplayGoLive">
            <summary>
            Gets or sets the start date a content item goes live on the site formatted for 
            display. This is for the ContentData object. For example, <c>June 11, 2007</c>.
            </summary>
            <value></value>
            <returns>Start date a content item goes live on the site formatted for display.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ManualAliasId">
            <summary>
            Gets or sets the ID of the of a manual alias for the ContentData object.
            </summary>
            <value></value>
            <returns>A numeric value (Long) representing a manual alias ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ManualAlias">
            <summary>
            Gets or sets the manual alias by its name for the ContentData object. For example, <c>/~YourSite~/text.aspx</c>.
            </summary>
            <value></value>
            <returns>A string value representing the name of a manual alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ApprovalMethod">
            <summary>
            Gets or sets the approval method of a content item for the ContentData object. Choices are:
              * <b>1</b> = Force All Approvers - content checked-out during the approval process will force the approval chain to reset to the beginning.
              * <b>0</b> = Do Not Force All Approvers - content checked-out during the approval process will continue through the approval chain.
            </summary>
            <value></value>
            <returns>An integer value representing the type of approval method.</returns>
            <remarks>
            If the content is inheriting the approval method from the folder, the IsInherited property must be false 
            to change this property. 
            </remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.IsPublished">
            <summary>
            Gets or sets whether the content is published before for the ContentData object.
            </summary>
            <value></value>
            <returns>Returns a boolean based on whether the content is published before. 
            True = Published</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.IsSearchable">
            <summary>
            Gets or sets whether the content is searchable for the ContentData object. True = the content searchable.
            </summary>
            <value></value>
            <returns>A boolean based on whether the content is searchable.
              * <b>True</b> = content is searchable.
              * <b>False</b> = content is not searchable.</returns>
            <remarks></remarks>        
        </member>
        <!-- Badly formed XML comment ignored for member "P:Ektron.Cms.ContentData.IsSearchableAsBool" -->
        <member name="P:Ektron.Cms.ContentData.IsXmlInherited">
            <summary>
            Gets or sets whether the XML Smart Form configuration is inherited from the folder. True = XML Smart Form configuration is 
            inherited from the folder. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>A boolean based on whether the XML Smart Form configuration is inherited from the folder.
              * <b>True</b> = content XML Smart Form configuration is inherited from the folder.
              * <b>False</b> = content XML Smart Form configuration is not inherited from the folder.
            </returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.XmlInheritedFrom">
            <summary>
            Gets or sets the ID of the folder from which the XML Smart Form configuration is inherited. This 
            is for the ContentData object.
            </summary>
            <value></value>
            <returns>A numeric ID (Long) of the folder from which the XML Smart Form configuration is inherited.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.MetaData">
            <summary>
            Gets or sets the Metadata of a content item as an array of ContentMetadata. This is for the 
            ContentData object.
            </summary>
            <value></value>
            <returns>Metadata as an array of ContentMetaData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.LegacyData">
            <summary>
            Gets or sets the Legacy Data of a content item as an Object of ContentMetadata. This is for the 
            ContentData object.
            </summary>
            <value></value>
            <returns>Legacy Data as an Object of ContentMetaData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.DisplayEndDate">
            <summary>
            Gets or sets the end date of a content item formatted for display. This is for 
            the ContentData object. For example, <c>June 11, 2007</c>.
            </summary>
            <value></value>
            <returns>End date of a content item formatted for display.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EndDate">
            <summary>
            Gets or sets the end date of a content item. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value that represents the end date of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ExpireDate">
            <summary>
            Gets or sets the expire date of a content item. This is for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value that represents the expire date of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EndDateAction">
            <summary>
            Gets or sets the action to perform on a content item once the End Date has been reached. 
            This is for the ContentData object. Choices are:
              * <b>1</b> = Archive and remove from site (expire)
              * <b>2</b> = Archive and remain on site
              * <b>3</b> = Add to the CMS Refresh Report
            </summary>
            <value></value>
            <returns>An integer value representing one of the above end date action choices.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EndDateActionType">
            <summary>
            Gets or sets the End Action type
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentData.XmlConfiguration">
            <summary>
            Gets or sets the content item's XML configuration for the ContentData object.
            </summary>
            <value></value>
            <returns>A content item's XML configuration as XmlConfigData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.IsMetaComplete">
            <summary>
            This property is deprecated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentData.StyleSheet">
            <summary>
            Gets or sets the style sheet to use with a content item for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value representing the style sheet to use with a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Approver">
            <summary>
            Gets or sets the approvers of a content item for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value representing the approver(s) of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Text">
            <summary>
            Gets or sets a string value representing the CMS400.NET ContentData Object.
            </summary>
            <value></value>
            <returns>A string value representing the CMS400.NET ContentData Object.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Path">
            <summary>
            Gets or sets the CMS400.NET path to content item for the ContentData object.
            </summary>
            <value></value>
            <returns>A string value representing the CMS400.NET path to the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ContentPath">
            <summary>
            Gets or sets the CMS400.NET path to content item for the ContentData object, which includes the content title. E.G. folder1/Content Title.
            </summary>
            <value></value>
            <returns>A string value representing the CMS400.NET path to the content item, including the content's title.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.ContType">
            <summary>
            Gets or sets the content type as an integer, should be 1 for content
            </summary>
            <value></value>
            <returns>An integer representing the content type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.Updates">
            <summary>
            Gets or sets the updates information associated with the ContentData Object.
            </summary>
            <value></value>
            <returns>Updates of type Integer.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.EditorUserNames">
            <summary>
            Gets the username of the last editor of the content item for the ContentData object.
            This property is populated on retrieval, but is not persisted when saving ContentData. 
            </summary>
            <value></value>
            <returns>Username of the last editor of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.FolderName">
            <summary>
            Gets or sets the content item's folder name for the ContentData object.
            </summary>
            <value></value>
            <returns>The content item's folder name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.MediaText">
            <summary>
            Gets or sets any MediaText associated with the ContentData Object.
            </summary>
            <value></value>
            <returns>Media Text associated with ContentData object item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.HistoryId">
            <summary>
            Gets or sets the content item's history ID for the ContentData object. 
            </summary>
            <value></value>
            <returns>The numeric ID (Long) of the content item's history.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.HyperLink">
            <summary>
            Gets or sets the content item's Hyperlink in the CMS400.NET for the ContentData object.
            </summary>
            <value></value>
            <returns>A content item's Hyperlink information.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.TemplateConfiguration">
            <summary>
            Gets or sets the content item's template configuration for the ContentData object.
            </summary>
            <value></value>
            <returns>A content item's template configuration as TemplateData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentData.FlagDefId">
            <summary>
            Gets or sets the content item's Flag Defition Id for the ContentData object.
            </summary>
            <value></value>
            <returns>A content item's Flag Defition Id as long for the ContentData object.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.CallToActionData.#ctor">
            <summary>
            Initializes a new instance of the CTAData class
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.LandingPageId">
            <summary>
            Landing Page Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.Destination">
            <summary>
            Destination is a URL which can be Landing Page QuickLink or External Link. It is a Required Field for CTA.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.IsOpenNewWindow">
            <summary>
            Open Call to Action in a New Window.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.ActionTypeData">
            <summary>
            Action Type Data (eg: ImageCTAData, TextLinkCTAData, ButtonCTAData.). 
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.Notes">
            <summary>
            Notes for CTA.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CallToActionData.Screenshot">
            <summary>
            Screenshot for CTA. Base64 Encoded image
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ImageCTAData">
            <summary>
            Image Type Call to Action
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.IImageCTA">
            <summary>
            Image Type Call To Action Contract.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IImageCTA.ImageId">
            <summary>
            DMS Image Id 
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IImageCTA.ImagePath">
            <summary>
            Image Path Property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IImageCTA.AssetId">
            <summary>
            Image DMS Asset Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IImageCTA.File">
            <summary>
            Gets or Sets an array of data that represents the asset's contents
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.IImageCTA.FileName">
            <summary>
            FileName of the Image.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ImageCTAData.#ctor">
            <summary>
            Initializes a new instance of the ImageCTA class
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ImageCTAData.#ctor(System.String)">
            <summary>
            Assign Action Text 
            </summary>
            <param name="text">Action Text</param>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.CallToActionType">
            <summary>
            Image Type Call to Action
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.ImageId">
            <summary>
            DMS Image Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.ImagePath">
            <summary>
            Image Path Property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.AssetId">
            <summary>
            Image DMS Asset Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.File">
            <summary>
            This property is to Save Image. But not for retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ImageCTAData.FileName">
            <summary>
            FileName of the Image. (eg: ImageTitle.jpeg, imagetitle.png .....)
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionDal.AddOrUpdateCTAData(Ektron.Cms.CampaignManagement.CallToActionData,System.Boolean)">
            <summary>
            Add/update call to action data to CTA table.
            </summary>
            <param name="callToActionData">CallToActionData</param>
            <param name="isPublished">bool</param>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionDal.DeleteCTAData(System.Int64)">
            <summary>
            deletes call to action data from  CTA table.
            </summary>
            <param name="id">long</param>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ICallToActionManager">
            <summary>
            Call To Action Manager Contract.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.Add(Ektron.Cms.CampaignManagement.CallToActionData)">
            <summary>
            To Add a New Call To Action.
            </summary>
            <param name="ctaData">CallToActionData</param>
            <returns>CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.Update(Ektron.Cms.CampaignManagement.CallToActionData)">
            <summary>
            Updates an Existing Call To Action.
            </summary>
            <param name="ctaData">CallToActionData</param>
            <returns>CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.Save(Ektron.Cms.CampaignManagement.CallToActionData)">
            <summary>
            Saves a Call To Action.
            </summary>
            <param name="ctaData">CallToActionData</param>
            <returns>CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetItem(System.Int64)">
            <summary>
            Gets a Call To Action.
            </summary>
            <param name="id">CallToAction Id</param>
            <returns>CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.Delete(System.Int64)">
            <summary>
            Deletes a Call To Action By ctaId.
            </summary>
            <param name="ctaId">CTA Id</param>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetList(Ektron.Cms.CampaignManagement.CallToActionCriteria)">
            <summary>
            Get List of Call To Actions by CTACriteria.
            </summary>
            <param name="callToActionCriteria">Call to Action Criteria.</param>
            <returns>List Of CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetListRef(Ektron.Cms.CampaignManagement.CallToActionCriteria@)">
            <summary>
            Internal Use Only, to get around pagingInfo issue on WCF.
            </summary>
            <param name="criteria">Call to Action Criteria.</param>
            <returns>List of CallToActionData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetAllAssociatedCTAByLandingPageId(System.Int64)">
            <summary>
            Get All Associated CTA's By LandingPageId
            </summary>
            <param name="landingPageId">LandingPageId</param>
            <returns>Call To Action List</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetEmbedCode(System.Int64)">
            <summary>
            Get Embed code by CTA Id.
            </summary>
            <param name="ctaId">long</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetEmbedCode(Ektron.Cms.CampaignManagement.CustomCampaignData)">
            <summary>
            Get Embed code of a  CTA by CustomCampaignData.
            </summary>
            <param name="customCampaignData">customCampaignData</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICallToActionManager.GetRawHtml(System.Int64,System.String,System.Boolean,Ektron.Cms.CampaignManagement.CTAVersion,Ektron.Cms.CampaignManagement.CustomCampaignData)">
            <summary>
            Get Raw HTMl for Rendering by CTA Id.
            </summary>
            <param name="id">long</param>
            <param name="lang">string</param>
            <param name="preview">bool</param>
            <param name="ctaVersion">CTAVersion</param>
            <param name="customCampaignData">CustomCampaignData</param>
            <returns>string</returns>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ICTAEmbedManager">
            <summary>
            ICTAEmbedManager
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICTAEmbedManager.GetEmbedCode(Ektron.Cms.CampaignManagement.CallToActionData)">
            <summary>
            Get Embed code by CTA data.
            </summary>
            <param name="callToActionData">CallToActionData</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICTAEmbedManager.GetEmbedCode(Ektron.Cms.CampaignManagement.CallToActionData,Ektron.Cms.CampaignManagement.CustomCampaignData)">
            <summary>
            Get Embed code by CTA data.
            </summary>
            <param name="callToActionData">CallToActionData</param>
            <param name="customCampaignData">customCampaignData</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ICTAEmbedManager.GetRawHtml(Ektron.Cms.CampaignManagement.CallToActionData,Ektron.Cms.CampaignManagement.CTAVersion,Ektron.Cms.CampaignManagement.CustomCampaignData)">
            <summary>
            Get RAW HTML code by CTA data.
            </summary>
            <param name="callToActionData">CallToActionData</param>
            <param name="ctaVersion">CTAVersion</param>
            <param name="customCampaignData">customCampaignData</param>
            <returns>string</returns>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.TextLinkCTAData">
            <summary>
            Text Link Type Call to Action
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.TextLinkCTAData.#ctor">
            <summary>
            Initializes a new instance of the TextLinkCTA class
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.TextLinkCTAData.#ctor(System.String)">
            <summary>
            Assign Action Text 
            </summary>
            <param name="text">Action Text</param>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.TextLinkCTAData.CallToActionType">
            <summary>
            Text Link Type Call to Action
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.CustomCampaignData">
            <summary>
             Custom Campaign parameters Class
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.CallToActionId">
            <summary>
            Call To Action Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.Source">
            <summary>
             utm_source to identify a search engine, newsletter name, or other source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.Medium">
            <summary>
            utm_medium to identify a medium such as email or cost-per- click.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.Term">
            <summary>
            utm_term to note the keywords for this ad.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.Content">
            <summary>
            utm_content to differentiate ads or links that point to the same URL.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.Name">
            <summary>
            utm_campaign to identify a specific product promotion or strategic campaign.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.CustomCampaignData.CTAUrlReferrer">
            <summary>
            CTA url Referrer
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ExactTargetData">
            <summary>
            ExactTarget Data Class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ExactTargetData.CustomerId">
            <summary>
            ExactTarget CustomerId.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ExactTargetData.CMSUserName">
            <summary>
            CMS User Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ExactTargetData.CMSPassword">
            <summary>
            CMS Password.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ExactTargetData.Email">
            <summary>
            Email address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ExactTargetData.InternalToken">
            <summary>
            ExactTarget Internal Token.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.IExactTargetManager.Authenticate(Ektron.Cms.CampaignManagement.ExactTargetData)">
            <summary>
            Authenticate ExactTarget Clients.
            </summary>
            <param name="exactTargetData">ExactTargetData</param>
            <returns>bool</returns>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.Constants">
            <summary>
            Constants in campaignManagement.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.CampaignFolderId">
            <summary>
            Campaign Folder Id.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.CTAFolderId">
            <summary>
            Call To Action data added to Folder Id.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.LandingPageRootFolderId">
            <summary>
            Root folder for all Marketing Campaign Landing pages
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.LandingPageSharedAssetsFolderId">
            <summary>
            Folder Id of  Landing pages Shared Assets folder. This contains all shared resources of LandingPages.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.LandingPageResultPagesFolderId">
            <summary>
            Folder Id of  LandingPage ResultPages FolderId folder. This contains all shared resources of LandingPages.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.LandingPageFormTemplatesFolderId">
            <summary>
            Landing Pages Form Templates FolderId
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.SocialChannelsFolderPath">
            <summary>
            Physical Folder Path for Social Channel Images.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.GoogleAnalyticsUrl">
            <summary>
            Google Analytics Campaign Url.
            0-> source, 1->medium, 2-> term, 3-> content, 4-> campaign (name).
            e.g: utm_source=facebook utm_medium=cpc utm_term=Landingpagetitle utm_content=page1Link utm_campaign=page1
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.Constants.DefaultImageForPreview">
            <summary>
            Default Image Path for Preview.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel">
            <summary>
             Social channels Constants class.
            </summary>
        </member>
        <member name="F:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel.Facebook">
            <summary>
            Facebook channel
            </summary>
        </member>
        <member name="F:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel.GooglePlus">
            <summary>
            GooglePlus channel
            </summary>
        </member>
        <member name="F:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel.LinkedIn">
            <summary>
            LinkedIn channel
            </summary>
        </member>
        <member name="F:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel.Pinterest">
            <summary>
            Pinterest channel
            </summary>
        </member>
        <member name="F:Ektron.Cms.BusinessObjects.CampaignManagement.SocialChannel.Twitter">
            <summary>
            Twitter channel
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.CampaignManagement.TransferDxHFormMappingData">
            <summary>
            Transfer Dxh Form Mapping Data class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.CampaignManagement.TransferDxHFormMappingData.SourceFormId">
            <summary>
            Extract form Mappings from form Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.CampaignManagement.TransferDxHFormMappingData.SourceFormLanguageId">
            <summary>
            Extract form Mappings from form language Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.CampaignManagement.TransferDxHFormMappingData.TargetFormId">
            <summary>
            Transfer Form Mappings to Source to Target Form ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.CampaignManagement.TransferDxHFormMappingData.TargetFormLanguageId">
            <summary>
            Transfer Form Mappings to Source to Target language Id.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ISocialChannelProvider">
            <summary>
            Interface to implement SocialChannel providers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ISocialChannelProvider.Name">
            <summary>
            Name of the Social Channel.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ISocialChannelProvider.SocialDomain">
            <summary>
            Social Domain. (e.g. www.fackbook.com, www.linkedin.com, ...)
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ISocialChannelProvider.UrlQueryParam">
             <summary>
            At Join to Domain address extra querystring params.
             </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.FolderId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.FolderName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.Title">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.Status">
            <summary>
            (string)
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>        
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.Type">
            <summary>
            Possible values are defined in EkEnumeration.CMSContentTypes.  Do not use "AllTypes", "ArchivedAssets" or any of the other combined types as these aren't valid values.  
            If All Types are wanted, simply do not filter on this property.
            If All Archived types are wanted, filter on the IsArchived Property.
            If only Asset types are wanted, it is recommended to use the Ektron.Cms.Framework.Content.AssetManager.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.LanguageId">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.DateCreated">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.DateModified">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.LastEditorLastName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.LastEditorFirstName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.IsPublished">
            <summary>
            (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.GoLiveDate">
            <summary>
            Start (GoLive) Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.EndDate">
            <summary>
            End Date (DateTime)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ektron.Cms.CampaignManagement.LandingPageProperty.ExpireDate" -->
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.Path">
            <summary>
            Folder path of where the content resides. E.G. /folder1 (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.ContentPath">
            <summary>
            Content path comprised of the folder path and content title. E.G. /folder1/content title (string)
            
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.IsArchived">
            <summary>
            IsArchived flag (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.EndDateActionType">
            <summary>
            End date action type
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.ExternalTypeId">
            <summary>
            External content type (long) used in the DxH
            e.g. Sharepoint, Dynamics
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.InternalNotes">
            <summary>
            Internal notes
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.ManifestId">
            <summary>
            Manifest used to create the page
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.SuccessCriteria">
            <summary>
            The criteria, as viewed by a Campaign Author, that describes when a campaign is successful
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.TitleMetadata">
            <summary>
            HTML title tag text
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.DescriptionMetadata">
            <summary>
            Description HTML metadata tag text
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.KeywordsMetadata">
            <summary>
            Keywords HTML metadata tag text
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.IsSearchable">
            <summary>
            (bool) IscontentSearchable flag.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CampaignManagement.LandingPageProperty.ResultPageManifestId">
            <summary>
            Result Page Manifest Id used to create the page
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ILandingPageManager">
            <summary>
            defines contracts for manipulating landing pages
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.Add(Ektron.Cms.CampaignManagement.LandingPageData)">
            <summary>
            Adds a landing page
            </summary>
            <param name="landingPageData">LandingPageData</param>
            <returns>LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.Update(Ektron.Cms.CampaignManagement.LandingPageData)">
            <summary>
            Updates a landing page
            </summary>
            <param name="landingPageData">LandingPageData</param>
            <returns>LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.UpdateBaseObject(Ektron.Cms.CampaignManagement.LandingPageData)">
            <summary>
            Updates a landing pages base table only
            </summary>
            <param name="landingPageData">LandingPageData</param>
            <returns>LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.Save(Ektron.Cms.CampaignManagement.LandingPageData)">
            <summary>
            Save a landing page
            </summary>
            <param name="landingPageData">LandingPageData</param>
            <returns>LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.Clone(System.Int64)">
            <summary>
            Clone a landing page
            </summary>
            <param name="landingPageId">long</param>
            <returns>New LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetItem(System.Int64)">
            <summary>
            Gets a landing page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.Delete(System.Int64)">
            <summary>
            Deletes a landing page
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetList(Ektron.Cms.CampaignManagement.LandingPageCriteria)">
            <summary>
            Get landing pages based on criteria filter
            </summary>
            <param name="landingPageCriteria">LandingPageCriteria</param>
            <returns>list of landing pages</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetListRef(Ektron.Cms.CampaignManagement.LandingPageCriteria@)">
            <summary>
            GetListInternal 
            </summary>
            <param name="criteria">LandingPageCriteria</param>
            <returns>list of LandingPageData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetManifestList">
            <summary>
            Get list of Manifest templates.
            </summary>
            <returns>list of ManifestData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetAllSocialChannelsList">
            <summary>
            Get list of All Avaliable Social Channels.
            </summary>
            <returns>list of SocialChannelData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetSocialChannelsByLandingPageId(System.Int64)">
            <summary>
            Get list of Social Channels for a given Landing Page.
            </summary>
            <param name="landingPageId">long</param>
            <returns>list of SocialChannelData</returns>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ILandingPageManager.GetCampaignManagementSettings">
            <summary>
            Get campaign management settings data.
            </summary>
            <returns>CampaignManagementSettingsData</returns>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.LandingPageData">
            <summary>
            A marketing landing page object
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.InternalNotes">
            <summary>
            Internal notes
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.ManifestId">
            <summary>
            The id of the manifest used to create this page
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.SuccessCriteria">
            <summary>
            The criteria, as viewed by a Campaign Author, that describes when a campaign is successful
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.TitleMetadata">
            <summary>
            The text used for the HTML title tag
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.DescriptionMetadata">
            <summary>
            Text used for the HTML Description meta tag
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.KeywordsMetadata">
            <summary>
            Text used for the HTML Keywords meta tag
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.Screenshot">
            <summary>
            Gets the screenshot as a base64 encoded string
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.SocialChannels">
            <summary>
            Gets Social channels information of a Landing Page.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.FormTemplateData">
            <summary>
            Form Template Data
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.LandingPageData.ResultLandingPageData">
            <summary>
            Result Page Data. (Thank you Page Data)
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.ResultLandingPageData">
            <summary>
            Thank you Page. (Result Landing Page)
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.ResultLandingPageData.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ResultLandingPageData.ResultPageId">
            <summary>
            Associate Result Page Id. (Thank you landing Page.)
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ResultLandingPageData.ResultPageUrl">
            <summary>
            Destination url to an existing Result page(Thank you Page.) or External Page. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.ResultLandingPageData.ManifestId">
            <summary>
            Manifest Id for Result Page/ Thank you Page.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.FormTemplateData">
            <summary>
            Form Template Data class
            </summary>
        </member>
        <member name="M:Ektron.Cms.CampaignManagement.FormTemplateData.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.FormTemplateData.FormTemplateId">
            <summary>
            Form Id which is Under FormTemplates folder.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.FormTemplateData.FormTitle">
            <summary>
            Form Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.FormTemplateData.FormSubmitButtonText">
            <summary>
            Form Submit Button Text
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.FormTemplateData.CampaignId">
            <summary>
            Campaign Id which is a Hidden field in the Html form.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.FormTemplateData.CustomCampaignData">
            <summary>
            Custom Campaign Parameters
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.CampaignManagement.ManifestData">
            <summary>
            Container class for manifests of landing pages
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.ManifestData.DependencyList">
            <summary>
            Packed items referred to by widgets in this manifest
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.ManifestData.PageBuilderXml">
            <summary>
            The page layout to be restored
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.ManifestData.LayoutWireframe">
            <summary>
            The wireframe template to use with this landing page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.ManifestData.Id">
            <summary>
            Id of Manifest
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.ManifestData.Name">
            <summary>
            Name of Manifest
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.ManifestData.Thumbnail">
            <summary>
            Thumbnail location for manifest
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.ManifestData.IsResultPage">
            <summary>
            indicate whether manifest is a result page or Thank you page.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.CampaignManagement.WireframeInfo">
            <summary>
            This contains the necessary information to create the wireframe in the CMS on the target system
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WireframeInfo.TemplatePath">
            <summary>
            path to the template for this wireframe
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WireframeInfo.Description">
            <summary>
            Description for the wireframe
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.CampaignManagement.WidgetDependency">
            <summary>
            WidgetDependency is the storage mechanism for the items that widgets point to - for example, the contentblock widget will store the content item it points to when packed.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WidgetDependency.DependencyId">
            <summary>
            Packed Id, for knowing what is referencing this item
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WidgetDependency.DependencyType">
            <summary>
            Type of dependency (usually the widget name that packed the item.)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WidgetDependency.DependencyData">
            <summary>
            The serialized data for the packed item
            </summary>
        </member>
        <member name="F:Ektron.Cms.Contracts.CampaignManagement.WidgetDependency.LocalId">
            <summary>
            The local id of this. This will be filled during the packing and unpacking phases, but not stored
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.CampaignManagement.DependentData">
            <summary>
            Extra Dependent Data for Widget. (Mostly for Server side use.) 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.DependentData.ObjectName">
            <summary>
            Object Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.CampaignManagement.DependentData.ObjectValue">
            <summary>
            Object Value.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.SocialChannelData">
            <summary>
            Dataclass representing a social channel.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.IconPath">
            <summary>
            Image Icon Path.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.Name">
            <summary>
            Name of the Social Provider
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.IsEnable">
            <summary>
            Check whether this social channel is Enabled for a Landing page.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.SharedUrl">
            <summary>
            Shared LandingPage URL
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.SocialUrl">
            <summary>
            Fully Qualified social URL which also contain shared url as a query param.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannelData.IscustomChannel">
            <summary>
            Check whether this social channel is a custom channel.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CampaignManagement.SocialChannels">
            <summary>
            Dataclass represent social channels information of a Landing Page.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CampaignManagement.SocialChannels.SocialChannelsList">
            <summary>
            Get Social Channels associated with Landingpage. (includes Custom Channel)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CommerceAuditProperty">
            <summary>
            Enumeration of CommerceAudit columns available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AuditLogLevel.Error">
            <summary>
            Log errors only.
            </summary>      
        </member>
        <member name="F:Ektron.Cms.Commerce.AuditLogLevel.Warning">
            <summary>
            Log errors and warnings.
            </summary>       
        </member>
        <member name="F:Ektron.Cms.Commerce.AuditLogLevel.Information">
            <summary>
            Log errors, warnings and information.
            </summary>       
        </member>
        <member name="F:Ektron.Cms.Commerce.AuditLogLevel.Verbose">
            <summary>
            Log everything.
            </summary>       
        </member>
        <member name="T:Ektron.Cms.Commerce.AdjustedBasketItem">
            TODO: [derek] Do we need this or should we modify the BasketItem directly?
                  Should probably keep it seperate so that we can extend it as new price adjustments are introduced without bastardizing the Basket class.
             <summary>
             Class used to represent basket item price adjustments.
             </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.BasketItem">
            <summary>
            Data class representing a basket line item.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.BasketItem.#ctor(Ektron.Cms.Commerce.BasketItem)">
            <summary>
            constructor used for cloning Existing BasketItem.
            </summary>
            <param name="basketItem"></param>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ProductSku">
            <summary>
            Gets or sets the Sku for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ProductTitle">
            <summary>
            Gets or sets the Product Title for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Quicklink">
            <summary>
            Gets or sets the product's Quicklink.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Quantity">
            <summary>
            Gets or sets the quantity of the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.SalePrice">
            <summary>
            Sets the base sale price for the line item.  The returned sale price will reflect any adjustments 
            based upon kit options or product variants selected.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ListPrice">
            <summary>
            Gets or sets the list price for the line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.AdjustedTotal">
            <summary>
            Gets or sets the Total Adjusted price for the line item.  
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ProductId">
            <summary>
            Gets or sets the Product Id associated with this this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Id">
            <summary>
            Gets or sets the Id of this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ProductLanguage">
            <summary>
            Gets or sets the language for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.ProductType">
            <summary>
            Gets or sets the type of the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Configuration">
            <summary>
            Gets or sets any applicable Kit configuarations for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Variant">
            <summary>
            Gets or sets and applicable varioant information for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.TaxClassId">
            <summary>
            Gets or sets the tax class Id for the product in the basket for this line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.IsInventoryManagementDisabled">
            <summary>
            Gets or sets the disable inventory management flag.  If true, this cart item does not track inventory and 
            no inventory management is performed.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.IsTangible">
            <summary> 
            Indicates if this product is  a tangible good.
            </summary> 
            <value></value> 
            <returns>Boolean value indicating if this product is  a tangible good.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Dimensions">
            <summary> 
            Gets or sets the dimensions of the product.  Used for shipping.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Weight">
            <summary> 
             Gets or sets the weight of the product. Used for shipping.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketItem.Pricing">
            <summary> 
            The item pricing, including currencies and quantity.
            </summary> 
            <value></value> 
            <returns>PricingData of the basket item.</returns> 
            <remarks></remarks> 
        </member>
        <member name="M:Ektron.Cms.Commerce.AdjustedBasketItem.#ctor(Ektron.Cms.Commerce.BasketItem)">
            <summary>
            Creates a new AdjustedBasketItem based upon base basketitem.
            </summary>
            <param name="basketItem"></param>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.AdjustedTotal">
            <summary>
            Gets or sets the Total Adjusted price for the line item.  
            This could reflect any coupon discounts, surcharges, etc applied to the item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.ApplicableTaxRate">
            <summary>
            Gets or sets the TaxRate class applicable to this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.TaxesApplied">
            <summary>
            Gets or sets the amount of tax applicable to this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.AppliedCoupons">
            <summary>
            Gets the list coupons applied to this basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.TotalCouponDiscount">
            <summary>
            Gets or sets the total coupon discount for this basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.HasFreeShipping">
            <summary>
            Gets or sets whether or not this item has a free shipping coupon applied.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.BasketCalculatorData.Initialize">
            <summary>
            Initializes the BasketCalculatorData and resets all calculated values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.Basket">
            <summary>
            Gets or sets the Basket being calculated by the BasketCalculator.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.BasketCoupons">
            <summary>
            Gets or sets BasketCoupons.  These are all coupons that have been applied to the basket and their cumulative discount.
            If a coupon applies to more than one item, the discount amount for the coupon would be the total amount.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.AllBasketCoupons">
            <summary>
            Gets or sets AllBasketCoupons.  These are all coupons that have been applied to the basket regardless of the effect they have on the basket subtotal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.AdjustedItems">
            <summary>
            Gets the list of adjusted basket items in the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.HasFreeShipping">
            <summary>
            Gets or sets whether or not this basket has  afree shipping coupon applied.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShipFrom">
            <summary>
            Gets or sets the address from which the order would ship.  This could be used for shipping, tax calculations, etc.
            If it's ommited, the shipping and tax information will not be calculated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShipTo">
            <summary>
            Gets or sets the address that the order is shipping to.  This could be used for shipping, tax calculations, etc.
            If it's ommited, the shipping and tax information will not be calculated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TaxClassSubtotals">
            <summary>
            Gets a dictionary representing the tax classes applicable to the basket with the amount of taxes applied to the basket for that tax class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShippingRates">
            <summary>
            Gets a list of shipping rates for the basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalTaxes">
            <summary>
            Gets the total amount of taxes calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalShippingCost">
            <summary>
            Gets the total amount of shipping costs calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalCouponDiscount">
            <summary>
            Gets the total amount of coupons calculated for the current basket
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.BasketTotal">
            <summary>
            Gets the basket total based upon item prices, coupons, taxes, shipping and any other adjustments.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalShippingTaxes">
            <summary>
            Gets the total amount of shipping taxes calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ValidationResults">
            <summary>
            Gets any ValidationResults encountered during calculation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.Id">
            <summary>
            Gets or sets the Id of the Basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.ShopperId">
            <summary>
            Gets or sets the Shopper\visitor Id using the basket.  This Id is used when customer is not logged in.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.UserId">
            <summary>
            Gets or sets the Id of the user asscoiated with the basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.Name">
            <summary>
            Gets or sets the name of the basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.IsDefault">
            <summary>
            Gets or sets value indicating whether or not this basket is the default basket for customers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.Items">
            <summary>
            Gets the collection items in the basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.DateCreated">
            <summary>
            Gets or sets the date created.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.DateModified">
            <summary>
            Gets or sets the date modified.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.Subtotal">
            <summary>
            Gets the basket subtotal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.ShippingAddressId">
            <summary>
            Gets or sets the Id of the address this basket will be shipping to.  This is used for calculating taxes, shipping, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketData.ShippingMethodId">
            <summary>
            Gets or sets the id of the shipping method to be used for the basket.  This is used for calculating shipping costs.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.BasketItemCollection">
            <summary>
            Collection class for BasketItems.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.AppliedCouponData.#ctor(Ektron.Cms.Commerce.CouponData,System.Decimal)">
            <summary>
            
            </summary>
            <param name="coupon">sets the coupon being applied to the basketItem.</param>
            <param name="discount">sets the amount the coupon deducts from the price.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.AppliedCouponData.Coupon">
            <summary>
            Gets or sets the coupon being applied to the basketItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AppliedCouponData.CouponDiscount">
            <summary>
            Gets or sets the amount the coupon deducts from the price.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.Basket.AddProduct(System.Int64,System.Int32)">
            <summary>
            Adds product to cart.
            </summary>
            <param name="productId">Id of product to add to basket.</param>
            <param name="quantity">quantity of product to add to cart.</param>
            <returns>returns basket item Id.</returns>
        </member>
        <member name="T:Ektron.Cms.Commerce.KitConfigData">
            <summary>
            Invitation class used for sending friend requests.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.BasketVariantData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketVariantData.Pricing">
            <summary> 
            The variant pricing, including currencies and quantity.
            </summary> 
            <value></value> 
            <returns>PricingData of the variant.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketVariantData.TaxClassId">
            <summary>
            Gets or set the TaxClassId of the Variant.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketVariantData.Dimensions">
            <summary> 
            Gets or sets the dimensions of the product.  Used for shipping.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketVariantData.Weight">
            <summary> 
             Gets or sets the weight of the product. Used for shipping.
            </summary> 
        </member>
        <member name="T:Ektron.Cms.Commerce.CatalogData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.SubscriptionProductData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryData">
            <summary>
            Base class for catalog entry data classes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Id">
            <summary> 
            Gets or sets the ID of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>ID of the entry title.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.FolderId">
            <summary> 
            Gets or sets the folder ID of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>ID of the entry folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Status">
            <summary>
            The status of the entry information.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.StatusLanguage">
            <summary>
            The language that the entry is checked out to, if any.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.ContentStatus">
            <summary>
            The status of the content information.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.LanguageId">
            <summary> 
            Gets or sets the language of the EntryData object. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Title">
            <summary> 
            Get or sets the title of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>String of the entry title.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Html">
            <summary> 
            Get or sets the html/xml of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>String of the entry html.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Summary">
            <summary> 
            Get or sets the summary of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>String of the entry summary.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.GoLive">
            <summary> 
            Get or sets the golive of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>Datetime of the entry golive.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.EndDate">
            <summary> 
            Get or sets the enddate of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>Datetime of the entry enddate.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.IsArchived">
            <summary> 
            Get or sets the Archive flag of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>Boolean.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.IsMarkedForDeletion">
            <summary> 
            Get or sets the MarkForDeletion flag on the EntryData object. 
            </summary> 
            <value></value> 
            <returns>Boolean of the entry flag MarkForDeletion.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Sku">
            <summary> 
            Get or sets the sku of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>String of the entry sku.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Url">
            <summary> 
            Get or sets the url of the EntryData object. 
            </summary> 
            <value></value> 
            <returns>String of the entry url.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.IsBuyable">
            <summary> 
            Get or sets whether the entry is buyable. 
            </summary> 
            <value></value> 
            <returns>Boolean of the entry flag Buyable.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.IsTangible">
            <summary> 
            Indicates if this product is  a tangible good.
            </summary> 
            <value></value> 
            <returns>Boolean value indicating if this product is  a tangible good.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.QuantityMultiple">
            <summary> 
            The has these number of items in it. 
            </summary> 
            <value></value> 
            <returns>Integer of the entry quantity multiple.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.EntryType">
            <summary> 
            The type of entry. 
            </summary> 
            <value></value> 
            <returns>Integer of the entry quantity multiple.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Quicklink">
            <summary>
            Gets or sets the entry's Quicklink.
            </summary>
            <value></value>
            <returns>A content item's Quicklink information.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.NumberSold">
            <summary>
            Gets or sets the Number Sold for this entry.
            </summary>
            <value></value>
            <returns>A content item's Quicklink information.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.VersionId">
            <summary>
            The version Id of the catalog entry.
            0 is the current version.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.IsSearchable">
            <summary>
            Gets or sets whether the entry is searchable for the object. True = searchable.
            </summary>
            <value></value>
            <returns>A boolean based on whether the entry is searchable.
              * <b>True</b> = entry is searchable.
              * <b>False</b> = entry is not searchable.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Dimensions">
            <summary> 
            Gets or sets the dimensions of the product.  Used for shipping.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Weight">
            <summary> 
             Gets or sets the weight of the product. Used for shipping.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Pricing">
            <summary> 
            The entry pricing, including currencies and quantity.
            </summary> 
            <value></value> 
            <returns>PricingData of the catalog entry.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.SalePrice">
            <summary>
            Gets the current Sale price from the Pricing object.
            To set an item's sale price, Use the Pricing property. Create a TierPrice with a quantity of 1.
            Use the PricingData(CurrencyId, SalePrice, ListPrice) constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.ListPrice">
            <summary>
            Gets the current List price from the Pricing object.
            To set an item's price, Use the Pricing property. Create a TierPrice with a quantity of 1.
            Use the PricingData(CurrencyId, SalePrice, ListPrice) constructor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.CurrencyId">
            <summary>
            Gets or sets the Id of the currency used for the current Sale and List prices.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.DisableInventoryManagement">
            <summary>
            Gets or sets the disable inventory management flag.  If true, this product does not track inventory and 
            no inventory management is performed.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryData.Attributes">
            <summary>
            Gets or sets the attributes of the Catalog Entry.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryAttributeCriteriaProperty">
            <summary>
            Enumeration used for filtering entry lists using EntryAttributeCriteria.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryAttributeCriteria">
            <summary>
            Specialized criteria class for filtering catalog entries by Product Attribute values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.EntryAttributeCriteria.AddFilter(Ektron.Cms.Commerce.EntryAttributeCriteriaProperty,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a normal criteria filter to the criteria object.  To add a filter on the entry attribute, use the special AddAttributeFilter method.
            </summary>
            <param name="field"></param>
            <param name="filterOperator"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.EntryAttributeCriteria.AddAttributeFilter(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a attribute based filter to the critaria object.
            </summary>
            <param name="attributeName">Name of attribute to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.EntryAttributeCriteria.AddAttributeFilter(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a attribute based filter to the critaria object.
            </summary>
            <param name="attributeId">Id of attribute to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the attribute.</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Commerce.BundleData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryProperty">
            <summary>
            Enumeration of EntryData columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryGroupProperty">
            <summary>
            Enumeration of EntryGroup properties used for sorting and filtering EntryGroupData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryGroupData">
            <summary>
            Data class representing Catalog Entry Groups in system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.EntryGroupData.#ctor(System.Int64,System.String,System.String,System.Int64,Ektron.Cms.Common.EkEnumeration.EntryGroupType)">
            <summary>
            
            </summary>
            <param name="id">id of entry group.</param>
            <param name="groupName">name of entry group.</param>
            <param name="description">description of entry group.</param>
            <param name="entryId">Id of entry owning group</param>
            <param name="groupType">type of entry group.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.Id">
            <summary>
            Gets or sets the Id of Entry Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.Name">
            <summary>
            Gets or sets the Name of Entry Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.Description">
            <summary>
            Gets or sets the description of Entry Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.EntryId">
            <summary>
            Gets or sets the Id of Catalog Entry that owns the Entry Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.GroupType">
            <summary>
            Gets or sets the type of Entry Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryGroupData.DisplayOrder">
            <summary>
            Gets or sets the display order of the entry group.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryGroupItemProperty">
            <summary>
            Enumeration of Entry Group Item properties used for sorting and filtering EntryGroupItemData objects.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryStatusData.Status">
            <summary>
            The status of the entry information.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryStatusData.StatusLanguage">
            <summary>
            The language that the entry is checked out to, if any.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.KitData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OptionGroupData">
            <summary>
            Data class representing Option groups for Entry Kits.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.OptionGroupData.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="groupName">Name of the option group.</param>
            <param name="description">Description of the OptionGroup</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.OptionGroupData.#ctor(System.Int64,System.String,System.String,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="id">Id of option group.</param>
            <param name="groupName">Name of the option group.</param>
            <param name="description">Description of the OptionGroup</param>
            <param name="image">path to image associated with option group.</param>
            <param name="entryId">Id of entry owning this option group.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupData.Image">
            <summary>
            Gets or sets the path to the image associated with option group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupData.Options">
            <summary>
            gets the list of options in this option groups.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OptionGroupItemData">
            <summary>
            Data class representing option group items in the CMS.  Option Group Items are option items for a particular Kit Grouping.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.OptionGroupItemData.#ctor(System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="optionName">Name of the option.</param>
            <param name="priceModification">Price modifier for this option.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.OptionGroupItemData.#ctor(System.Int64,System.Int64,System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="id">Id of option group item.</param>
            <param name="groupId">Id of option group this item belongs to.</param>
            <param name="optionName">Name of the option.</param>
            <param name="priceModification">Price modifier for this option.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupItemData.Name">
            <summary>
            Gets or sets the name of the option item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupItemData.PriceModificationType">
            <summary>
            Gets or sets the proce modification type for this option.  i.e. is the price modification a percentage or fixed amount.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupItemData.PriceModification">
            <summary>
            Gets or sets the price modification value for this option.  i.e. this option increases the price $10.00.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupItemData.ExtraText">
            <summary>
            Gets or sets any extra test associated with this option item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OptionGroupItemData.CurrencyId">
            <summary>
            Gets or sets the currency Id.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OptionGroupItemCollection">
            <summary>
            Collection class for OptionGroupItemData.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ProductData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ProductVariantData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ProductTypeAttributeProperty">
            <summary>
            Enumeration of ProductTypeAttributeData properties available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryAttributeProperty">
            <summary>
            Enumeration of EntryAttributeProperty properties available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ProductTypeProperty">
            <summary>
            Enumeration of ProductType properties used for sorting and filtering CustomerData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ProductTypeData">
            <summary>
            Data class representing ecommerce product types.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ContractData.Id">
            <summary>
            Gets or sets the Id of the contract.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ContractData.Name">
            <summary>
            Gets or sets the contract name.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CouponProperty">
            <summary>
            Enumeration of Coupon properties used for sorting and filtering CouponData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CouponData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CouponData.Validate">
            <summary>
            Validates the CouponData object is valid for saving.
            </summary>
            <returns>Returns a ValidationResult object with any validation errors.</returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.Id">
            <summary>
            Gets or sets the Id of the coupon.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.Code">
            <summary>
            Gets or sets the coupon code.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.CurrencyId">
            <summary>
            Gets or sets the Id of the currency this coupon applies to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.Description">
            <summary>
            Gets or sets the description of the coupon.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.StartDate">
            <summary>
            Gets or sets the date the coupon becomes valid.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.ExpirationDate">
            <summary>
            Gets or sets the date the coupon expires.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.DiscountType">
            <summary>
            Gets or sets the Coupon Discount Type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.DiscountValue">
            <summary>
             Gets or sets the value of the discount.  
            For a fixed amount, this would be the amount (i.e. 5.00). 
            For percentage, it would be the discount percent value in whole numbers (i.e. 15% = 15.00).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.MinimumAmount">
            <summary>
             Gets or sets the minimum order amount required before the coupon is applicable.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.MaximumAmount">
            <summary>
            Gets or sets the maximum order amount that this coupon can be applied to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.CouponType">
            <summary>
            Gets or sets the coupon type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.OnePerCustomer">
            <summary>
            Gets or sets the OnePerCuster value.  If true, this coupon can only be used once by each customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.MaximumUses">
            <summary>
            Gets or sets the maximim number of times this coupon can be used before it expires.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.IsActive">
            <summary>
            Determines whether or not this coupon is currently active. Deleted coupons remain in the system and are marked inactive.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.IsRedeemable">
            <summary>
            Determines whether or not this coupon is currently redeemable. A coupon may not be reddemable if the it is inactive, not within its valid period, or has been redeemed the maximum number of times.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.IsCombinable">
            <summary>
            Determins whether or not this coupon can be combined with other coupons.  If true, this coupon can be combined with other "Combinable" coupons.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.IsApplicabletoSubscriptions">
            <summary>
            Determines whether this coupon is applicable to subscription or not
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.AppliesToQuantity">
            <summary>
            For an DiscountType.Amount coupon, defines the applicable quantity for a single line in a basket.
            Default is 1.
            Example, if you have a $5 Amount coupon,
            and a quantity 5 of a $10 item (total cost $50), by default the coupon applies to the first item only: $50 - $5 = $45.
            Change the AppliesToQuantity value to 2, the coupon applies to 2 of the item quantity: $50 - $10 = $40.
            Change the AppliesToQuantity value to 3, the coupon applies to 3 of the item quantity: $50 - $15 = $35.
            And so on...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponData.UseCount">
            <summary>
            Returns the count representing the number of orders that this coupon has been applied to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.ObjectId">
            <summary>
            Gets or sets the Id of object the coupon is applied to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.ObjectType">
            <summary>
            Gets or sets the type of object this coupon is applied to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.CouponId">
            <summary>
            Gets or sets the Id of the coupon
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.Title">
            <summary>
            Gets or sets the Title of the object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.Path">
            <summary>
            Gets or sets the Path of the object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.IsIncluded">
            <summary>
            Gets or sets whether or not the Object is included in the coupon.  If true, the object is included in the coupon.
            If false, the coupon is NOT included in the coupon.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CouponEntryData.DataState">
            <summary>
            Gets or sets the current saved state for the CouponEntry.  Used by the Cms internally.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ProductCouponEntryData.EntryType">
            <summary>
            Gets or sets the type of catalog entry.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.AddressProperty">
            <summary>
            Enumeration of Address properties used for sorting and filtering AddressData objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.Id">
            <summary>
            ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.CustomerId">
            <summary>
            Customer ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.Name">
            <summary>
            Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.Company">
            <summary>
            Company Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.City">
            <summary>
            City (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.RegionId">
            <summary>
            Region ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.PostalCode">
            <summary>
            Postal Code (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.CountryId">
            <summary>
            Country ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.Validated">
            <summary>
            Validated (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Commerce.AddressProperty.IsCommercial">
            <summary>
            Is Commercial (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.AddressData">
            <summary>
            Gets or sets information about a specified address. For example, if you were creating an
            address data object for a fictional user, Ivan Tory, at Ektron's address, the code might 
            look like this:
            <code>
            Ektron.Cms.Commerce.AddressData address = new Ektron.Cms.Commerce.AddressData();
            address.Name = "Ivan Tory";
            address.Company = "Ektron, Inc.";
            address.AddressLine1 = "542 Amherst Street (Route 101A)";
            address.City = "Nashua";
            address.Region = new Ektron.Cms.Commerce.RegionData();
            address.Region.Id = 31;   // 31 is the region ID for New Hampshire.
            address.PostalCode = "03063";
            address.Country = new Ektron.Cms.Commerce.CountryData();
            address.Country.Id = 840;   // 840 is the country ID for the United States
            address.Phone = "603-594-0249";
            AddressAPI.Add(address);
            </code>
            To update an existing address's information, use the <c>Id</c> property to specify the address.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.AddressData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.AddressData.#ctor(System.String,System.String,Ektron.Cms.Commerce.RegionData,Ektron.Cms.Commerce.CountryData,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="addressLine1">Address Line 1</param>
            <param name="region">region</param>
            <param name="country">country</param>
            <param name="city">city</param>
            <param name="postalcode">postal code</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.AddressData.#ctor(System.String,System.String,Ektron.Cms.Commerce.RegionData,Ektron.Cms.Commerce.CountryData,System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="addressLine1">Adress line 1</param>
            <param name="region">region </param>
            <param name="country">country</param>
            <param name="city">city</param>
            <param name="postalCode">postal code</param>
            <param name="iscommercial">is commercial</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Id">
            <summary>
            Gets or sets the ID of an address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Name">
            <summary>
            Gets or sets the name associated with the address. For example, if you are entering an address 
            for Ivan Tory, enter the name "Ivan Tory" in this property. This property is required when
            creating an address data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Company">
            <summary>
            Gets or sets the name of the company associated with this address. For example, if the address is 
            for Ektron, enter "Ektron, Inc." in the property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.AddressLine1">
            <summary>
            Gets or sets the first line of the address. This property is required when
            creating an address data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.AddressLine2">
            <summary>
            Gets or sets line 2 of address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.City">
            <summary>
            Gets or sets the city associated with this address. This property is required when
            creating an address data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Region">
            <summary>
            Gets or sets the region associated with this address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.PostalCode">
            <summary>
            Gets or sets the postal code associated with this address. This property is required when
            creating an address data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Country">
            <summary>
            Gets or sets the country associated with this address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.Phone">
            <summary>
            Gets or sets the phone number associated with this address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.IsValidated">
            <summary>
            Gets or sets whether this address is validated.
            Validation can come from 3rd party services.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AddressData.IsCommercial">
            <summary>
            Gets or sets whether this address is commercial.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CustomerProperty">
            <summary>
            Enumeration of Customer properties used for sorting and filtering CustomerData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CustomerData">
            <summary>
            Data class representing Customers in system.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.Id">
            <summary>
            Gets or sets the Id of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.UserId">
            <summary>
            Gets or sets the Id of the Cms User object associated with this customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.UserName">
            <summary>
            Gets or sets the username for the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.FirstName">
            <summary>
            Gets or sets the first name of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.LastName">
            <summary>
            Gets or sets the last of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.DisplayName">
            <summary>
            Gets or sets the display name of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.IsMembershipUser">
            <summary>
            Gets or sets the IsMembershipUser status of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.LanguageId">
            <summary>
            Gets or sets the integer ID of the language for the UserData object.
            </summary>
            <value></value>
            <returns>The integer ID of the language.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.IsDeleted">
            <summary>
            Gets the IsDeleted status of the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.TotalOrders">
            <summary>
            It's Readonly property,
            Gets the toal number of orders placed by the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.TotalOrderValue">
            <summary>
            It's Readonly property,
            Gets the total value of orders placed by this customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.AverageOrderValue">
            <summary>
            Gets the average order placed by this customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.BillingAddressId">
            <summary>
            Gets or sets the Address Id of the billing address for the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.ShippingAddressId">
            <summary>
            Gets or sets Address Id of the shipping address for this customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.Password">
            <summary>
            Gets or sets the password for the customer.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CustomerData.EmailAddress">
            <summary>
            Gets or sets the email address of the customer.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.IAddress.UpdateOrderAddress(Ektron.Cms.Commerce.AddressData,System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Updates an address associated with an order.  This update only affects this specific address and 
            does not affect the customer's actual saved address.
            </summary>
            <param name="addressData"></param>
            <param name="orderId">Id of order to update address for.</param>
            <param name="isBilling">If true, updates the billing address for an order.</param>
            <param name="isShipping">If true, updates the shipping address for an order.</param>
            <returns>returns updated AddressData object</returns>
        </member>
        <member name="M:Ektron.Cms.Common.CmsException.GetErrorCode(System.Guid)">
            <summary>
            Gets the error code by encoding the Guid for a particular error to
            allow easier use by humans.
            </summary>
            <param name="exceptionCode">The exception code.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Common.CmsException.ExceptionCode">
            <summary>
            Gets the code associated with this exception.
            </summary>
            <value>
            The exception code.
            </value>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderProperty">
            <summary>
            Enumeration of order properties used for sorting and filtering OrderData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.OrderData.CopyData(Ektron.Cms.Commerce.OrderData,Ektron.Cms.Commerce.OrderData)">
            <summary>
            Copied data from one OrderData class to another.
            </summary>
            <param name="origin">source object to copy data from.</param>
            <param name="destination">object to copy data to.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.Subtotal">
            <summary>
            Gets or sets the Order SubTotal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.TaxTotal">
            <summary>
            Gets or sets the total tax amount for the order.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.ShippingTotal">
            <summary>
            Gets or sets the total shipping charged for order.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.ShippingTaxTotal">
            <summary>
            Gets or sets the total shippingtax charged for order.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.HandlingTotal">
            <summary>
            Gets or sets the total handling charges for the order.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.CouponTotal">
            <summary>
            Gets or sets the total coupon discount for the order.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderData.OrderTotal">
            <summary>
            Gets or sets the Order Total.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderKitConfigData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderLineData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderLineData.PriceEach">
            <summary>
            Gets or sets the unit sale price for each line item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderLineData.PriceSubTotal">
            <summary>
            Gets or sets the line item subtotal.  This does not reflect and discounts or adjustments.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.OrderLineData.PriceTotal">
            <summary>
            Gets or sets the total line item price.  This reflects quantity and any applicable discounts.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderPartData">
            <summary>
            data class representing order part sin the cms.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderPaymentProperty">
            <summary>
            Enumeration of order properties used for sorting and filtering OrderData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.OrderPaymentData">
            <summary>
            Represents an order payment
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Reporting.OrderReportData">
            <summary>
            Class representing order reporting.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Reporting.OrderReportData.TotalOrders">
            <summary>
            Total number of orders for this query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PipelineStageData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.InventoryProperty">
            <summary>
            Enumeration of InventoryData columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.InventoryData">
            <summary>
            The InventoryData class allows you to get and set various inventory 
            information for a catalog entry (product).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.EntryId">
            <summary>
            Gets or sets the ID of the catalog entry (product) that this inventory data represents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.EntryTitle">
            <summary>
            Gets or sets the Title of the catalog entry(product) that this inventory data represents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.EntryType">
            <summary>
            Gets or sets the Type of the catalog entry(product) that this inventory data represents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.DisableEntryInventoryManagement">
            <summary>
            Gets or sets the entry disable inventory management flag.  
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.UnitsInStock">
            <summary>
            Gets or sets the the number of units currently in stock for the product.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.UnitsOnOrder">
            <summary>
            Gets or sets The number of units currently on order for this product. 
            This is the number of units that the store has ordered to replenish 
            inventory and NOT the number of units that are currently on order by customers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.InventoryData.ReorderLevel">
            <summary>
            Gets or sets the inventory level at which stock should be reordered.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CountryCriteria">
            <summary>
            CountryCriteria Class
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CountryProperty">
            <summary>
            Enumeration of CountryData properties used for sorting and filtering CountryData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CountryData">
            <summary>
            Gets or sets information about a specified country.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CountryData.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="id">The ID of the country. The ID is the ISO numeric code of the country.</param>
            <param name="name">The name of the country.</param>
            <param name="shortIsoCode">The 2 letter ISO code of the country.</param>
            <param name="longIsoCode">The 3 letter ISO code of the country.</param>
            <param name="enabled">Indicates whether or not the country is enabled for use.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.CountryData.Validate">
            <summary>
            Validates the CountryData object is valid for saving.
            </summary>
            <returns>Returns a ValidationResult object with any validation errors.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.CountryData.ToString">
            <summary>
            Returns Name of Country.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryData.Id">
            <summary>
            Gets or sets the ID of the country.  The ID is the ISO numeric code of the country.
            This property is required when creating an country data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryData.Name">
            <summary>
            Gets or sets the name of the country. This property is required when
            creating an country data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryData.ShortIsoCode">
            <summary>
            Gets or sets the 2 letter ISO code of the country. This property is required when
            creating an country data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryData.LongIsoCode">
            <summary>
            Gets or sets the 3 letter ISO code of the country. This property is required when
            creating an country data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryData.Enabled">
            <summary>
            Gets or sets whether or not the country is enabled for use. 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CurrencyProperty">
            <summary>
            Enumeration of CurrencyData properties used for sorting and filtering CurrencyData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CurrencyData">
            <summary>
            Data class representing currencies in system.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.Id">
            <summary>
            Gets or sets the Id of the currency.  The Id is the ISO numeric code of the currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.Name">
            <summary>
            Gets or sets the name of the currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.AlphaIsoCode">
            <summary>
            Gets or sets the 3 letter ISO  code of the currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.Enabled">
            <summary>
            Gets or sets whether or not the currency is enabled for use.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.CultureCode">
            <summary>
            Gets or sets the culture code associated with this currency.  This is used for formatting
            currency values for this currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.CurrencySymbol">
            <summary>
            Read only function that gets the symbol for this currency.
            Example: $
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyData.ISOCurrencySymbol">
            <summary>
            Read only function that gets the ISO symbol for this currency.
            Example: USD
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CurrencyCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Currency from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.RegionProperty">
            <summary>
            Enumeration of Region properties used for sorting and filtering RegionData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.RegionData">
            <summary>
            Gets or sets information about specified geographic regions within countries that your 
            eCommerce site services. For example, in the United States of America, each state is a region.
            So, if you were adding New Hampshire as a region, the code might look like this.
            <code>
            RegionData region = new RegionData();
            region.Name = "New Hampshire";
            region.CountryId = 840;   // 840 is the country code for the United States.
            region.Code = "NH";
            region.Enabled = true;
            RegionAPI.Add(region);
            </code>
            To update an existing region's information, use the <c>Id</c> property to specify the region. 
            For example, to update New Hampshire's information, add <c>region.Id = 31;</c> to the code above.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.RegionData.#ctor(System.String,System.Int64,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name">The name of the region.</param>
            <param name="countryId">The ID of the country to which the region belongs.</param>
            <param name="code">Gets or sets the code of the region. This is typically an abbreviation for the name of the region.</param>
            <param name="enabled">Indicates whether or not the region is enabled for use.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.RegionData.Validate">
            <summary>
            Validates the RegionData object is valid for saving.
            </summary>
            <returns>Returns a ValidationResult object with any validation errors.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.RegionData.ToString">
            <summary>
            Returns Name of Region.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionData.Id">
            <summary>
            Gets or sets the ID of the region.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionData.Name">
            <summary>
            Gets or sets the name of the region. For example, if the region is a US state, you might enter 
            "New Hampshire" for this property. This property is required when creating an region data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionData.CountryId">
            <summary>
            Gets or sets the ID of the country to which the region belongs. For example, if you are adding
            a region to the United States, you would enter "840" for this property. This property is 
            required when creating an region data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionData.Code">
            <summary>
            Gets or sets the code of the region. This is typically an abbreviation for the name of the region.
            For example, if you add New Hampshire as a region, you would enter "NH" for this property. Each
            region must have its own unique code. You cannot have more than one region with the same code.
            This property is required when creating an region data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionData.Enabled">
            <summary>
            Gets or sets whether or not the region is enabled for use.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ThumbnailDefaultProperty">
            <summary>
            Enumeration of ThumbnailDefaultData properties used for sorting and filtering ThumbnailDefaultData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PasswordHistoryCriteria">
            <summary>
            PasswordHistoryCriteria Class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PasswordHistoryProperty">
            <summary>
            Enumeration of PasswordHistory columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CreditCardTypeProperty">
            <summary>
            Enumeration of CreditCardTypeData properties used for sorting and filtering CreditCardTypeData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CreditCardTypeData">
            <summary>
            Data class representing credit card types in system.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardTypeData.Id">
            <summary>
            Gets or sets the Id of the credit card type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardTypeData.Name">
            <summary>
            Gets or sets the name of the credit card
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardTypeData.IsAccepted">
            <summary>
            Gets or sets whether or not the credit car type is accepted.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardTypeData.Image">
            <summary>
            gets or sets path to image for credit card type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardTypeData.Regex">
            <summary>
            gets or sets the regex validation for the credit card type.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.Authorize">
            <summary>
            Authorizes a payment, but does not capture it.  Returns authoization code so it can be captured at a later date.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.AuthorizeAndCapture">
            <summary>
            Authorizes and captures a payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.CapturePreauthorization(System.String)">
            <summary>
            Captures a preauthorized payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.Void(System.String)">
            <summary>
            Voids a preauthorized payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.AuthorizeRecurringPayment(Ektron.Cms.Common.RecurrenceData)">
            <summary>
            Authorizes a recurring payment transaction.
            </summary>
            <param name="recurrence">recurring payment schedule</param>
            <returns>Recurring transaction id.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.CancelRecurringPayment(System.String)">
            <summary>
            Cancels a recurring payment.
            </summary>
            <param name="recurringTransactionId">id of recurring transaction to cancel.</param>
            <returns>Recurring transaction id.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.RecurringPaymentProcessed(System.String,System.String,System.String)">
            <summary>
            Handles a recurring payment that has been processed.  This method passes the processing on to the specified PaymentProvider.
            </summary>
            <param name="recurringTransactionId">Id of the recurring transaction</param>
            <param name="paymentTransactionId">Id of individual payment.</param>
            <param name="gatewayName">Name of the gateway to use for processing the payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.RecurringPaymentFailed(System.String,System.String)">
            <summary>
            Handles a recurring payment that has failed.  This method should be the callback point when a recurring payment has failed.
            </summary>
            <param name="recurringTransactionId">Id of the recurring transaction</param>
            <param name="gatewayName">Name of the gateway to use for processing the payment.</param>
        </member>
        <member name="T:Ektron.Cms.Commerce.CreditCardPayment">
            <summary>
            Data class representing a credit card payment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PaymentMethod">
            <summary>
            Base class used for representing payment methods for use by payment provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PaymentMethod.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back from the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentMethod.BillingFirstName">
            <summary>
            Gets or sets the first name of the billable party.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentMethod.BillingLastName">
            <summary>
            Gets or sets the last name of the billable party.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentMethod.BillingAddress">
            <summary>
            Gets or sets the Billing Address of the party being authorized.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CreditCardPayment.#ctor(System.String,Ektron.Cms.Commerce.CCExpirationDate,System.String)">
            <summary>
            
            </summary>
            <param name="number">number for this credit card</param>
            <param name="expirationDate">Expiration date for this credit card</param>
            <param name="ccid">CCID for this credit card</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.CreditCardPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back form the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardPayment.ExpirationDate">
            <summary>
            Gets or sets the Expiration date for this credit card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardPayment.Number">
            <summary>
            Gets or sets the number for this credit card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CreditCardPayment.CCID">
            <summary>
            Gets or sets the CCID for this credit card.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CCExpirationDate">
            <summary>
            Data class used for representing a Credit Card Expiration Date.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CCExpirationDate.#ctor(Ektron.Cms.Common.EkEnumeration.CCExpirationMonth,System.Int32)">
            <summary>
            
            </summary>
            <param name="month">the month of the credit card expiration date.</param>
            <param name="year">the year of the credit card expiration.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.CCExpirationDate.To4DigitFormat">
            <summary>
            Returns the credit card expiration date in a 4 digit format (MMyy).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.CCExpirationDate.To6DigitFormat">
            <summary>
            Returns the credit card expiration date in a 6 digit format (MMyyyy).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CCExpirationDate.IsExpired">
            <summary>
            Returns true if the Expiration date has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.CCExpirationDate.Month">
            <summary>
            Gets or sets the month of the credit card expiration date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CCExpirationDate.Year">
            <summary>
            Gets or sets the year of the credit card expiration.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CheckPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back form the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Commerce.GoogleCheckoutPayment">
            <summary>
            Data class representing a GoogleCheckout payment.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.GoogleCheckoutPayment.#ctor(System.String,System.String)">
            <summary>
            GoogleCheckoutPayment
            </summary>
            <param name="orderNumber">orderNumber</param>
            <param name="payerId">payerId</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.GoogleCheckoutPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back form the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.GoogleCheckoutPayment.OrderNumber">
            <summary>
            Gets or sets the Token for this payment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentMethods.PayPalResponse.Response">
            <summary>
            The raw response from the gateway.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.MaestroCardPayment.Validate">
            <summary>
            Validates the data entered into the cards properties.
            </summary>
            <returns>Returns true if the current data meets validation requirements, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.MaestroCardPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back from the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.NameOnCard">
            <summary>
            The name of the cardholder, as found on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.CardNumber">
            <summary>
            The account number as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.StartDate">
            <summary>
            The original cards issue date, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.ExpirationDate">
            <summary>
            The expiration date, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.IssueNumber">
            <summary>
            The issue number, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.CardSecurityNumber">
            <summary>
            The security number, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.MaestroCardPayment.BankName">
            <summary>
            Bank or Institution that issued the credit card.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PayPalPayment">
            <summary>
            Data class representing a PayPal payment.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PayPalPayment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PayPalPayment.#ctor(System.String,System.String)">
            <summary>
            Paypal payment method
            </summary>
            <param name="token">token</param>
            <param name="payerId">payerId</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.PayPalPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back form the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.PayPalPayment.Token">
            <summary>
            Gets or sets the Token for this payment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PayPalPayment.PayerId">
            <summary>
            Gets or sets the payerId for this payment.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.SoloCardPayment.Validate">
            <summary>
            Validates the data entered into the cards properties.
            </summary>
            <returns>Returns true if the current data meets validation requirements, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.SoloCardPayment.GetPayment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns a PaymentMethod based upon NameValueCollection.  This would be used by the checkout control to get the paymentMethod
            posted back from the page.
            </summary>
            <param name="postBackData"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.NameOnCard">
            <summary>
            The name of the cardholder, as found on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.CardNumber">
            <summary>
            The account number as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.StartDate">
            <summary>
            The original cards issue date, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.ExpirationDate">
            <summary>
            The expiration date, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.IssueNumber">
            <summary>
            The issue number, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.CardSecurityNumber">
            <summary>
            The security number, as printed on the card.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.SoloCardPayment.BankName">
            <summary>
            Bank or Institution that issued the credit card.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PaymentAuthorization">
            <summary>
            Data class representing payment authorization from gateway.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.Gateway">
            <summary>
            Gets or sets the name of the gateway used for this authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.TransactionId">
            <summary>
            Gets or sets the Transaction Id for this authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.RecurringTransactionId">
            <summary>
            Gets or sets the Transaction id for a recurring transaction.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.Message">
            <summary>
            Gets or sets a success or error message for the authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.AuthorizedOn">
            <summary>
            Gets or sets the authorization date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.CapturedOn">
            <summary>
            Gets or sets the Capture Date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.VoidedOn">
            <summary>
            Gets or sets the Voided Date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.CreditedOn">
            <summary>
            Gets or sets the Credited Date.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PaymentGatewayData">
            <summary>
            The PaymentGatewayData data class gets or sets information about a specified payment gateway.
            A payment gateway is the company that handles the payments from your site. CMS400.NET comes ready to
            use with several payment gateways installed, including Authorize.net and PayFlow. Each payment 
            gateway provider accepts configuration parameters.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PaymentGatewayData.Validate">
            <summary>
            Validates the PaymentGatewayData object is valid for saving.
            </summary>
            <returns>Returns a ValidationResult object with any validation errors.</returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.Id">
            <summary>
            Gets or sets the CMS400.NET ID for the payment gateway data object. You cannot set the ID of a 
            newly created data object. The ID of an object is set internally by CMS400.NET during the creation
            (Add) process. You can set the ID of the object for updating purposes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.Name">
            <summary>
            Gets or sets the name associated with the payment gateway. For example, if you were adding 
            information for a payment gateway company called EkPay, enter "EkPay" for this property. When
            creating a payment gateway, a name value is required.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.UserId">
            <summary>
            Gets or sets the user ID associated with a payment gateway. This is not a CMS400.NET user ID. This
            information is supplied by the payment gateway.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.Password">
            <summary>
            Gets or sets the password associated with a payment gateway. This is not a CMS400.NET password. 
            This information is supplied by the payment gateway.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.IsDefault">
            <summary>
            Gets or sets whether this payment gateway is the default in CMS400.NET.
              * <b>True</b> = default payment gateway
              * <b>False</b> = not the default payment gateway
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.IsCustom">
            <summary>
            Gets or sets whether this payment gateway is a custom payment gateway or one that 
            comes pre-installed with Ektron CMS400.NET. Set this property to true when creating a custom
            payment gateway.
              * <b>True</b> = is a custom payment gateway
              * <b>False</b> = is not a custom payment gateway
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.CustomFieldOne">
            <summary>
            Gets or sets the first custom field a payment gateway might require. Each type of payment 
            gateway provider accepts configuration parameters. For example, Authorize.NET requires a 
            username and password while PayFlow requires a username, password, vendor, and partner.
            So, if you were creating an object for PayFlow, you would enter the required vendor information
            in this property. If your payment gateway does not require additional information, leave blank.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.CustomFieldTwo">
            <summary>
            Gets or sets the second custom field a payment gateway might require. Each type of payment 
            gateway provider accepts configuration parameters. For example, Authorize.NET requires a 
            username and password while PayFlow requires a username, password, vendor, and partner.
            So, if you were creating an object for PayFlow, you would enter the required partner information
            in this property. If your payment gateway does not require additional information, leave blank.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.AllowsCreditCardPayments">
            <summary>
            Gets or sets whether the payment gateway accepts credit cards.
              * <b>True</b> = the payment gateway accepts credit cards
              * <b>False</b> = the payment gateway does not accept credit cards
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentGatewayData.AllowsCheckPayments">
            <summary>
            Gets or sets whether the payment gateway accepts check payments.
              * <b>True</b> = the payment gateway accepts check payments
              * <b>False</b> = the payment gateway does not accept check payments
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.EntryPricebookData">
            <summary>
            contains information about Entrypricebookdata
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.EntryPricebookData.#ctor">
            <summary>
            Constructor logic goes here 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryPricebookData.PricebookPrice">
            <summary>
            Gets the Pricebookprice
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryPricebookData.Id">
            <summary>
            Gets or sets the Id of the pricebook to the entry.
            </summary>>
        </member>
        <member name="P:Ektron.Cms.Commerce.EntryPricebookData.PricebookId">
            <summary>
            Gets or sets the Id of the pricebook to the entry.
            </summary>>
        </member>
        <member name="T:Ektron.Cms.Commerce.PricebookProperty">
            <summary>
            Enumeration of Pricebook properties used for sorting and filtering PricebookData objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PricebookData">
            <summary>
            Represents the Pricebook information
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricebookData.Id">
            <summary>
            Gets or sets the Id of the coupon.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricebookData.Description">
            <summary>
            Gets or sets the description of the coupon.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricebookData.PricebookName">
            <summary>
            Gets or sets the name of the price book
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricebookData.IsEnabled">
            <summary>
            Gets or sets the whether the pricebook is enabled or not
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.CurrencyPricingData">
            <summary>
            Represents Pricing Information for  agiven currency.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.CurrencyPricingData.#ctor(System.Int64,System.Decimal,System.Decimal)">
            <summary>
            Creates  a CurrencyPricingData with a single tierprice of quantity 1 and the supplied sale price.
            </summary>
            <param name="currencyId">Id of currency to create pricing for.</param>
            <param name="listPrice">List Price for currency.</param>
            <param name="salePrice">sale Price for single tier item.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.CurrencyId">
            <summary>
            Gets or sets the Id of currency that this pricing represents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.NumericIsoCode">
            <summary>
            Gets or sets the numeric iso code of the currency associated with these prices.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.AlphaIsoCode">
            <summary>
            Gets or sets the alpha iso code of the currency associated with these prices.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.ListPrice">
            <summary>
            Gets or sets the list price for this currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.TierPrices">
            <summary>
            Gets all the tier prices for this currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.PricebookPriceList">
            <summary>
            Gtts all the pricebook prices assigned for this currency
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.SalePrice">
            <summary>
            Gets the default sale price for a single quantity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CurrencyPricingData.PricingType">
            <summary>
            Gets or sets the PricingType forthe currency.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ExchangeRateProperty">
            <summary>
            Enumeration of ExchangeRate columns available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.ExchangeRateData.Validate">
            <summary>
            Validates the ExchangeRate data object for saving.
            </summary>
            <returns>returns ValidationResult object with results.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.ExchangeRateData.ConvertPrice(System.Decimal)">
            <summary>
            Converts a pric ein the base currency to a price in the exchange currency using the rate defined.
            </summary>
            <param name="basePrice">price to convert.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.ExchangeRateData.BaseCurrencyId">
            <summary>
            Gets or sets the Currency Id for the base currency.  
            This is the currency that is being used as the basis for the exchange rate.  i.e. 
            If you are converting from USD to AUD, USD is the base currency
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ExchangeRateData.ExchangeCurrencyId">
            <summary>
            Gets or sets the Currency Id for the exchange currency.  
            This is the currency that the currency amount is being converted to.
            If you are converting from USD to AUD, AUD is the exchange currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ExchangeRateData.Rate">
            <summary>
            Gets or sets the actual exchange rate between to currencies.  This is the rate applied to base currency 
            to convert it to exchange currency.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ExchangeRateData.EffectiveDate">
            <summary>
            Gets or sets the date and time in which this rate becomes effective.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PricingData.#ctor(System.Int64,System.Decimal,System.Decimal)">
            <summary>
            Creates  a PricingData with a single CurrencyPricingData that contains a single tierprice with the supplied sale price.
            </summary>
            <param name="currencyId">Id of currency to create pricing for.</param>
            <param name="listPrice">List Price for currency.</param>
            <param name="salePrice">sale Price for single tier item.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricingData.CurrencyPricelist">
            <summary>
            Gets list of CurrencyPriceData objects associated with this PricingData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricingData.IsRecurringPrice">
            <summary>
            Gets the Is Recurring Price flag.  If true, this price is for recurring billing.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PricingData.Recurrence">
            <summary>
            Gets or sets the recurrence pattern for this price if it supports recurring billing.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TierPriceData.DataState">
            <summary>
            Gets or sets the TierPrices persistence State.  Used internally.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TierPriceData.RecurrenceId">
            <summary>
            Gets or sets the id of the recurrence pattern for this price if it supports recurring billing.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.RecommendationItemData">
            <summary>
            Data class representing entry reccomendations in ecommerce system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.RecommendationItemData.#ctor(System.Int64,System.Int64,System.Int64,Ektron.Cms.Common.EkEnumeration.RecommendationType)">
            <summary>
            
            </summary>
            <param name="id">id of reccomendation.</param>
            <param name="entryId">entry id associated with recommendation.</param>
            <param name="entryLanguage">language of entryId.</param>
            <param name="recommendationType">type of recommendation.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Type">
            <summary>
            Gets or sets the type of reccomendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.EntryType">
            <summary>
            Gets or sets the entry type associated with this recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.EntryLanguage">
            <summary>
            Gets or sets the language of the entry.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Title">
            <summary>
            Gets or sets the title of the recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Image">
            <summary>
            Gets or sets the image associated with the recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.ImageThumbnail">
            <summary>
            Gets or sets the image thumbnail associated with the recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Html">
            <summary>
            Gets or sets the Html of the recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Summary">
            <summary>
            Gets or sets the summary of the recommendation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Pricing">
            <summary> 
            The entry pricing, including currencies and quantity.
            </summary> 
            <value></value> 
            <returns>PricingData of the catalog entry.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Commerce.RecommendationItemData.Quicklink">
            <summary>
            Gets or sets the quiclink of the recommendation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PackageProperty">
            <summary>
            Enumeration representing properties of the packagedata class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PackageData">
            <summary>
            Data class used for representing package sizes used for shipping items.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.PackageData.#ctor(System.String,Ektron.Cms.Commerce.Dimensions,Ektron.Cms.Commerce.Weight)">
            <summary>
            
            </summary>
            <param name="name">the name of the package</param>
            <param name="dimensions">dimensions of the package</param>
            <param name="maxWeight">maximum weight capacity of the package</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.PackageData.#ctor(System.String,Ektron.Cms.Commerce.Dimensions,Ektron.Cms.Commerce.Weight,System.Int64)">
            <summary>
            
            </summary>
            <param name="name">the name of the package</param>
            <param name="dimensions">dimensions of the package</param>
            <param name="maxWeight">maximum weight capacity of the package</param>
            <param name="id">the Id of the package.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.PackageData.Id">
            <summary>
            Gets or sets the Id of the package.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PackageData.Name">
            <summary>
            Gets or sets the name of the package.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PackageData.Dimensions">
            <summary>
            gets or sets the dimensions of the package.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PackageData.MaxWeight">
            <summary>
            gets or sets the maximum weight capacity of the package.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ShippingBaseData">
            <summary>
            Base data class for representing shipping method information.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingBaseData.Name">
            <summary>
            Gets or sets the name of the the shipping data
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingBaseData.Id">
            <summary>
            gets or sets the id of the the shipping data.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingBaseData.ProviderService">
            <summary>
            Gets or sets the name of the provider service for the shipping data.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ShippingMethodProperty">
            <summary>
            Enumeration representing properties of the ShippingMethodData class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ShippingMethodData">
            <summary>
            Data class used to represent shipping methods defined in the cms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingMethodData.IsActive">
            <summary>
            Gets or sets whethe ror not the Shipping Method is Active.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingMethodData.DisplayOrder">
            <summary>
            Gets or sets the display order for this shipping method.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ShippingOptionData">
            <summary>
            Data class representing a quote for a particular shipping method.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingOptionData.ShippingFee">
            <summary>
            Gets or sets the fee for this particular shipping option.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingOptionData.CurrencyId">
            <summary>
            Gets or sets the currency associated with this shipping Fee.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxRateData.Id">
            <summary>
            Gets or sets the Id of the TaxRate.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxRateData.TypeId">
            <summary>
            Gets or sets the type of the Tax Rate.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxRateData.TypeItemId">
            <summary>
            Gets or sets the Id of the tax type object this tax rate applies to.  
            For instance, for a region sales tax, TypeItemId would be the Id of the corresponding region.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxRateData.TaxClassId">
            <summary>
            Gets or sets the Id of the tax class that this rate applies to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxRateData.Rate">
            <summary>
            Gets or sets the actual rate for this TaxRate object.  Should be entered in decimal format - i.e. .075 for 7.5%
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.CountryTaxRateData.CountryData">
            <summary>
            Gets or sets the CountryData object associated with this tax rate.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ITaxType">
            <summary>
            Interface for tax type in the e-commerce system
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PostalCodeTaxRateData.PostalCode">
            <summary>
            Gets or sets the postal code associated with this tax rate.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PostalCodeTaxRateData.RegionId">
            <summary>
            Gets or sets the regionid asociated with this postal code.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.RegionTaxRateData.RegionData">
            <summary>
            Gets or sets the RegionData object associated with this tax rate.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxClassProperty">
            <summary>
            / Enumeration of TaxClass columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxClassData">
            <summary>
            Data object representing tax class information.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.TaxClassData.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name">name of the tax class</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.TaxClassData.#ctor(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="name">name of the tax class</param>
            <param name="id">name of the tax class</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxClassData.Id">
            <summary>
            Gets or sets the name of the tax class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxClassData.Name">
            <summary>
            Gets or sets the name of the tax class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxRateProperty">
            <summary>
            Enumeration of possible values to order Lists of TaxRateData by.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxRateType">
            <summary>
            This Represents the default Tax rate Types supported by The CMS.  Additonal tax Types may be supported by customers.
            Example - customer could create specialized VAT TaxRate type.
            
            </summary>
            <remarks>
            TaxRateType Id's 1-100 should be reserved for internal use.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxTypeProperty">
            <summary>
            / Enumeration of TaxType columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.TaxTypeData">
            <summary>
            Data class representing Tax Types.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.TaxTypeData.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name">name of the tax class</param>
            <param name="precedence">Gets or sets the precedence of the tax class.  This is the priority order in which it will be applied. 
            For example, if type "Postal Code Sales Tax is priority 1" and it exists for an address it will be used over
            type "State Sales Tax" which is priority 2.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.TaxTypeData.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            
            </summary>
            <param name="name">name of the tax class</param>
            <param name="id">name of the tax class</param>
            <param name="precedence">Gets or sets the precedence of the tax class.  This is the priority order in which it will be applied. 
            For example, if type "Postal Code Sales Tax is priority 1" and it exists for an address it will be used over
            type "State Sales Tax" which is priority 2.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxTypeData.Id">
            <summary>
            Gets or sets the name of the tax class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxTypeData.Name">
            <summary>
            Gets or sets the name of the tax class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.TaxTypeData.Precedence">
            <summary>
            Gets or sets the precedence of the tax class.  This is the priority order in which it will be applied. 
            For example, if type "Postal Code Sales Tax is priority 1" and it exists for an address it will be used over
            type "State Sales Tax" which is priority 2.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.LinearUnit">
            <summary>
            Enumeration of units for measuring length.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.WeightUnit">
            <summary>
            Enumeration of units for measuring weight.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Dimensions">
            <summary>
            Class used to define dimension information.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.Dimensions.#ctor(Ektron.Cms.Commerce.LinearUnit,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="units">Linear Units that define the dimensions.</param>
            <param name="length">Length of the package in Units</param>
            <param name="width">Length of the package in Units</param>
            <param name="height">Length of the package in Units</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Dimensions.ConvertUnits(Ektron.Cms.Commerce.LinearUnit)">
            <summary>
            Converts the current Dimensions object to a new object in the supplied units.
            </summary>
            <param name="toUnit">LinearUnit to convert to</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Dimensions.ConvertDimensions(System.Single)">
            <summary>
            Converts each dimesnion in object based upon the multiplier.
            </summary>
            <param name="multiplier">decimal to multiple dimensions by</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Dimensions.CompareTo(Ektron.Cms.Commerce.Dimensions)">
            <summary>
            Compares DImensions based upon CubicUnits
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.Dimensions.Length">
            <summary>
            Gets or sets the Length of the package in Units.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Dimensions.Width">
            <summary>
            Gets or sets the Length of the package in Units
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Dimensions.Height">
            <summary>
            Gets or sets the Length of the package in Units
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Dimensions.Units">
            <summary>
            Gets or sets the Linear Units that define the dimensions.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Dimensions.CubicUnits">
            <summary>
            Gets the dimensions cubic units.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Weight">
            <summary>
            Class used to define mesurement information.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.Weight.#ctor(Ektron.Cms.Commerce.WeightUnit,System.Single)">
            <summary>
            
            </summary>
            <param name="units">Units in which the package is weighed.</param>
            <param name="totalWeight">Total weight of the package in Units.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Weight.ConvertUnits(Ektron.Cms.Commerce.WeightUnit)">
            <summary>
            Converts the current Weight object to a new object in the supplied units.
            </summary>
            <param name="toUnit">WeightUnit to convert to</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.Weight.Amount">
            <summary>
            Gets or sets the actual weight value in Units.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Weight.Units">
            <summary>
            Gets or sets the Units in which the package is weighed.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.WarehouseProperty">
            <summary>
            Enumeration of Warehouse properties used for sorting and filtering WarehouseData objects.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.WarehouseData.Id">
            <summary>
            Gets or sets Id of Address.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.WarehouseData.Name">
            <summary>
            Gets or sets the name of this Warehouse.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.WarehouseData.Address">
            <summary>
            Gets or sets the address of this Warehouse.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.WarehouseData.IsDefaultWarehouse">
            <summary>
            Gets or sets the IsDefaultWarehouse status property for the warehouse. 
            If true, this warehouse is the default warehouse for the system.
            </summary>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.ContentId">
            <summary>
            Gets or sets the Content ID of the content item for the AssetInfoData object.
            </summary>
            <value></value>
            <returns>Integer ID of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.AssetId">
            <summary>
            Gets or sets the Asset ID of the content item for the AssetInfoData object.
            </summary>
            <value></value>
            <returns>Asset ID of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.ExternalTypeId">
            <summary>
            Gets or sets the external content subtype (used for the DxH external content types.
            e.g. Sharepoint, Dynamics,
            </summary>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.FolderId">
            <summary>
            Gets or sets the Folder ID of the content item for the AssetInfoData object.
            </summary>
            <value></value>
            <returns>Folder ID of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.FileName">
            <summary>
            Gets or sets the filename of the asset.
            </summary>
            <value></value>
            <returns>Asset File Name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.LanguageId">
            <summary>
            Get or sets the language ID of the content item for the ContentData object.
            </summary>
            <value></value>
            <returns>Language ID as an integer. For example, 1033 (English).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.Title">
            <summary>
            Gets or sets the content item's title for the ContentData object.
            </summary>
            <value></value>
            <returns>Title of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.Teaser">
            <summary>
            Gets or sets a content's summary information for the ContentData object.
            </summary>
            <value></value>
            <returns>Summary information for the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.Comment">
            <summary>
            Gets or sets comment information associated with a content item for the ContentData object.
            </summary>
            <value></value>
            <returns>Comment information associated with a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.GoLive">
            <summary>
            Gets or sets the start date a content item goes live on the site. 
            </summary>
            <value></value>
            <returns>A string value that represents the date a content item goes live.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.EndDate">
            <summary>
            Gets or sets the end date of a content item. 
            </summary>
            <value></value>
            <returns>A string value that represents the end date of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.EndDateAction">
            <summary>
            Gets or sets the action to be taken on the end date of a content item.
            </summary>
            <value></value>
            <returns>A value that represents the action on the end date of a content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.MetaData">
            <summary>
            Gets or sets the Metadata of a content item as an array of ContentMetadata. This is for the 
            ContentData object.
            </summary>
            <value></value>
            <returns>Metadata as an array of AssetMetaData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.AssetUpdateData.TaxonomyTreeIds">
            <summary>
            Gets or sets the taxonomy IDs separated by commas.
            </summary>
            <value></value>
            <returns>Asset File Name.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.StyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.Id">
            <summary>
            Custom Property Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.Name">
            <summary>
            Custom Property Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.Type">
            <summary>
            Custom Property Type (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.Taglist">
            <summary>
            Custom Property Taglist (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.Value">
            <summary>
            Custom Property Value (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.StyleProperty.SampleValue">
            <summary>
            Custom Property Sample Value (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.CallToActionType">
            <summary>
            Enumeration of Action Types supported by CTA.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.CallToActionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.FolderId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Title">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Status">
            <summary>
            (string)
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>        
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Type">
            <summary>
            Possible values are defined in EkEnumeration.CMSContentTypes.  Do not use "AllTypes", "ArchivedAssets" or any of the other combined types as these aren't valid values.  
            If All Types are wanted, simply do not filter on this property.
            If All Archived types are wanted, filter on the IsArchived Property.
            If only Asset types are wanted, it is recommended to use the Ektron.Cms.Framework.Content.AssetManager.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.LanguageId">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.DateCreated">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.DateModified">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.LastEditorLastName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.LastEditorFirstName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.IsPublished">
            <summary>
            (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.GoLiveDate">
            <summary>
            Start (GoLive) Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.ExpireDate">
            <summary>
            ExpireDate (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.IsArchived">
            <summary>
            IsArchived flag (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.EndDateActionType">
            <summary>
            End date action type
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.LandingPageId">
            <summary>
            (long) LandingPageId.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Destination">
            <summary>
            (String) Destination.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.DisplayText">
            <summary>
            CTA Display Text.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.ImageId">
            <summary>
            (Long) DMS Image Id of a CTA.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.Notes">
            <summary>
            (string) CTA Notes. It is like a Description.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CallToActionProperty.IsSearchable">
            <summary>
            (bool) IscontentSearchable flag.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CmsLocalizedDataCollection`1">
            <summary>
            Represents a collection of Language specific CmsLocalizedData objects for a given message Id.
            This collection is only meant to contain the multiple language versions of a single CmsLocalizedDataObject 
            of a given Id and not multiple objects of various Ids.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CmsLocalizedDataCollection`1.FindItemForLanguage(System.Int32)">
            <summary>
            Gets the Language specific item based upon the supplied language.
            </summary>
            <param name="languageId">ID of language to find item for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.CmsLocalizedDataCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item
            </summary>
            <param name="index">index</param>
            <param name="item">the item</param>
        </member>
        <member name="M:Ektron.Cms.CmsLocalizedDataCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets an item
            </summary>
            <param name="index">index </param>
            <param name="item">the item</param>
        </member>
        <member name="P:Ektron.Cms.CmsLocalizedDataCollection`1.BaseList">
            <summary>
            Gets the base List collection.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CmsLocalizedDataCollection`1.DefaultItem">
            <summary>
            Gets the default Item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CmsLocalizedDataCollection`1.DefaultLanguageId">
            <summary>
            Gets or sets the Default Language Id for the CmsLocalizedDataCollection
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CmsEventArgs">
            <summary>
            Event argument class used for CMS events.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.ObjectId">
            <summary>
            Gets or sets the Id of the object that the event was raised for.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.RequestInformation">
            <summary>
            Gets or sets the current requestinformation being used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.Transaction">
            <summary>
            gets or sets the current transaction being used.  Will be null if not applicable.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CancellableEventArgs">
            <summary>
            Event argument class used for cancellable cms events.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CancellableEventArgs.IsCancelled">
            <summary>
            Gets or sets the is cancelled flag indicating whether or not the action raising the event should be cancelled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CancellableEventArgs.CancellationMessage">
            <summary>
            Gets or sets the message indicating the reason for the action cancellation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.Id">
            <summary>
            Collection ID (long integer) 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.Title">
            <summary>
            Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.Description">
            <summary>
            Description (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.Template">
            <summary>
            Template (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.FolderId">
            <summary>
            Folder ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.UserId">
            <summary>
            User ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.DateCreated">
            <summary>
            Date of Creation (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.LastEditDate">
            <summary>
            Last Edit Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.Status">
            <summary>
            Collection Status: A-Approved O-Checked Out I-Checked In S-Submitted for Approval M-Marked for Deletion P-Pending Go Live Date T-Awaiting Completion of Associated Tasks D-Pending Deletion 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.IsPublished">
            <summary>
            Is Published Flag (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentCollectionProperty.IsApprovalRequired">
            <summary>
            Approval Required Flag (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.FolderId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.FolderName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.Title">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.Status">
            <summary>
            (string)
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>        
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.Type">
            <summary>
            Possible values are defined in EkEnumeration.CMSContentTypes.  Do not use "AllTypes", "ArchivedAssets" or any of the other combined types as these aren't valid values.  
            If All Types are wanted, simply do not filter on this property.
            If All Archived types are wanted, filter on the IsArchived Property.
            If only Asset types are wanted, it is recommended to use the Ektron.Cms.Framework.Content.AssetManager.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.SubType">
            <summary>
            (EkEnumeration.CMSContentSubtype)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.LanguageId">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.DateCreated">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.DateModified">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.LastEditorLastName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.LastEditorFirstName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.XmlConfigurationId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.IsPublished">
            <summary>
            (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.GoLiveDate">
            <summary>
            Start (GoLive) Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.EndDate">
            <summary>
            End Date (DateTime)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ektron.Cms.Common.ContentProperty.ExpireDate" -->
        <member name="F:Ektron.Cms.Common.ContentProperty.Path">
            <summary>
            Folder path of where the content resides. E.G. /folder1 (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.ContentPath">
            <summary>
            Content path comprised of the folder path and content title. E.G. /folder1/content title (string)
            
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.IsArchived">
            <summary>
            IsArchived flag (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.EndDateActionType">
            <summary>
            End date action type
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.ExternalTypeId">
            <summary>
            External content type (long) used in the DxH
            e.g. Sharepoint, Dynamics
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.InheritedFromId">
            <summary>
            The id of the folder that settings are inherited from
             </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentProperty.IsSearchable">
            <summary>
            (bool) IscontentSearchable flag.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.ContentId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.RatingDate">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.VisitorId">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.RatingState">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.ContentLanguageId">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRatingProperty.ContentReviewState">
            <summary>
            (Ektron.Cms.Common.EkEnumeration.ContentReviewState)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CriteriaFilterOperator.IsNotNull">
            <summary>
            Value will not be passed as this will append is not null to the command.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.CriteriaFilterOperator.IsNull">
            <summary>
            Value will be evaluated and appropriate null command will be issued the SQL db.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.CriteriaFilter`1.#ctor(`0,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Creates  a new CriteriaFilter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="P:Ektron.Cms.Common.CriteriaFilter`1.Field">
            <summary>
            Gets or sets the field to filter on.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.CriteriaFilter`1.Operator">
            <summary>
            Gets or sets the operator to use for the filter.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.CriteriaFilter`1.Value">
            <summary>
            The value to filter on.  The value should be the same data type as the corresponding property in the associated data class.
            For example, if Filtering on ContentProperty.Id, the value should be a long because ContentData.Id is a long.
            If using the CriteriaFilterOperator.In operator, the Value you should be an IEnumerable list of values.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.CriteriaFilterGroup`1">
            <summary>
            Data class representing a group of Criteria Filters.  The groups translates into a group of filter statements wrapped in parenthesis.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Ektron.Cms.Common.CriteriaFilterGroup`1.AddFilter(`0,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a new CriteriaFilter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">
            The value to filter on.  The value should be the same data type as the corresponding property in the associated data class.
            For example, if Filtering on ContentProperty.Id, the value should be a long because ContentData.Id is a long.
            If using the CriteriaFilterOperator.In or NotIn operator, the Value you should be an IEnumerable list or List of long values.
            </param>
            <returns>newly added filter.</returns>
        </member>
        <member name="M:Ektron.Cms.Common.CriteriaFilterGroup`1.FindAllFieldFilters(`0)">
            <summary>
            Used to find filters within the criteria that use the supplied Field value.  Returns null if no filters are found.
            </summary>
            <param name="field">The field value to find filters for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.CriteriaFilterGroup`1.FindFieldFilter(`0)">
            <summary>
            Used to find a filter within the criteria that use the supplied Field value.  Returns the first filter found or null if no filters are found.
            </summary>
            <param name="field">The field value to find filters for.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Common.CriteriaFilterGroup`1.Filters">
            <summary>
            Gets list of CriteriaFilters in this group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.CriteriaFilterGroup`1.Condition">
            <summary>
            Gets or Sets the LogicalOperator for the FilterGroup.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.ContentResultType">
            <summary>
            Represents types of content in approval process.
            </summary>
            <remarks>
            Same as EkContent.ContentResultType which is not widely available because it's parkt EkContnet.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Common.WebEventCriteria">
            <summary>
            Criteria class for retrieving WebEvent data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.EventTaxonomyProperty">
            <summary>
            Criteria properties for event taxonomies
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.EventProperty">
            <summary>
            Event property used for criteria
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Id">
            <summary>
            Event ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.CalendarId">
            <summary>
            Calendar ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.LanguageId">
            <summary>
            Language ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Title">
            <summary>
            Event Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Status">
            <summary>
            Event Status (Same as ContentData.Status string) 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Location">
            <summary>
            Event Location (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Description">
            <summary>
            Description (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.StartUtc">
            <summary>
            Event Start UTC Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.EndUtc">
            <summary>
            Event End UTC Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.Duration">
            <summary>
            Event's Duration (TimeSpan)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.IsAllDay">
            <summary>
            Is All Day Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.IsCancelled">
            <summary>
            Is Cancelled Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.IsVariance">
            <summary>
            Is Variance Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.RecurrenceId">
            <summary>
            Recurrence ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.ParentEventId">
            <summary>
            Parent Event Id (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.RecurrenceType">
            <summary>
            Recurrence Type (as of Ektron.Cms.Common.RecurrenceType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.RecurrenceEndDate">
            <summary>
            Recurrence End Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.DateCreated">
            <summary>
            Date Created (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.DateModified">
            <summary>
            Last Date Modified (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.LastEditorLastName">
            <summary>
            Last Editor's Last Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.EventProperty.LastEditorFirstName">
            <summary>
            Last Editor's First Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.Id">
            <summary>
            User Group Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.Name">
            <summary>
            User Group Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.Domain">
            <summary>
            User Group Domain (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.GroupType">
            <summary>
            User Group Type (integer as of EkEnumeration.GroupType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.CommunityGroupId">
            <summary>
            Community Group Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserGroupProperty.IsMembershipGroup">
            <summary>
            Indicates if the Group is a Membership Group (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.Id">
            <summary>
            Custom Property Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.Name">
            <summary>
            Custom Property Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.ValueType">
            <summary>
            Custom Property Value Type (integer as of EkEnumeration.ObjectPropertyValueTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.DisplayValueType">
            <summary>
            Custom Property Display Value Type (integer as of EkEnumeration.ObjectPropertyDisplayTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.IsRequired">
            <summary>
            Custom Property Required (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.UserCustomProperty.LanguageId">
            <summary>
            Custom Property Content Language (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.Id">
            <summary>
            Custom Property Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.Name">
            <summary>
            Custom Property Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.Value">
            <summary>
            Custom Property Value 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.ValueType">
            <summary>
            Custom Property Value Type (integer as of EkEnumeration.CustomPropertyItemDataType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.DisplayValueType">
            <summary>
            Custom Property Display Value Type (integer as of EkEnumeration.CustomPropertyStyleType)
            </summary>        
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.IsEnabled">
            <summary>
            Custom Property Enabled (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.LanguageId">
            <summary>
            Custom Property Language (Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.TaxonomyLanguageId">
            <summary>
            Taxonomy Node Language (Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaxonomyCustomProperty.TaxonomyDisplayOrder">
            <summary>
            Taxonomy Display Order (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.Id">
            <summary>
            Folder's ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.ParentId">
            <summary>
            Folder's parent folder ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.FolderName">
            <summary>
            Folder's Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.FolderPath">
            <summary>
            Folder's Path (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.IsDomainFolder">
            <summary>
            Is Domain Folder Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.Description">
            <summary>
            Folder's Description (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.IsPrivate">
            <summary>
            Is Private Folder Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.FolderType">
            <summary>
            Folder Type (integer as in FolderData.FolderType 0=Content, 2=Domain, 5=Root, 6=Community 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.IsCommunityFolder">
            <summary>
            Is Community Folder Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FolderProperty.IsHidden">
            <summary>
            Is Hidden Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.WebCalendarProperty.Id">
            <summary>
            Web Calendar ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.WebCalendarProperty.ParentId">
            <summary>
            Web Calendar Parent Folder Id (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.WebCalendarProperty.FolderName">
            <summary>
            Web Calendar Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.WebCalendarProperty.Description">
            <summary>
            Web Calendar Description (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.WebCalendarProperty.FolderPath">
            <summary>
            Web Calendar Folder Path (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.Id">
            <summary>
            Task ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.Title">
            <summary>
            Task Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.Priority">
            <summary>
            Task Priority (integer as of EkEnumeration.TaskPriority)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.Description">
            <summary>
            Task Description (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.AssignedToUserId">
            <summary>
            User Id the task is assigned to (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.AssignedToGroupId">
            <summary>
            Group Id the task is assigned to (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.DueDate">
            <summary>
            Date the task is due (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskProperty.ContentId">
            <summary>
            ContentId associated with this task (long).
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.Id">
            <summary>
            Task Comment ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.TaskId">
            <summary>
            TaskID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.Comments">
            <summary>
            Task Comments (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.UserId">
            <summary>
            Task userid (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.CommentedDate">
            <summary>
            Task commented Date ( DateTime )
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCommentProperty.CommentUpdatedDate">
            <summary>
            Task Comment Updated Date ( DateTime )
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCategoryProperty.Id">
            <summary>
            Task Category ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCategoryProperty.Title">
            <summary>
            Task Category Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TaskCategoryProperty.Active">
            <summary>
            Indicates if the Task Category is Active; 0 = False, 1 = True (integer)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.FlagDefinitionProperty">
            <summary>
            Enumeration of FlagDefinition properties available for filtering FlagCriteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.Id">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.FlagDefLanguage">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.FlagDefName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.FlagDefDescription">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.IsCommunityFlag">
            <summary>
            (Boolean)
            </summary>                
        </member>
        <member name="F:Ektron.Cms.Common.FlagDefinitionProperty.FlagLastEditDate">
            <summary>
            (Date)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.ObjectFlagDataProperty">
            <summary>
            Enumeration of ObjectFlagData properties available for filtering FlagCriteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.Id">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.FlagDefinitionId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.ObjectId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.ObjectLanguageId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.ObjectType">
            <summary>
            (Int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.UserId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.VisitorId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.FlagOptionId">
            <summary>
            (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.Date">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ObjectFlagDataProperty.Comment">
            <summary>
            (String)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.LibraryProperty">
            <summary>
            Enumeration of LibraryData properties available for filtering LibraryCriteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.Id">
            <summary>
            Library ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.ContentType">
            <summary>
            Content Type for the LibraryData (int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.UserId">
            <summary>
            User's ID for the LibraryData (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.CreatedDate">
            <summary>
            Date created for the LibraryData (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.LastEditDate">
            <summary>
            Last edit date for the LibraryData (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.TypeId">
            <summary>
            The Type ID for the LibraryData (int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.ContentId">
            <summary>
            Content ID (Long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.ParentId">
            <summary>
            FolderId (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.LibraryProperty.LanguageId">
            <summary>
            Library LanguageId (Integer)
            </summary>
        </member>
        <member name="P:Ektron.Cms.MessageBoardData.IsModerated">
            <summary>
            Gets or sets the IsModerated flag.  This flag is used on ADD to detemrine if the messageboard post should follow moderation.  On retrieval,
            it will not be set because the messageboard post itself has no concept of moderation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.RecordsPerPage">
            <summary>
            Gets the records per page. 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.CurrentPage">
             <summary>
            Get or Set the Current page for which you want records
             </summary>
             <value></value>
             <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.TotalPages">
            <summary>
            Gets the total pages for this result set
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.TotalRecords">
            <summary>
            Gets the total number of records.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.StartRow">
            <summary>
            The Starting row number for the page.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>This is a calculated field.</remarks>
        </member>
        <member name="P:Ektron.Cms.PagingInfo.EndRow">
            <summary>
            The ending row number for the page.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>This is a calculated field.</remarks>
        </member>
        <member name="P:Ektron.Cms.Common.QuickLinkData.Link">
            <summary>
            Returns the link either the alias or the quicklink
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.ObjectId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.ObjectType">
            <summary>
            (Ektron.Cms.Commom.EkEnumeration.CMSObjectTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.RatingDate">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.VisitorId">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.RatingState">
            <summary>
            (Ektron.Cms.Common.EkEnumeration.RatingState)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.RatingProperty.LanguageId">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.RecurrenceData">
            <summary>
            Class represents a recurrence pattern.  Patterns are created using Factory Methods.
            </summary>
            <remarks>
            To avoid possible invalid data patterns, all fields are readonly and patterns must be created using factory.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.GetDayOfWeekList">
            <summary>
            Converts the EventRecurrence.RecurrenceDayOfWeek flag values to a list of DayOfWeek Enum Values.
            </summary>
            <returns>List of DayOfWeek values for the current Recurrence</returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateNonRecurrence">
            <summary>
            Creates an empty EventRecurrence with a recurrenceType of None.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateDailyRecurrence(System.Int32)">
            <summary>
            Create a recurrence for a daily event.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = daily, 2 = every other day, 3 = every third day, etc.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateDailyRecurrence(Ektron.Cms.Common.RecurrenceDaysOfWeek)">
            <summary>
            Create a recurrence for a daily event.
            </summary>
            <param name="days">identifies which days does this event occur.  ie. mon, mon\wed\fri, etc.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateWeeklyRecurrence(System.Int32,Ektron.Cms.Common.RecurrenceDaysOfWeek)">
            <summary>
            Create a recurrence for a weekly event.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = weekly, 2 = every other week, 3 = every third week, etc.</param>
            <param name="days">identifies which days does this event occur.  ie. mon, mon\wed\fri, etc.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateMonthlyByDayRecurrence(System.Int32,Ektron.Cms.Common.RecurrenceDayOfMonth,Ektron.Cms.Common.RecurrenceDaysOfWeek)">
            <summary>
            Create a monthly recurrence that occurs based upon the relative week.  For example, every month on the first Tuesday.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = monthly, 2 = every other month, 3 = every third month, etc.</param>
            <param name="dayOfMonth">Identifies which week of the month the event occurs.</param>
            <param name="day">identifies the day this event occurs on.  i.e. The third Tuesday.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateMonthlyByDayRecurrence(System.Int32,System.DateTime)">
            <summary>
            Create a monthly recurrence that occurs based upon the relative week.  For example, every month on the first Tuesday.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = monthly, 2 = every other month, 3 = every third month, etc.</param>
            <param name="date">A date time that represents the day of week occurance to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateMonthlyByDateRecurrence(System.Int32,System.Int32)">
            <summary>
            Create a monthly recurrence that occurs based upon a specific date of the month.  For example, every month on the 15th.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = monthly, 2 = every other month, 3 = every third month, etc.</param>
            <param name="date">identifies which day of the month the event occur.  ie. 1st, 3rd, 15th, etc. For last day of month, use -1.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateYearlyRecurrence(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a recurrence for a yearly event for a given monthly date.  For example, every year on April 15th.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = yearly, 2 = every other year, 3 = every third year, etc.</param>
            <param name="monthOfYear">The integer representing the month of the year this event occurs.</param>
            <param name="dayOfMonth">The specific day of the month this event occurs.  For example, the 15th.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.RecurrenceData.CreateYearlyRecurrence(System.Int32,System.Int32,Ektron.Cms.Common.RecurrenceDayOfMonth,Ektron.Cms.Common.RecurrenceDaysOfWeek)">
            <summary>
            Create a recurrence for a yearly event for a given monthly day.  For example, every year on the first tuesday of april.
            </summary>
            <param name="recurrenceMultiple">Identifies how often this event occurs.  for example, 1 = yearly, 2 = every other year, 3 = every third year, etc.</param>
            <param name="monthOfYear">The integer representing the month of the year this event occurs.</param>
            <param name="dayOfMonth">The specific day of the month this event occurs.  For example, the last weekday.</param>
            <param name="day">The day of the week this event occurs.  For example, the second tuesday.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.Id">
            <summary>
            Gets or sets the Id of this recurrence if it has been persisted.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.EndDateUtc">
            <summary>
            The date recurrence ends.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.StartDateUtc">
            <summary>
            The date the recurrence begins.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.Intervals">
            <summary>
            Identifies how many times this recurrence should occur.  This would supercede enddateUtc to determine oh many occurances occur.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.RecurrenceType">
            <summary>
            The type of recurrence.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.RecurrenceMultiple">
            <summary>
            Identifies how often this recurrence occurs.  for example, 1 = daily, 2 = every other day, 3 = every third day, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.DayOfMonth">
            <summary>
            The day of the month the patterns recurrs on.  This could be an absolute day like 1st, 2nd, 3rd or relative day represented by RecurrenceDayOfMonth.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.Month">
            <summary>
            The month of the year the recurrence ocurs.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RecurrenceData.Days">
            <summary>
            Identifies which days does this recurrence occurs.   For example, mon, tues\thur, mon\wed\fri, etc.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.RecurrenceType">
            <summary>
            Enumeration representing Recurrence Pattern Types.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.RecurrenceDaysOfWeek">
            <summary>
            Enumeration representing Days of the week.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.RecurrenceDayOfMonth">
            <summary>
            Enumeration representing recurrence days of the month.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.RegExSampleData.ExpressionId">
            <summary>
            Gets the expression Id 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.RegExSampleData.Expression">
            <summary>
            Gets or sets the sample expression.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.RegExSampleData.ExpressionMap">
            <summary>
            Gets or sets the expression map.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.RegExSampleData.TransformedUrl">
            <summary>
            Gets or sets the transformed URL.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.RegExSampleData.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.SerializableDictionary`2">
            <summary>
            SerializableDictionary by Paul Welter
            http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Ektron.Cms.Common.TemplateDataProperty">
            <summary>
            Enumeration of Template properties available for filtering TemplateCritera.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.Id">
            <summary>
            Template Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.TemplateName">
            <summary>
            Template Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.FileName">
            <summary>
            File Name (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.TemplateCriteria">
            <summary>
            Criteria object for retreiving Metadata from the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.TreeCriteria.Id">
            <summary>
            The starting node ID of the tree (or subtree) to retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.TreeCriteria.LanguageId">
            <summary>
            The language ID of the data to retrieve. The implementation defaults to
            using the current users language-ID if this property is not specified.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.TreeCriteria.TreePagingInfo">
            <summary>
            Tree paging info-object to restrict the depth and breadth to limit the resultant tree to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TreePagingInfo.Depth">
            <summary>
            Specifies how many levels of nested data to retrieve. Defaults to zero (limitless).
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.FieldMapData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="P:Ektron.Cms.Common.FieldMappingData.OriginalField">
            <summary>
            The original field to be mapped.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.FieldMappingData.MappedField">
            <summary>
            The field that the original is mapped to.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.ActionRequestType">
            <summary>
            Enumeration identifying the different types of invitations.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.All">
            <summary>
            Default value - represents all invitations.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.FriendInvitation">
            <summary>
            Represents a friend invitation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.JoinGroup">
            <summary>
            Represents a request to join a prviate group.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.GroupInvitation">
            <summary>
            Represents a Group invitation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.GetObjectType">
            <summary>
            Provides internal access to protected Object Type property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.SetSenderInfo(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            internal method for setting readonly props.
            </summary>
            <param name="userName">sender's user Name</param>
            <param name="email">sender's email address</param>
            <param name="firstName">sender's first name</param>
            <param name="lastName">sender's last name</param>
            <param name="displayName">sender's display name</param>
            <param name="avatar">sender's avatar.</param>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.Clone``1(``0)">
            <summary>
            Derived classes should call this method to clone all base properties.
            Returns clone in derived type.
            </summary>
            <typeparam name="T">The Derived Type to clone.</typeparam>
            <returns>Returns a clone of all base properties in the form of the derived invitation type.</returns>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.Clone">
            <summary>
            When Implemented by derived class, returns a clone of the current invitation.  Recipients are NOT copied over.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Id">
            <summary>
            Id of the invitation.  Only set after save.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.ObjectId">
            <summary>
            Id of the object associated with invitation.  Related to invitation Type.  For example, for InvitatonType.Friend, 
            ObjectId is the userId of the user sending the friend request.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.RequestType">
            <summary>
            When implemented, returns the type of ActionRequest.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderId">
            <summary>
            User Id of the invitation sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderUserName">
            <summary>
            User Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderFirstName">
            <summary>
            First Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderDisplayName">
            <summary>
            Display Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderLastName">
            <summary>
            Last Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderEmail">
            <summary>
            Email of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderAvatar">
            <summary>
            Avatar of the Sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.LanguageId">
            <summary>
            Language of invitation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Recipient">
            <summary>
            Recipient of the Request. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.RequestDate">
            <summary>
            Date the request was last sent. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Errors">
            <summary>
            Returns error messages if there is something wrong with this invitation.  This property is only valid after the Invitation has been Validated.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Id">
            <summary>
            long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Name">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Path">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.ParentId">
            <summary>
            long id 
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Level">
            <summary>
            int
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Location">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Enroll">
            <summary>
            boolean
            </summary>                
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.Image">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.ShortDescription">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.LongDescription">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.EnableDistribute">
            <summary>
            boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.EnableMembersManageFolders">
            <summary>
            boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.DateCreated">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.DateModified">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.EnableGroupEmail">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.CommunityGroupProperty.EnableDocumentsInNotifications">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Id">
            <summary>
            long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Name">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Path">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.ParentId">
            <summary>
            long id 
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Level">
            <summary>
            int
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Location">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Enroll">
            <summary>
            boolean
            </summary>                
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.Image">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.ShortDescription">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.LongDescription">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.EnableDistribute">
            <summary>
            boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.EnableMembersManageFolders">
            <summary>
            boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.DateCreated">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.DateModified">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.EnableGroupEmail">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UserToCommunityProperty.EnableDocumentsInNotifications">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.TotalMember">
            <summary>
            Gets the total numbe rof member sin the community group.  This property is readonly and will not be persisted on Add\Update.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.Tags">
            <summary>
            This property is readonly and any changes will not be saved.
            To add tags to a CommunityGroup, use the AddTagToCommunityGroup API.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.EnableDocumentsInNotifications">
            <summary>
            If true, all notification emails on asset types will have the asset added as an attachment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.EnableGroupEmail">
            <summary>
            If true, the community group will accept email using the email address below.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.EmailAddress">
            <summary>
            Email address assigned to Community Group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.EmailAccountName">
            <summary>
            Email Account name assigned to community group.  This is required for checking group email.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.EmailPassword">
            <summary>
            Password for email account assigned to community group.  This is required for checking group email.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupData.GroupId">
            <summary>
            This property is obsolete in 8.5.  Use Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupSortRequest.SortBy">
            <summary>
            Gets or sets the property to sort the CommunityGroupData results by.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>CommunityGroupSortBy.GroupName is the default value.</remarks>
        </member>
        <member name="P:Ektron.Cms.CommunityGroupSortRequest.SortOrder">
            <summary>
            Gets or sets the order in which the SortBy property should sort the CommunityGroupData results.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>SortOrder.Ascending is the default value.</remarks>
        </member>
        <member name="T:Ektron.Cms.Community.FavoriteTaxonomyData">
            <summary>
            Data class representing a user's Favorites Folder.  The folders themselves are stored as hidden taxonomies within the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Id">
            <summary>
            Gets or sets the ID of the favorite taxonomy. 
            </summary>
            <remarks>Overridden to clarify the description and taxonomy relationship.</remarks>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.ParentId">
            <summary>
            Gets or sets the ID of the favorite taxonomy's parent folder.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Name">
            <summary>
            Gets or sets the Favorites taxonomy Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Description">
            <summary>
            gets or sets the description of the favorite's Taxonomy.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Items">
            <summary>
            Gets or sets the Favorite Items in the taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.ChildTaxonomies">
            <summary>
            Gets or sets the Favorite Child taxonomies in the current taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendsData">
            <summary>
            Data class representing a Friend in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.FriendUserId">
            <summary>
            Gets or sets the UserId of the friend being added.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.UserId">
            <summary>
            Gets or sets the ID of the user who is adding the friend.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.TaxonomyId">
            <summary>
            Id of the Taxonomy to put the friend in for User ID.  If not set, it will go in the users root Friends taxonomy folder.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendsCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Friends from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendTaxonomyData">
            <summary>
            Data class representing a user's Friends Folder.  The folders themselves are stored as hidden taxonomies within the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Id">
            <summary>
            Gets or sets the ID of the Friends taxonomy. 
            </summary>
            <remarks>Overridden to clarify the description and taxonomy relationship.</remarks>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.ParentId">
            <summary>
            Gets or sets the ID of the Friends folder's parent taxonomy. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Name">
            <summary>
            Gets or sets the Friends taxonomy Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Description">
            <summary>
            gets or sets the description of the taxonomy's folder.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Items">
            <summary>
            Gets or sets the Friends in the taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.ChildTaxonomies">
            <summary>
            Gets or sets the Friends child taxonomy in the current taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRecipient.Clone">
            <summary>
            Returns a copy of the current InvitationRecipient.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.UserId">
            <summary>
            CMS User Id of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.UserName">
            <summary>
            CMS User name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.Email">
            <summary>
            Email address of the recipient
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.FirstName">
            <summary>
            First Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.LastName">
            <summary>
            Last Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.DisplayName">
            <summary>
            Display Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.Avatar">
            <summary>
            Avatar of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.IsUser">
            <summary>
            Returns true if the recipient is a validated user.  This call is only valid after the Invitation has been Validated; otherwise false is returned regardless.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.ActionRecipientCollection">
            <summary>
            Specialized  collection of ActionRecipient objects.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Community.ITagManager.GetTags(System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes)">
            <summary>
            Get Tags by Object Id.
            </summary>
            <param name="objectId">long</param>
            <param name="objectType">CMSObjectTypes</param>
            <returns>List of Tags data</returns>
        </member>
        <member name="T:Ektron.Cms.MicroMessageProperty">
            <summary>
            Enumeration of MicroMessageData properties that can be used for querying.
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.MessageId">
            <summary>
            long MessageId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.ParentMessageId">
            <summary>
            long ParentMessageId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DateCreated">
            <summary>
            System.DateTime DateCreated 
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DateModified">
            <summary>
            System.DateTime DateModified
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.UserId">
            <summary>
            long UserId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.MessageText">
            <summary>
            string MessageText
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.FirstName">
            <summary>
            string FirstName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.LastName">
            <summary>
            string LastName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.UserName">
            <summary>
            string UserName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DisplayName">
            <summary>
            string DisplayName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.Avatar">
            <summary>
            string  Avatar
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.EmailAddress">
            <summary>
            string EmailAddress
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.ReplyCount">
            <summary>
            int ReplyCount
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.SiteId">
            <summary>
            long SiteId
            </summary>
        </member>
        <member name="T:Ektron.Cms.MicroMessageData">
            <summary>
            Data class for dealing with Micro Messages for a user.  
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.Id">
            <summary>
            gets or sets the Id for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.SiteId">
            <summary>
            gets or sets the SiteId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.ParentMessageId">
            <summary>
            gets or sets the ParentMessageId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserId">
            <summary>
            gets or sets the UserId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DateCreated">
            <summary>
            gets or sets the DateCreated for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DateModified">
            <summary>
            gets or sets the DateModified for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.MessageText">
            <summary>
            gets or sets the MessageText for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserFirstName">
            <summary>
            gets or sets the UserFirstName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserLastname">
            <summary>
            gets or sets the UserLastName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserName">
            <summary>
            gets or sets the UserName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserAvatar">
            <summary>
            gets or sets the UserAvatar for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DisplayName">
            <summary>
            gets or sets the DisplayName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DisplayUserName">
            <summary>
            gets or sets the DisplayUserName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserEmailAddress">
            <summary>
            gets or sets the UserEmailAddress for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.ReplyCount">
            <summary>
            gets or sets the ReplyCount for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.AllowDelete">
            <summary>
            gets or sets the AllowDelete for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.HasReplies">
            <summary>
            gets if this micromessage has replies.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.TimeLapse">
            <summary>
            gets or sets the TimeLapse for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.IsReply">
            <summary>
            gets if this micromessage is a reply.
            </summary>
        </member>
        <member name="T:Ektron.Cms.MicroMessageCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving micromessages from the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.ObjectId">
             <summary>
            Gets or Sets the ID of the object for rating statistic data object.
             </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.ObjectType">
            <summary>
            Gets or Sets the type of the object for rating statistic data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.RatingCount">
            <summary>
            Gets or Sets the rating count for rating statistic data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.RatingSum">
            <summary>
            Gets or Sets the rating sum for rating statistic data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.RatingAverage">
            <summary>
            Gets or Sets the rating average for rating statistic data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingStatisticData.Ratings">
            <summary>
            Gets or Sets the list of rating item statistic object for rating statistic data object
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingItemStatisticData.Rating">
            <summary>
            Gets or Sets the Rating for rating item statistic data object
            </summary>
        </member>
        <member name="P:Ektron.Cms.RatingItemStatisticData.Count">
            <summary>
            Gets or Sets the count for rating statistic data object
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagAssignmentData">
            <summary>
            Data class for Tag object assignments.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TagAssignmentData.#ctor(Ektron.Cms.TagData,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes)">
            <summary>
            Creates an object representing a Tag assignment.
            </summary>
            <param name="tag">The tag being assigned</param>
            <param name="objectId">Identifier of the object to which the tag is assigned</param>
            <param name="objectType">Type of the object to which the tag is assigned</param>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.Tag">
            <summary>
            The tag being assigned
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.ObjectId">
            <summary>
            Identifier of the object to which the tag is assigned
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.ObjectType">
            <summary>
            Type of the object to which the tag is assigned
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloud">
            <summary>
            Data structure representing a tag cloud.  A tag cloud is a list of tags associated with a given object type.  
            Also includes the number of times each tag has been used for that object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloud.ObjectType">
            <summary>
            Type of object represented by the tag cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloud.Tags">
            <summary>
            Tags in the cloud.  These tags are associated to ObjectType.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloudItem">
            <summary>
            Represents a Tag in a cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudItem.Tag">
            <summary>
            The TagData object in the cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudItem.Count">
            <summary>
            The number of times the tag has been used for the ObjectType of the cloud.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloudRequestData">
            <summary>
            Data structure used for requesting TagClouds from the Tag Api.
            </summary>
            <remarks>
            Default values:
            LanguageId = 1033
            PageSize = 50
            ObjectType = EkEnumeration.CMSObjectTypes.User
            OrderBy = TagCloudOrderBy.Text
            OrderAscending = false
            ObjectType = EkEnumeration.CMSObjectTypes.User
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Community.TagCloudRequestData.SetDefaultValues">
            <summary>
            Sets the TagCloudRequestData object back to its default values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.LanguageId">
            <summary>
            Language of tags to retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.PageSize">
            <summary>
            The number of results to return with each request.
            Used in coordination with PageIndex to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.PageIndex">
            <summary>
            The page number to retrieve.
            Used in coordination with Pagesize to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.TagTypes">
            <summary>
            The Tag Type to retrieve
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderBy">
            <summary>
            The order in which results should be sorted.  Used in conjunction with OrderAscending
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderAscending">
            <summary>
            The order in which OrderBy should be sorted.  a true value means to order the results ascending; false means descending.
            For example, by default OrderBy = TaggedCount and OrderAscending = false.  This returns results order by taggedCount descending.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderByDirection">
            <summary>
            The order in which OrderBy should be sorted.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.ObjectType">
            <summary>
            The type of CMS Object Type to build the cloud for.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagTypes">
            <summary>
            Defines the tag type.
            NOTE: this is a binary OR'd field...each must be a power of 2!!!
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.All">
            <summary>
            Represents all Tags.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.UserDefault">
            <summary>
            Represents a default tag on User objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.GroupDefault">
            <summary>
            Represents a default tag on Group objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.LibraryDefault">
            <summary>
            Represents a default tag on Library objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.ContentDefault">
            <summary>
            Represents a default tag on Content objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagData">
            <summary>
            Data class for Tag objects.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
            <param name="languageId">Language of tag</param>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
            <param name="languageId">Language of tag</param>
            <param name="id">Id of the tag.  Should only be set for existing tags.  New tags will be given an id when they are saved.</param>
        </member>
        <member name="P:Ektron.Cms.TagData.Id">
            <summary>
            Id of Tag. Should only be set for existing tags. New tags will be given an id when they are saved.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.LanguageId">
            <summary>
            Language of tag
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.Text">
            <summary>
            The Tags actual text.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.Type">
            <summary>
            The type of tag.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.TotalUsedCount">
            <summary>
            returns the total number of times this tag has been used on an object.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagRequestData">
            <summary>
            Data structure used for requesting tags from the Tag Api.
            Default Ordering is TaggedCount, Descending (OrderAscending = false)
            </summary>
            <remarks>
            Default values:
            LanguageId = 1033
            PageSize = 0  (return all)
            PageIndex = 1
            ObjectType = EkEnumeration.CMSObjectTypes.User
            OrderBy = TagCloudOrderBy.TaggedCount
            OrderAscending = false
            </remarks>
        </member>
        <member name="M:Ektron.Cms.TagRequestData.SetDefaultValues">
            <summary>
            Sets the TagCloudRequestData object back to its default values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.LanguageId">
            <summary>
            Language of tags to retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.PageSize">
            <summary>
            The number of results to return with each request.
            Used in coordination with PageIndex to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.PageIndex">
            <summary>
            The page number to retrieve.
            Used in coordination with Pagesize to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.TagTypes">
            <summary>
            The Tag Type to retrieve
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderBy">
            <summary>
            The order in which results should be sorted.  Used in conjunction with OrderAscending
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderAscending">
            <summary>
            The order in which OrderBy should be sorted.  a true value means to order the results ascending; false means descending.
            For example, by default OrderBy = TaggedCount and OrderAscending = false.  This returns results order by taggedCount descending.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderByDirection">
            <summary>
            The order in which OrderBy should be sorted.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagOrderBy">
            <summary>
            Enum representing properties to order a tag cloud by.  The default ordering is by tag count.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.ContentWorkflow.Interfaces.IContentWorkflowConfigurationDAL">
            <summary>
            Used to get the raw workflow configuration data.
            </summary>
            <param name="connection">To enable flexibility the connection parameter can be either a file path or DB Connection/
            It will be up to the implementing class to decide on how to use it.
            </param>
            <returns>Returns the content workflow configuration as an XDocument.</returns>
        </member>
        <member name="T:Ektron.Cms.Content.AssetProperty">
            <summary>
            Enumeration of ContentAssetData properties that can be used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Id">
            <summary>
            Asset's ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.FolderId">
            <summary>
            Folder ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.FolderName">
            <summary>
            FolderName (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Title">
            <summary>
            Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Status">
            <summary>
            Status Flag of the Asset. (string)
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>       
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Type">
            <summary>
            Possible values are defined in EkEnumeration.CMSContentTypes.  Do not use "AllTypes", "ArchivedAssets" or any of the other combined types as these aren't valid values.  
            If All Types are wanted, simply do not filter on this property.
            If All archived types are wanted, filter on the IsArchived Property.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.SubType">
            <summary>
            Subtype (Integer as of EkEnumeration.CMSContentSubtype)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LanguageId">
            <summary>
            Language ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.DateCreated">
            <summary>
            Date Created (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.DateModified">
            <summary>
            Date Modified (Date Time)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.UserId">
            <summary>
            User ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LastEditorLastName">
            <summary>
            Last Editor Last Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LastEditorFirstName">
            <summary>
            Last Editor First Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.XmlConfigurationId">
            <summary>
            XML Config Id (Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.IsPublished">
            <summary>
            Is Published (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.AssetId">
            <summary>
            Asset ID (long Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.IsArchived">
            <summary>
            IsArchived flag (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.AssetCriteria">
            <summary>
            Criteria class used for retrieving ContentAssetData objects from CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentCriteria`1.ReturnMetadata">
            <summary>
            Gets or sets the ReturnMetadata flag. If true, content metadata will be included in result sets.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentCriteria`1.FolderRecursive">
            <summary>
            Set whether the search is recursive through the child folders or not
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentAssetData">
            <summary>
            Data class for Asset Content.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.ContentAssetData.Validate">
            <summary>
            Validates this instance
            </summary>
            <returns>a ValidationResults object</returns>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.IsXmlInherited">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.XmlInheritedFrom">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.LegacyData">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.XmlConfiguration">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.StyleSheet">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.MediaText">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.HyperLink">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.Html">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.TemplateConfiguration">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.FlagDefId">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.AssetId">
            <summary>
            Gets or sets the Asset ID of the content item for the AssetInfoData object.
            </summary>
            <value></value>
            <returns>Asset ID of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.File">
            <summary>
            Gets or Sets an array of data that represents the asset's contents
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.FacebookCategoryProperty">
            <summary>
            Enumeration of FacebookCategoryData properties suitable for filtering and sorting.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.FacebookCategoryData">
            <summary>
            Data class representing Facebook Page Categories registed in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.Name">
            <summary>
            Gets or sets the Display Name of the Facebook Category
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.Code">
            <summary>
            Gets or sets the Facebook defined Code of the Category. For example "local_business".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.SiteId">
            <summary>
            Gets or sets the Siteid associated with this facebook category.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.IsEnabled">
            <summary>
            Gets or sets the IsEnabled flag for this category.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.SegmentProperty">
            <summary>
            Enumeration SegmentData properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.SegmentData">
            <summary>
            Data class representing a Segment definition used by Content Targeting.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.Targeting.SegmentData.ToJson">
            <summary>
            Returns a JSON representation of the segment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.Name">
            <summary>
            Gets or sets the name of the Segment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.Rules">
            <summary>
            Gets the Rules associated with this Segment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.IsGlobal">
            <summary>
            Gets or sets the IsGlobal flag of the segments. IsGlobal indicates if this is a globally defined and shared segment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyCriteria">
            <summary>
            Criteria class for retrieving WebEvent data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyFilter">
            <summary>
            Specialized criteria filter object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyFilterGroup">
            <summary>
            Specialized criteria filter group object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SmartformTitle">
            <summary>
            SmartForm Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SmartformDescription">
            <summary>
            Detailed description of configuration given by creator or last editor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt1">
            <summary>
            Display XSLT 1
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt2">
            <summary>
            Display XSLT 2
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt3">
            <summary>
            Display XSLT 3
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt4">
            <summary>
            Display XSLT 4
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt5">
            <summary>
            Display XSLT 5
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.XmlSchema">
            <summary>
            Specify the .xsd file used to validate the XML content that the Smart Form will be assigned to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.DefaultXslt">
            <summary>
            Display XSLT that being assigned from collection of display xslts
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.PhysicalPath">
            <summary>
            SmartForm PhysicalPath
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.LogicalPath">
            <summary>
            SmartForm LogicalPath
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.FieldList">
             <summary>
            String that contains all the SmartForm Fields
             </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.PackageXslt">
            <summary>
            Display XSLT Package (created using the Data Designer)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Type">
            <summary>
            Set the Smartform Type(Content = 0,Product = 1,WebEvent = 2)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SecondType">
            <summary>
            Set the catalog entry type(Product = 0, ComplexProduct = 1, Kit = 2, Bundle = 3, SubscriptionProduct = 4)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.XPath">
            <summary>
            XPath of the Indexed field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.DataType">
            <summary>
            DataType of the Indexed field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.XmlSearchDisplayType">
            <summary>
            DisplayType of the Indexed field for Xml Search control
            0 - For Non-selection fields
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.Labels">
            <summary>
            Labels of the index field in all languages
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldLabel.Label">
            <summary>
            Label of the index field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldLabel.Language">
            <summary>
            Language of the label of the index field
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Context.ICmsContextService.TokenizePath(System.String)">
            <summary>
            Replaces explicit paths with the appropriate tokens if any.
            </summary>
            <param name="path">The path.</param>
            <returns>The path with tokens.</returns>
        </member>
        <member name="T:Ektron.Cms.CoreService.CloudConfiguration">
            <summary>
            This class contains all the configuration information needed for eSync cloud actions.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.CloudConfiguration.RawArguments">
            <summary>
            Gets or sets the raw arguments used during eSync to the cloud.
            </summary>
            <value>
            The raw arguments used during eSync to the cloud.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseSyncConfiguration">
            <summary>
            This class contains all the configuration information needed for database eSync actions.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.DatabaseSyncConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.DatabaseSyncConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncConfiguration.SelectedSyncScopes">
            <summary>
            Gets or sets the selected database sync scopes.
            </summary>
            <value>
            The selected database sync scopes.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncConfiguration.SyncDatabase">
            <summary>
            Gets or sets a value indicating whether to sync the database or not.
            </summary>
            <value>
              <c>true</c> if the database will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseSyncStatistics">
            <summary>
            This class contains properties related to database sync.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncStatistics.LocalStartingRowVersion">
            <summary>
            Gets or sets the local starting row version. This is a number corresponding to the
            database timestamp value starting from (and including) which rows are synced from the
            local database.
            </summary>
            <value>
            The local starting row version.
            </value>
            <remarks>
            This value will only be available after (if) database sync completes.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncStatistics.LocalEndingRowVersion">
            <summary>
            Gets or sets the local ending row version.This is a number corresponding to the
            database timestamp value ending at (and including) which rows are synced from the
            local database.
            </summary>
            <value>
            The local ending row version.
            </value>
            <remarks>
            This value is not populated currently, and if present will only be available after (if) database sync completes.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncStatistics.RemoteStartingRowVersion">
            <summary>
            Gets or sets the remote starting row version. This is a number corresponding to the
            database timestamp value starting from (and including) which rows are synced from the
            remote database.
            </summary>
            <value>
            The remote starting row version.
            </value>
            <remarks>
            This value will only be available after (if) database sync completes.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncStatistics.RemoteEndingRowVersion">
            <summary>
            Gets or sets the remote ending row version. This is a number corresponding to the
            database timestamp value ending at (and including) which rows are synced from the
            remote database.
            </summary>
            <value>
            The remote ending row version.
            </value>
            <remarks>
            This value is not populated currently, and if present will only be available after (if) database sync completes.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.DataRowExtensions">
            <summary>
            This class provides extensions to the DataRow object making it safer to read and write values from it.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.DataRowExtensions.SetValue``1(System.Data.DataRow,System.String,``0)">
            <summary>
            Sets the strongly typed value to a column in the DataRow safely.
            </summary>
            <typeparam name="T">The type of the column value</typeparam>
            <param name="row">The row.</param>
            <param name="columnName">Name of the column.</param>
            <param name="columnValue">The column value.</param>
            <returns>True if the operation succeeds, False otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.DataRowExtensions.SetValue(System.Data.DataRow,System.String,System.Object)">
            <summary>
            Sets the value to a column in the DataRow safely.
            </summary>
            <param name="row">The DataRow.</param>
            <param name="columnName">Name of the column.</param>
            <param name="columnValue">The column value.</param>
            <returns>True if the operation succeeds, False otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.DataRowExtensions.GetValue``1(System.Data.DataRow,System.String)">
            <summary>
            Gets the strongly typed value from a column in the DataRow safely.
            </summary>
            <typeparam name="T">The type of the column value</typeparam>
            <param name="row">The row.</param>
            <param name="columnName">Name of the column.</param>
            <returns>The DataRow column value.</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.DataRowExtensions.GetValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the value from a column in the DataRow safely.
            </summary>
            <param name="row">The row.</param>
            <param name="columnName">Name of the column.</param>
            <returns>The DataRow column value.</returns>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncDataRowContext">
            <summary>
            This class provides information about the DataRow being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.SyncDataRowContext"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.ResetRow">
            <summary>
            Resets properties pertaining to a single row.
            </summary>
            <remarks>
            The TotalRows property is not reset.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.IsFirstTable">
            <summary>
            Determines whether this row is within the first DataTable.
            </summary>
            <returns>
              <c>true</c> if the row is within the first DataTable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.IsFirstRow">
            <summary>
            Determines whether this is the first row in the DataTable.
            </summary>
            <value>
            True if this is the first row within the DataTable; False otherwise.
            </value>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataRowContext.IsLastRow">
            <summary>
            Determines whether this is the last row in the DataTable.
            </summary>
            <value>
            True if this is the last row within the DataTable; False otherwise.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataRowContext.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
            <value>
            The index of the row.
            </value>
            <remarks>
            The row index starts from one. It is not zero based.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataRowContext.TableIndex">
            <summary>
            Gets the index of the DataTable.
            </summary>
            <value>
            The index of the DataTable.
            </value>
            <remarks>
            The table index starts from one. It is not zero based.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataRowContext.TotalRows">
            <summary>
            Gets the total rows in the table within which the DataRow is present.
            </summary>
            <value>
            The total rows.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataRowContext.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataRowContext.ActualRowState">
            <summary>
            Gets the actual state of the row in the eSync Dataset which is not exposed via the API.
            </summary>
            <value>
            The actual state of the row.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncDataTransformContext">
            <summary>
            This class provides a context to the DataRow which is sent along with the event. This is intended to allow the developer to
            discover additional details about the DataRow. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataTransformContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.SyncDataTransformContext"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncDataTransformContext.IsLastTable(System.Int32)">
            <summary>
            Determines whether the specified table index indicates that it is the last DataTable to be processed.
            </summary>
            <param name="tableIndex">Index of the table.</param>
            <returns>
              <c>true</c> if the specified table index indicates that it is the last DataTable to be processed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataTransformContext.Profile">
            <summary>
            Gets or sets the profile. Note that not all properties within this property are set.
            </summary>
            <value>
            The profile.
            </value>
            <remarks>
            Changes to this property are not propagated back to eSync.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataTransformContext.RowContext">
            <summary>
            Gets or sets the row context.
            </summary>
            <value>
            The row context.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataTransformContext.TotalDataTables">
            <summary>
            Gets the total data tables which are within the Dataset.
            </summary>
            <value>
            The total data tables.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncDataTransformContext.TableRowCounts">
            <summary>
            Gets or sets the number of rows in every table which is being synced.
            </summary>
            <value>
            The table row counts.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncedTableRowCount">
            <summary>
            This class contains the name and number of rows within the table being synced currently.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncedTableRowCount.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncedTableRowCount.TotalRows">
            <summary>
            Gets or sets the total rows.
            </summary>
            <value>
            The total rows.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.ESyncType">
            <summary>
            The different sync types supported by the Ektron CMS
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.UnSpecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.Profile">
            <summary>
            A profile sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.Package">
            <summary>
            A package sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.Content">
            <summary>
            A content sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.Folder">
            <summary>
            A folder sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.TemplateFile">
            <summary>
            A template file sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.ESyncType.MultiSite">
            <summary>
            A multisite sync
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncDirection">
            <summary>
            The different sync directions supported by the Ektron CMS
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncDirection.UnSpecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncDirection.Upload">
            <summary>
            An upload sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncDirection.Download">
            <summary>
            A download sync
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncDirection.BiDirectional">
            <summary>
            A bi-directional sync
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncConflictResolutionPolicy">
            <summary>
            The different conflict resolution policies supported by the Ektron CMS
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncConflictResolutionPolicy.UnSpecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncConflictResolutionPolicy.ApplicationDefined">
            <summary>
            The policy is defined by the application
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncConflictResolutionPolicy.DestinationWins">
            <summary>
            The destination wins if there is a conflict
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncConflictResolutionPolicy.SourceWins">
            <summary>
            The source wins if there is a conflict
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.EktronDatabaseSyncScope">
            <summary>
            The different database sync scopes supported by the Ektron CMS. These are a
            grouping of database tables within the database. 
            </summary>
            <remarks>
            Not all of these scopes are available or can be used directly from the sync profile page.
            </remarks>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.UnSpecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Ektron">
            <summary>
            The ektron scope. This is usually referred to as the "Core" scope or "Full Sync" scope.
            </summary>
            <remarks>
            This scope does not really sync all the database tables, only most of them.
            </remarks>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Workflow">
            <summary>
            The workflow scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Custom">
            <summary>
            The custom scope containing tables created by end users.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.History">
            <summary>
            The history scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.AspNet">
            <summary>
            The AspNet scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Search">
            <summary>
            The search scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Notification">
            <summary>
            The notification scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Content">
            <summary>
            The content scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.PackageDefinition">
            <summary>
            The package definition scope. This was introduced in 8.6.1.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Folder">
            <summary>
            The folder scope. 
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.UserGeneratedContent">
            <summary>
            The user generated content scope. This was introduced in 8.6.1.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Users">
            <summary>
            The users scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Groups">
            <summary>
            The groups scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Taxonomy">
            <summary>
            The taxonomy scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Menu">
            <summary>
            The menu scope.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.EktronDatabaseSyncScope.Collections">
            <summary>
            The collections scope.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileWatchedLoadBalancedFolder">
            <summary>
            The different folders within a site which can be load balanced
            without running eSync.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileWatchedLoadBalancedFolder.UploadedImages">
            <summary>
            The uploaded images folder.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileWatchedLoadBalancedFolder.UploadedFiles">
            <summary>
            The uploaded files folder.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileWatchedLoadBalancedFolder.Assets">
            <summary>
            The assets folder.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileWatchedLoadBalancedFolder.PrivateAssets">
            <summary>
            The private assets folder.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncedFolder">
            <summary>
            The different folders within a site which can be synced with the Ektron CMS
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.UnSpecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.Assets">
            <summary>
            The assets folder within the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.PrivateAssets">
            <summary>
            The private assets folder within the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.UploadedFiles">
            <summary>
            The uploaded files folder within the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.UploadedImages">
            <summary>
            The uploaded images folder within the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.Templates">
            <summary>
            The site root folder
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.Workarea">
            <summary>
            The work area folder within the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolder.AssetLibrary">
            <summary>
            The asset library folder which is implicitly linked to the assets or the private assets folder.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncState">
            <summary>
            The various sync states.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.Ready">
            <summary>
            The SyncOrchestrator is ready. The SyncOrchestrator returns to this state when a synchronization session finishes, unless the
             session was canceled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.Uploading">
            <summary>
            An upload synchronization is currently being performed.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.Downloading">
            <summary>
            A download synchronization is currently being performed.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.UploadingAndDownloading">
            <summary>
            A two-way synchronization is currently being performed. This value does not imply the order in which the synchronization direction is performed.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.Cancelling">
            <summary>
            A pending synchronization operation is in the process of being cancelled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncState.Cancelled">
            <summary>
            The synchronization session was cancelled.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileSyncProvider">
            <summary>
            The type of the file sync provider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ektron.Cms.CoreService.FileSyncProvider.Local" -->
        <member name="F:Ektron.Cms.CoreService.FileSyncProvider.Remote">
            <summary>
            The remote provider
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileSyncProvider.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileSyncSessionProgress">
            <summary>
            Represents the stages of a synchronization session.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileSyncSessionProgress.ChangeDetection">
            <summary>
            Changes are being detected on the source replica.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileSyncSessionProgress.ChangeEnumeration">
            <summary>
            Changes from the source replica are being enumerated.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.FileSyncSessionProgress.ChangeApplication">
            <summary>
            Changes are being applied to the destination replica.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileSyncConfiguration">
            <summary>
            This class contains all the configuration information needed for file eSync actions.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.FileSyncConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.FileSyncConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.ScopeFilter">
            <summary>
            Gets or sets the scope filter for file sync.
            </summary>
            <value>
            The scope filter for file sync.
            </value>
            <remarks>
            If a FolderSyncProfile object is also present within the event, that object
            will contain more details about the file sync than this object which only
            contains high level details.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncTemplateBinFolder">
            <summary>
            Gets or sets a value indicating whether to sync the template bin folder.
            </summary>
            <value>
            <c>true</c> if the template bin folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncWorkArea">
            <summary>
            Gets or sets a value indicating whether to sync the work area.
            </summary>
            <value>
              <c>true</c> if the work area folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncUploadedFiles">
            <summary>
            Gets or sets a value indicating whether to sync the uploaded files folder.
            </summary>
            <value>
              <c>true</c> if the uploaded files folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncUploadedImages">
            <summary>
            Gets or sets a value indicating whether to sync the uploaded images folder.
            </summary>
            <value>
              <c>true</c> if the uploaded images folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncAssets">
            <summary>
            Gets or sets a value indicating whether to sync the assets folder.
            </summary>
            <value>
              <c>true</c> if the assets folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncPrivateAssets">
            <summary>
            Gets or sets a value indicating whether to sync the private assets folder.
            </summary>
            <value>
              <c>true</c> if the private assets folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncTemplates">
            <summary>
            Gets or sets a value indicating whether to sync the site's root folder (templates).
            </summary>
            <value>
              <c>true</c> if the site's root folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncConfiguration.SyncAssetLibrary">
            <summary>
            Gets or sets a value indicating whether to sync the site's asset library folder (not present within site's root folder).
            </summary>
            <value>
              <c>true</c> if the site's asset library folder will be synced; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.FolderSyncProfile">
            <summary>
            This class provides information about a folder sync operation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.FolderSyncProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.FolderSyncProfile"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderSyncProfile.LocalFolderPath">
            <summary>
            Gets or sets the local folder path.
            </summary>
            <value>
            The local folder path.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderSyncProfile.RemoteFolderPath">
            <summary>
            Gets or sets the remote folder path.
            </summary>
            <value>
            The remote folder path.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderSyncProfile.BaseSiteFolder">
            <summary>
            Gets or sets the base site folder within which the actual synced folder is present.
            </summary>
            <value>
            The base site folder within which the actual synced folder is present.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderSyncProfile.ScopeFilter">
            <summary>
            Gets or sets the scope filter for file sync.
            </summary>
            <value>
            The scope filter for file sync.
            </value>
            <remarks>
            This property may contain more details about the specific folder sync 
            than what is present in the SyncProfile object. This is because, more details
            are added before running the actual folder sync operation.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileSyncScopeFilter">
            <summary>
            The file sync scope filter class. Not all filters actually affect file sync.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.FileSyncScopeFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.FileSyncScopeFilter"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncScopeFilter.FileAttributeExcludeMask">
            <summary>
            Gets or sets the file attribute exclusion mask. Files with these attributes will not be synced.
            This attribute is unused within File Sync today, it has been kept here for future use.
            </summary>
            <value>
            The file attribute exclusion mask.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            However, this attribute is unused within File Sync today, it has been kept here for future use.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncScopeFilter.ExcludedFileNames">
            <summary>
            Gets or sets the excluded file names.
            </summary>
            <value>
            The excluded file names.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncScopeFilter.IncludedFileNames">
            <summary>
            Gets or sets the included file names.
            </summary>
            <value>
            The included file names.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncScopeFilter.ExcludedSubFolders">
            <summary>
            Gets or sets the excluded sub folders.
            </summary>
            <value>
            The excluded sub folders.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncScopeFilter.IncludedSubFolders">
            <summary>
            Gets or sets the included sub folders. This does not affect file sync because the MS Sync Framework does not support it.
            </summary>
            <value>
            The included sub folders.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.SyncCommandEventArgs">
            <summary>
            Provides data for any commands we want to send to eSync
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.SyncCommandEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncedFolderSource">
            <summary>
            This enumeration shows the values for the source for a load balancer synced folder.
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolderSource.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolderSource.SendingServer">
            <summary>
            The folder is from the sending server
            </summary>
        </member>
        <member name="F:Ektron.Cms.CoreService.SyncedFolderSource.ReceivingServer">
            <summary>
            The folder is from the receiving server
            </summary>
        </member>
        <member name="T:Ektron.Cms.CoreService.LoadBalancerSyncedFolder">
            <summary>
            This class represents a folder being synced by the load balancer, because
            of an eSync request.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerSyncedFolder.FolderSource">
            <summary>
            Gets the folder source.
            </summary>
            <value>
            The folder source.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerSyncedFolder.FullName">
            <summary>
            Gets the full path of the folder.
            </summary>
            <value>
            The full path of the folder.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.LoadBalancerESyncProfile">
            <summary>
            This class contains properties which provide information about the load balancer session
            when it is initiated by eSync. In other cases, the properties will not
            be populated.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalancerESyncProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.LoadBalancerESyncProfile"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerESyncProfile.SendingServerName">
            <summary>
            Gets the name of the sending server.
            </summary>
            <value>
            The name of the sending server.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerESyncProfile.ReceivingServerNames">
            <summary>
            Gets the names of the receiving servers.
            </summary>
            <value>
            The names of the receiving servers.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerESyncProfile.SyncedFolders">
            <summary>
            Gets the synced folders.
            </summary>
            <value>
            The synced folders.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerESyncProfile.SendingSitePhysicalPath">
            <summary>
            Gets the physical path of the sending site.
            </summary>
            <value>
            The physical path of the sending site.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerESyncProfile.ReceivingSitePhysicalPath">
            <summary>
            Gets the physical path of the receiving site.
            </summary>
            <value>
            The physical path of the receiving site.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile">
            <summary>
            This class contains properties which provide information about the load balancer session
            when it is initiated by the file watcher component. In other cases, the properties will not
            be populated.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile.SendingServerName">
            <summary>
            Gets the name of the sending server.
            </summary>
            <value>
            The name of the sending server.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile.ReceivingServerNames">
            <summary>
            Gets the names of the receiving servers.
            </summary>
            <value>
            The names of the receiving servers.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile.SyncedFolders">
            <summary>
            Gets the synced folders.
            </summary>
            <value>
            The synced folders.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancerFileWatcherProfile.SyncedFiles">
            <summary>
            Gets the synced files.
            </summary>
            <value>
            The synced files.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.LoadBalancedFile">
            <summary>
            This class represents the information about a file which is within the load balancer queue. These files
            are detected using file system watchers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.FullFileName">
            <summary>
            Gets the full path of the file.
            </summary>
            <value>
            The full path of the file.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.WatchedFolderFullName">
            <summary>
            Gets the folder on which the file watcher (which received the file
            modification event) is listening. This is also the folder which will be synced
            because a file within it was modified.
            </summary>
            <value>
            The full folder path.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.WatchedFolderType">
            <summary>
            Gets the type of the folder within which the modified file was found.
            </summary>
            <value>
            The type of the folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.ChangeType">
            <summary>
            Gets the type of the change which occurred to the file.
            </summary>
            <value>
            The type of the change.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalancedFile.EventReceivedTime">
            <summary>
            Gets the time (in UTC) at which the EWS received the event notification from
            the file system watcher.
            </summary>
            <value>
            The time (in UTC) at which the EWS received the event notification from
            the file system watcher.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.LoadBalanceProfile">
            <summary>
            This class provides information about the currently running load balancer sesssion.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalanceProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.LoadBalanceProfile"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalanceProfile.GetSendingServerName">
            <summary>
            Gets the name of the sending server.
            </summary>
            <returns>The name of the sending server.</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalanceProfile.GetReceivingServerNames">
            <summary>
            Gets the names of the receiving servers.
            </summary>
            <returns>The names of the receiving servers.</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalanceProfile.InitiatedByFileWatcher">
            <summary>
            Indicates whether this load balancing session is initiated by the file watcher.
            </summary>
            <returns>True if the run was initiated by the file watcher, False otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.CoreService.LoadBalanceProfile.InitiatedByESync">
            <summary>
            Indicates whether this load balancing session is initiated by eSync.
            </summary>
            <returns>True if the run was initiated by the eSync, False otherwise.</returns>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalanceProfile.ESyncProfile">
            <summary>
            Gets the eSync profile for the load balancer. This is populated when eSync triggers
            load balancing. This only happens for Templates and Workarea sync since v8.6.1.
            </summary>
            <value>
            The eSync profile.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.LoadBalanceProfile.FileWatcherProfile">
            <summary>
            Gets the file watcher profile for the load balancer. This is populated when the file watchers
            trigger load balancing.
            </summary>
            <value>
            The file watcher profile.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.MultiSiteIdentifier">
            <summary>
            This class contains all the properties which uniquely identify the multisite being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.MultiSiteIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.MultiSiteIdentifier"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.MultiSiteIdentifier.MultiSiteId">
            <summary>
            Gets or sets the multi site id.
            </summary>
            <value>
            The multi site id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.MultiSiteIdentifier.MultiSiteFolderPath">
            <summary>
            Gets or sets the multi site folder path.
            </summary>
            <value>
            The multi site folder path.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.MultiSiteIdentifier.CommonFolderIds">
            <summary>
            Gets or sets the common folder ids.
            </summary>
            <value>
            The common folder ids.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.MultiSiteIdentifier.CommonFolderPaths">
            <summary>
            Gets or sets the common folder paths.
            </summary>
            <value>
            The common folder paths.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.AssetIdentifier">
            <summary>
            This class contains all the properties which uniquely identify the asset being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.AssetIdentifier.AssetId">
            <summary>
            Gets or sets the asset id.
            </summary>
            <value>
            The asset id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.AssetIdentifier.AssetVersion">
            <summary>
            Gets or sets the asset version.
            </summary>
            <value>
            The asset version.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileIdentifier">
            <summary>
            This class contains all the properties which uniquely identify the file being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileIdentifier.FileFolderType">
            <summary>
            Gets or sets the type of the file folder. 
            </summary>
            <value>
            The type of the file folder.
            </value>
            <remarks>
            Currently supports only library files (Uploaded files or images).
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileIdentifier.FileRelativeUrl">
            <summary>
            Gets or sets the file relative URL.
            </summary>
            <value>
            The file's relative URL.
            </value>
            <remarks>
            Currently supports only library files (Uploaded files or images).
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.PackagedCollection">
            <summary>
            This class contains all the properties which uniquely identify the collection being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedCollection.CollectionId">
            <summary>
            Gets or sets the collection ID.
            </summary>
            <value>
            The collection ID.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedCollection.CollectionLanguage">
            <summary>
            Gets or sets the collection language.
            </summary>
            <value>
            The collection language.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.TemplateFileIdentifiers">
            <summary>
            This class contains all the properties which uniquely identify the template files being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.TemplateFileIdentifiers.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.TemplateFileIdentifiers"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.TemplateFileIdentifiers.LocalFilePaths">
            <summary>
            Gets or sets the local file paths.
            </summary>
            <value>
            The local file paths.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.TemplateFileIdentifiers.LocalFolderPaths">
            <summary>
            Gets or sets the local folder paths.
            </summary>
            <value>
            The local folder paths.
            </value>
            <remarks>
            Syncing selected folders is not supported in this version of the EWS.
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.FolderIdentifier">
            <summary>
            This class contains all the properties which uniquely identify the folder being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.FolderIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.FolderIdentifier"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderIdentifier.ParentFolderIds">
            <summary>
            Gets or sets the parent folder ids. 
            </summary>
            <value>
            The parent folder ids.
            </value>
            <remarks>
            This is needed to validate whether the parent of the parent folder exists on the remote server. If not, the entity will not be synced.
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderIdentifier.FolderId">
            <summary>
            Gets or sets the folder id. 
            </summary>
            <value>
            The folder id.
            </value>
            <remarks>
            For a content item, this is the folder id of the immediate parent folder.
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FolderIdentifier.FolderPath">
            <summary>
            Gets or sets the relative folder path. 
            </summary>
            <value>
            The relative folder path.
            </value>
            <remarks>
            If it is the root folder, the value will be similar to "\0".
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.ContentIdentifier">
            <summary>
            This class contains all the properties which uniquely identify the content being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.ContentIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.ContentIdentifier"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
            <value>
            The content id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.ContentLanguage">
            <summary>
            Gets or sets the content language.
            </summary>
            <value>
            The content language.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.IsAsset">
            <summary>
            Gets or sets a value indicating whether this content is an asset.
            </summary>
            <value>
              <c>true</c> if this content is an asset; otherwise, <c>false</c>.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.FileAspect">
            <summary>
            Gets or sets the file details of a content item, if it is a file.
            </summary>
            <value>
            The file details of a content item, if it is actually a file.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.FolderAspect">
            <summary>
            Gets or sets the folder details of a content item, if it is a folder.
            </summary>
            <value>
            The folder details of a content item, if it is a folder.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.ContentIdentifier.AssetAspect">
            <summary>
            Gets or sets the asset details of a content item, if it is an asset.
            </summary>
            <value>
            The asset details of a content item, if it is a folder.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.PackagedMenu">
            <summary>
            This class contains all the properties which uniquely identify the Menu item being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedMenu.MenuId">
            <summary>
            Gets or sets the menu id.
            </summary>
            <value>
            The menu id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedMenu.MenuLanguage">
            <summary>
            Gets or sets the menu language. 
            </summary>
            <value>
            The menu language.
            </value>
            <remarks>
            This is not used currently.
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.PackageDefinitionList">
            <summary>
            This class contains all the properties which uniquely identify the package definition being synced.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.PackageDefinitionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.PackageDefinitionList"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackageDefinitionList.PackageIds">
            <summary>
            Gets or sets the package ids.
            </summary>
            <value>
            The package ids.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.PackagedTaxonomy">
            <summary>
            This class contains all the properties which uniquely identify the Taxonomy item being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedTaxonomy.TaxonomyId">
            <summary>
            Gets or sets the taxonomy id.
            </summary>
            <value>
            The taxonomy id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.PackagedTaxonomy.TaxonomyLanguage">
            <summary>
            Gets or sets the taxonomy language.
            </summary>
            <value>
            The taxonomy language.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncPackage">
            <summary>
            This class represents the eSync package.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncPackage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.SyncPackage"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackageId">
            <summary>
            Gets or sets the package id.
            </summary>
            <value>
            The package id.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedContents">
            <summary>
            Gets or sets the packaged contents.
            </summary>
            <value>
            The packaged contents.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedFolders">
            <summary>
            Gets or sets the packaged folders.
            </summary>
            <value>
            The packaged folders.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedTemplateFiles">
            <summary>
            Gets or sets the packaged template files.
            </summary>
            <value>
            The packaged template files.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedTaxonomies">
            <summary>
            Gets or sets the packaged taxonomies.
            </summary>
            <value>
            The packaged taxonomies.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedMenus">
            <summary>
            Gets or sets the packaged menus.
            </summary>
            <value>
            The packaged menus.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackagedCollections">
            <summary>
            Gets or sets the packaged collections.
            </summary>
            <value>
            The packaged collections.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncPackage.PackageDefinitions">
            <summary>
            Gets or sets the package definitions.
            </summary>
            <value>
            The package definitions.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.PeerServerDetails">
            <summary>
            This class contains properties identifying the peer server from where this request was sent to the current server.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.PeerServerDetails.ServerName">
            <summary>
            Gets the name of the server.
            </summary>
            <value>
            The name of the server.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseBatchAppliedState">
            <summary>
            This class contains properties which indicate the state of the sync when the batch is applied.
            Database Sync may not always run in batch mode, it is configured.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchAppliedState.CurrentBatchNumber">
            <summary>
            Gets the number of the batch that was most recently applied by the provider.
            </summary>
            <value>
            The number of the batch that was most recently applied by the provider.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchAppliedState.TotalBatchesToApply">
            <summary>
            Gets the total number of change batches to apply during this synchronization session.
            </summary>
            <value>
            The total number of change batches to apply during this synchronization session.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseBatchSpooledState">
            <summary>
            This class contains properties which indicate the state of the sync when the batch is spooled.
            Database Sync may not always run in batch mode, it is configured.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchSpooledState.BatchFileName">
            <summary>
            Gets the name of the file to which spooled changes are written.
            </summary>
            <value>
            The name of the file to which spooled changes are written.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchSpooledState.CurrentBatchNumber">
            <summary>
            Gets the number of the batch that was most recently written to the spooling file.
            </summary>
            <value>
            The number of the batch that was most recently written to the spooling file.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchSpooledState.DataCacheSize">
            <summary>
            Gets the size of the current batch.
            </summary>
            <value>
            The size of the current batch.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseBatchSpooledState.TotalBatchesSpooled">
            <summary>
            Gets the total number of change batches that were spooled to disk when the BatchSpooled event was raised.
            </summary>
            <value>
            The total number of change batches that were spooled to disk when the BatchSpooled event was raised.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseChangesState">
            <summary>
            This class contains properties which indicate the state of the database when the changes have been selected OR
            applied.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.DatabaseChangesState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.DatabaseChangesState"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TableProgress">
            <summary>
            Gets a collection of DbSyncTableProgress objects.
            </summary>
            <value>
            A collection of DbSyncTableProgress objects.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.IsDataBatched">
            <summary>
            Gets whether data is sent in multiple batches or in a single DataSet object.
            </summary>
            <value>
            <c>true</c> if data is sent in multiple batches; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.IsLastBatch">
            <summary>
            Gets whether the current batch is the last batch of changes.
            </summary>
            <value>
            <c>true</c> if the current batch is the last batch of changes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalChanges">
            <summary>
            Gets the total number of changes that are to be applied during the synchronization session.
            </summary>
            <value>
            The number of changes that are to be applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalChangesApplied">
            <summary>
            Gets the total number of changes that have been applied during the synchronization session.
            </summary>
            <value>
            The number of changes that have been applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalChangesFailed">
            <summary>
            Gets the total number of changes that have failed to be applied during the synchronization session.
            </summary>
            <value>
            The number of changes that have failed to be applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalChangesPending">
            <summary>
            Gets the total number of changes that are pending for the synchronization session.
            </summary>
            <value>
            The number of changes that are pending.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalDeletes">
            <summary>
            Gets the total number of deletes that are to be applied during the synchronization session.
            </summary>
            <value>
            The number of deletes that are to be applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalInserts">
            <summary>
            Gets the total number of inserts that are to be applied during the synchronization session.
            </summary>
            <value>
            The number of inserts that are to be applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseChangesState.TotalUpdates">
            <summary>
            Gets the total number of updates that are to be applied during the synchronization session.
            </summary>
            <value>
            The number of updates that are to be applied.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseSyncProgress">
            <summary>
            This class contains properties which give information about the progress of the database sync. Note than some eSyncs can run
            multiple database syncs within itself (ex: Package Sync, UGC Sync, etc).
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.DatabaseSyncProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.DatabaseSyncProgress"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.TotalWork">
            <summary>
            Gets the total work to be done.
            </summary>
            <value>
            The total work to be done.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.CompletedWork">
            <summary>
            Gets the completed work so far.
            </summary>
            <value>
            The completed work so far.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.Log">
            <summary>
            Gets the log information.
            </summary>
            <value>
            The log information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.CurrentState">
            <summary>
            Gets the current state of database sync.
            </summary>
            <value>
            The current state of database sync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.PreviousState">
            <summary>
            Gets the previous state of database sync.
            </summary>
            <value>
            The previous state of database sync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.DatabaseChangesSelectedState">
            <summary>
            Gets the state of the database sync if the changes have been selected at present.
            </summary>
            <value>
            The state of the database sync if the changes have been selected at present.
            </value>
            <remarks>
            This property will not contain values before or after this state is reached.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.DatabaseChangesAppliedState">
            <summary>
            Gets the state of the database sync if the changes have been applied at present.
            </summary>
            <value>
            The state of the database sync if the changes have been applied at present.
            </value>
            <remarks>
            This property will not contain values before or after this state is reached.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.BatchAppliedState">
            <summary>
            Gets the state of the database sync when the batch is applied.
            </summary>
            <value>
            The state of the database sync when the batch is applied.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncProgress.BatchSpooledState">
            <summary>
            Gets the state of the database sync when the batch is spooled.
            </summary>
            <value>
            The state of the database sync when the batch is spooled.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.DatabaseSyncTableProgress">
            <summary>
            Represents a set of synchronization progress statistics for a table involved in database sync.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.BatchedDeletesRetried">
            <summary>
            Gets the number of delete operations that were retried during a synchronization session in which changes were batched.
            </summary>
            <value>
            The number of delete operations that were retried during a synchronization session in which changes were batched.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.ChangesApplied">
            <summary>
            Gets the number of changes applied to a table during the synchronization session.
            </summary>
            <value>
            The number of changes applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.ChangesFailed">
            <summary>
            Gets the number of changes that failed to be applied to a table during the synchronization session.
            </summary>
            <value>
            The number of changes that failed to be applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.ChangesPending">
            <summary>
            Gets the number of pending changes to be applied to a table during the synchronization session.
            </summary>
            <value>
            The number of pending changes to be applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.Deletes">
            <summary>
            Gets the number of deletes that are applied to a table during the synchronization session.
            </summary>
            <value>
            The number of deletes that are applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.Inserts">
            <summary>
            Gets the number of inserts that are applied to a table during the synchronization session.
            </summary>
            <value>
            The number of inserts that are applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.TotalRows">
            <summary>
            Gets the total rows in the System.Data.DataTable object that contains the changes to be synchronized.
            </summary>
            <value>
            The total rows in the System.Data.DataTable object that contains the changes to be synchronized.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.RowIndex">
            <summary>
            Gets the index of the System.Data.DataRow object that is currently being processed in the System.Data.DataTable object that contains the changes to be synchronized.
            </summary>
            <value>
            The index of the System.Data.DataRow object that is currently being processed.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.TableName">
            <summary>
            Gets the name of the table that is being synchronized.
            </summary>
            <value>
            The name of the table that is being synchronized.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.TotalChanges">
            <summary>
            Gets the total number of changes that are applied to a table during the synchronization session.
            </summary>
            <value>
            The total number of changes that are applied to a table during the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.DatabaseSyncTableProgress.Updates">
            <summary>
            Gets the number of updates that are applied to a table during the synchronization session.
            </summary>
            <value>
            The number of updates that are applied to a table during the synchronization session.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.FileSyncProgress">
            <summary>
            This class contains properties which give information about the progress of file sync. Note than some eSyncs can run
            multiple file syncs within itself (ex: Package Sync, UGC Sync, etc). Load balancing also runs file syncs.
            </summary>
            <remarks>
            Not all properties are populated all the time.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.CompletedWork">
            <summary>
            Gets the amount of work that is currently completed in the session.
            </summary>
            <value>
            The amount of work that is currently completed in the session.
            </value>
            <remarks>
            There is no real correlation between CompletedWork and TotalWork. It can happen that at the end
            of the session, CompletedWork is '1000' and TotalWork is '27166'.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.ReportingProvider">
            <summary>
            Gets the reporting provider.
            </summary>
            <value>
            The reporting provider.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.Stage">
            <summary>
            Gets the current stage of the synchronization session.
            </summary>
            <value>
            The current stage of the synchronization session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.TotalWork">
            <summary>
            Gets the total work for the session.
            </summary>
            <value>
            The total work for the session.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.CurrentState">
            <summary>
            Gets the current state of file sync.
            </summary>
            <value>
            The current state of file sync.
            </value>
            <remarks>
            Other properties except PreviousState will be NULL when this is populated.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.FileSyncProgress.PreviousState">
            <summary>
            Gets the previous state of file sync.
            </summary>
            <value>
            The previous state of file sync.
            </value>
            <remarks>
            Other properties except CurrentState will be NULL when this is populated.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.RequestDetails">
            <summary>
            This class contains all request information for an eSync.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.RequestDetails.IsLoadBalanceRequest">
            <summary>
            Gets a value indicating whether this eSync is a load balance request.
            </summary>
            <value>
            <c>true</c> if this eSync is a load balance request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.RequestDetails.IsScheduledSyncRequest">
            <summary>
            Gets a value indicating whether this eSync is a scheduled eSync request.
            </summary>
            <value>
            <c>true</c> if this eSync is a scheduled eSync request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.RequestDetails.IsInitialSyncRequest">
            <summary>
            Gets a value indicating whether this eSync is an initial eSync request.
            </summary>
            <value>
            <c>true</c> if this eSync is an initial eSync request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.RequestDetails.IsSyncPreviewRequest">
            <summary>
            Gets a value indicating whether this eSync is an eSync preview request.
            </summary>
            <value>
            <c>true</c> if this eSync is an eSync preview request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.SiteConfiguration">
            <summary>
            This class contains all information specific to the site which is being synced.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.DatabaseConnString">
            <summary>
            Gets the database connection string.
            </summary>
            <value>
            The database connection string.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.SitePath">
            <summary>
            Gets the site's physical path.
            </summary>
            <value>
            The site's physical path.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.WorkAreaPath">
            <summary>
            Gets the physical path of the site's work area folder.
            </summary>
            <value>
            The physical path of the site's work area folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.AssetLibraryPath">
            <summary>
            Gets the physical path of the site's asset library folder.
            </summary>
            <value>
            The asset library physical path.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.AssetsPath">
            <summary>
            Gets the physical path of the site's assets folder.
            </summary>
            <value>
            The physical path of the site's assets folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.PrivateAssetsPath">
            <summary>
            Gets the physical path of the site's private assets folder.
            </summary>
            <value>
            The physical path of the site's private assets folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.UploadedFilesPath">
            <summary>
            Gets the physical path of the site's uploaded files folder.
            </summary>
            <value>
            The physical path of the site's uploaded files folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.UploadedImagesPath">
            <summary>
            Gets the physical path of the site's uploaded images folder.
            </summary>
            <value>
            The physical path of the site's uploaded images folder.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.PublishCatalog">
            <summary>
            Gets the publish catalog.
            </summary>
            <value>
            The publish catalog.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.PrivateCatalog">
            <summary>
            Gets the private catalog.
            </summary>
            <value>
            The private catalog.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.IsLoadBalanced">
            <summary>
            Gets a value indicating whether this site is load balanced.
            </summary>
            <value>
            <c>true</c> if this site is load balanced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.ServerName">
            <summary>
            Gets the name of the site's server.
            </summary>
            <value>
            The name of the site's server.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.IsESyncLoadBalancingEnabled">
            <summary>
            Gets a value indicating whether eSync will load balance this site's templates folder and/ or 
            workarea folder even if load balancing is disabled at the site level.
            </summary>
            <value>
            Gets a value indicating whether eSync will load balance this site's templates folder and/ or 
            workarea folder even if load balancing is disabled at the site level.
            </value>
            <remarks>
            This is usually set to true when the site does not use Ektron Load Balancing and uses a SAN to store
            files at a central location.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.WebSiteRootUrl">
            <summary>
            Gets the site's root folder URL.
            </summary>
            <value>
            The site's root folder URL.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.IsInitialSync">
            <summary>
            Gets a value indicating whether this eSync is an initial eSync.
            </summary>
            <value>
            <c>true</c> if this eSync is an initial eSync; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SiteConfiguration.DatabaseVersion">
            <summary>
            Gets the database version.
            </summary>
            <value>
            The database version.
            </value>
            <remarks>
            This value will only be populated after (if) database sync completes.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncConfiguration">
            <summary>
            This class contains all the configuration information needed for generic eSync actions.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncConfiguration.Direction">
            <summary>
            Gets or sets the sync direction.
            </summary>
            <value>
            The sync direction.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncConfiguration.ConflictResolutionPolicy">
            <summary>
            Gets or sets the sync conflict resolution policy.
            </summary>
            <value>
            The sync conflict resolution policy.
            </value>
            <remarks>
            A change to this property is propagated back to eSync if state propagation is enabled.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncProfile">
            <summary>
            The basic SyncProfile which is shared by all types of eSync.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.SyncProfile"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.PropagateStateChanges">
            <summary>
            Gets or sets a value indicating whether to propagate state changes in this object to the
            internal eSync objects. This property has no effect in the ESyncDataTransformStrategy.
            </summary>
            <value>
            A value indicating whether to propagate state changes in this object to the
            internal eSync objects.
            </value>
            <remarks>
            Not all state changes to this instance are propagated back to eSync even if this flag is set to true.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.Ids">
            <summary>
            Gets the identifiers for the SyncProfile.
            </summary>
            <value>
            The identifiers.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.RequestInfo">
            <summary>
            Gets the request information.
            </summary>
            <value>
            The request information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.LocalSiteConfig">
            <summary>
            Gets the local site configuration information.
            </summary>
            <value>
            The local site configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.RemoteSiteConfig">
            <summary>
            Gets the remote site configuration information.
            </summary>
            <value>
            The remote site configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.SyncConfig">
            <summary>
            Gets the sync configuration information.
            </summary>
            <value>
            The sync configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.FileSyncConfig">
            <summary>
            Gets the file sync configuration information.
            </summary>
            <value>
            The file sync configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.DatabaseSyncConfig">
            <summary>
            Gets the database sync configuration information.
            </summary>
            <value>
            The database sync configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.CloudConfig">
            <summary>
            Gets the cloud configuration information.
            </summary>
            <value>
            The cloud configuration information.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncProfile.DatabaseStatistics">
            <summary>
            Gets the database sync statistics.
            </summary>
            <value>
            The database sync statistics.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.Identifiers">
            <summary>
            This class contains various identifiers related to the eSync profile.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.Identifiers.ProfileId">
            <summary>
            Gets the local profile id.
            </summary>
            <value>
            The local profile id.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.Identifiers.RemoteProfileId">
            <summary>
            Gets the remote profile id.
            </summary>
            <value>
            The remote profile id.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.Identifiers.SyncId">
            <summary>
            Gets the sync id.
            </summary>
            <value>
            The sync id.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.Identifiers.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.Identifiers.ParentMultiSiteFolderId">
            <summary>
            Gets the parent multisite folder id.
            </summary>
            <value>
            The parent multisite folder id.
            </value>
        </member>
        <member name="T:Ektron.Cms.CoreService.SyncSpecificDetails">
            <summary>
            This class contains all the properties which are unique to the eSync from where the strategy event was raised.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CoreService.SyncSpecificDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.CoreService.SyncSpecificDetails"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.PropagateStateChanges">
            <summary>
            Gets or sets a value indicating whether to propagate state changes in this object to the
            internal eSync objects.
            </summary>
            <value>
            A value indicating whether to propagate state changes in this object to the
            internal eSync objects.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncType">
            <summary>
            Gets or sets the type of the eSync.
            </summary>
            <value>
            The type of the eSync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncedPackage">
            <summary>
            Gets or sets the synced package details if this is a Package eSync.
            </summary>
            <value>
            The synced package details if this is a Package eSync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncedContents">
            <summary>
            Gets or sets the synced content details if this is a Content eSync.
            </summary>
            <value>
            The synced content details if this is a Content eSync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncedFolders">
            <summary>
            Gets or sets the synced folder details if this is a Folder eSync.
            </summary>
            <value>
            The synced folder details if this is a Folder eSync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncedTemplateFiles">
            <summary>
            Gets or sets the synced template file details if this is a Template eSync.
            </summary>
            <value>
            The synced template file details if this is a Template eSync.
            </value>
        </member>
        <member name="P:Ektron.Cms.CoreService.SyncSpecificDetails.SyncedMultiSite">
            <summary>
            Gets or sets the synced multisite details if this is a MultiSite eSync.
            </summary>
            <value>
            The synced multisite details if this is a MultiSite eSync.
            </value>
        </member>
        <member name="T:Ektron.Cms.CollectionCriteria">
            <summary>
            Collection Criteria
            </summary>
        </member>
        <member name="M:Ektron.Cms.CollectionCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.CollectionCriteria.#ctor(Ektron.Cms.Common.ContentCollectionProperty,Ektron.Cms.Common.EkEnumeration.OrderByDirection)">
            <summary>
            Constructor
            </summary>
            <param name="orderByField">order by field</param>
            <param name="orderByDirection">order by direction</param>
        </member>
        <member name="T:Ektron.Cms.ContentRatingLabels">
            <summary>
            Provides a convenient data class for getting and setting Content Rating Labels.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.FeedbackHeader">
            <summary>
            The label corresponding to how the user would rate the content block. Defaults to "How would you rate the usefulness of this content?".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.UserCommentsHeader">
            <summary>
            The label corresponding to why the user rated content the way they did. Defaults to "Tell us why you rated the content this way".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.ValidationMessage">
            <summary>
            The label displayed to a user when they try to submit a content rating without selecting a value of 1-9. Defaults to "Please select a rating before submitting your feedback.".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.ThankYouMessage">
            <summary>
            The label displayed to a user thanking them for their content rating. Defaults to "Thank you for your feedback.". 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.GoodLabel">
            <summary>
            The label corresponding to a "Good" content rating. This defaults to "Outstanding".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.BadLabel">
            <summary>
            The label corresponding to a "Bad" content rating. This defaults to "Poor".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.AlreadyRatedMessage">
            <summary>
            The message displayed to a user when they rate content, but have already rated it. Defaults to "You have already rated this content."
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.CookiesRequiredMessage">
            <summary>
            The message displayed to a user when they rate content, but they have cookies disabled. Defaults to "We're sorry, but you must enable cookies in your browser to rate this content."
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.CharsRemainingLabel">
            <summary>
            The label indicating to the user how many more characters they may enter into the 'comments' section of the rating form. Defaults to "Characters Remaining: ".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.RatingLevelLabel">
            <summary>
            The label used to indicate the meaning of the rating displayed to the user, e.g. 7.8/9. Defaults to "Rating Level: ".
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.ContentRatingLabels.TotalRatingsLabel">
            <summary>
            The label used to indicate the meaning of the total ratings displayed to the user, e.g. "Total Ratings: 986". Defaults to "Total Ratings: "
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Content.LibraryCriteria">
            <summary>
            Criteria object for retreiving Library items from the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.Id">
            <summary> 
            Gets or sets the library's ID.
            </summary> 
            <value></value> 
            <returns>The library's ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.TypeId">
            <summary> 
            Gets or sets the Type ID.
            </summary> 
            <value></value> 
            <returns>The type ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.LanguageId">
            <summary> 
            Gets or sets the language ID.
            </summary> 
            <value></value> 
            <returns>The language ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.Title">
            <summary> 
            Gets or sets the title.
            </summary> 
            <value></value> 
            <returns>The title</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.FileName">
            <summary> 
            Gets or sets a value based on LibraryType. If LibraryType = Images or Files then the property is a file name.
            If LibraryType = Hyperlink or QuickLink then the property is a Url link
            </summary> 
            <value></value> 
            <returns>The file name or Url link.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.StagingFileName">
            <summary> 
            Gets or sets the staging file name.
            </summary> 
            <value></value> 
            <returns>The staging file name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.File">
            <summary>
            Sets the Library File
            </summary>
        </member>
        <member name="P:Ektron.Cms.LibraryData.FolderName">
            <summary> 
            Gets or sets the folder's name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The folder's name.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.LibraryData.EditorFirstName">
            <summary> 
            Gets or sets the Editor's first name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Editor's first name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.EditorLastName">
            <summary> 
            Gets or sets the Editor's last name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Editor's last name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.UserId">
            <summary> 
            Gets or sets the user's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The library user's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.LastEditDate">
            <summary> 
            Gets or sets the last edit date for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The last edit date.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DisplayLastEditDate">
            <summary> 
            Gets or sets the last edit date to show for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The last edit date to show.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DateCreated">
            <summary> 
            Gets or sets the date created for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The date created.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DisplayDateCreated">
            <summary> 
            Gets or sets the date created to show for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The date created to show.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentId">
            <summary> 
            Gets or sets the content's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ParentId">
            <summary> 
            Gets or sets the parent's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The parent's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Relative">
            <summary> 
            Gets or sets the Relative for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Relative.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentType">
            <summary> 
            Gets or sets the content type for the LibraryData object.  Possible values are defined in Ektron.Cms.Common.EkEnumeration.CMSContentType enumeration.
            </summary> 
            <value></value> 
            <returns>The content type.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentSubType">
            <summary> 
            Gets or sets the content sub type for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content sub type.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.IsPrivate">
            <summary> 
            This property should be considered read-only. The value will be set to match the items parent folder privacy setting.
            </summary> 
            <value></value> 
            <returns>Returns true if the library is private. Otherwise, returns false.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Teaser">
            <summary> 
            Gets or sets the teaser for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The teaser.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.MetaData">
            <summary> 
            Gets or sets the content metadata list for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content metadata list.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Taxonomies">
            <summary> 
            Gets or sets the taxonomy data for this LibraryData Object
            </summary> 
            <value></value> 
            <returns>The taxonomydata list.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.OriginalLibraryId">
            <summary>
            The Id of the original library item. For example, when dealing with a thumbnail image, this is the master image it was generated from.
            </summary>
            <value></value> 
            <returns>The Id of the original library item.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Html">
            <summary>
            gets or sets the Html for this library item.  Many library items will not have corresponding html.
            </summary>
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Categories">
            <summary> 
            Gets or sets the categories for a discussion board using the DiscussionCategory data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Forums">
            <summary> 
            Gets or sets Forum information for the Discussion Board using the DiscussionForum data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.IPBanned">
            <summary> 
            Gets or sets whether an IP is restricted from posting on the Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Title">
            <summary> 
            Gets or sets the Title of the Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.ModerateComments">
            <summary> 
            Gets or sets whether a Discussion Board's comments are moderated. 
            * <b>True</b> = Moderation is on 
            * <b>False</b> = Moderation is off 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.RequireAuthentication">
            <summary> 
            Gets or sets whether a site visitor must sign in before he can post to the Discussion Board. 
            * <b>True</b> = site visitor must sign in before he can post to a Discussion Board. 
            * <b>False</b> = site visitors can post to a Discussion Board without signing in. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.TermsAndConditions">
            <summary> 
            Gets or sets the Terms and Conditions for a Discussion Board. By entering text in this property 
            and saving, you activate the Terms and Conditions feature. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.AcceptedHTML">
            <summary> 
            Gets or sets the a comma-delimited list of HTML tags allowed in the editor. When blank, 
            all tags are available. Site visitors posting to a Forum can apply these HTML tags to 
            content when 
            * their Forum editor is JavaScript Editor, as set in the user profile 
            * the Forum server control that displays the editor has its JavascriptEditorHTMLMode property set to True 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.AcceptedExtensions">
            <summary> 
            Gets or sets a comma delimited list of file extensions that can be uploaded. You can enter the 
            extension with or without the period (.). Use a comma to separate each extension. The default 
            list is: bmp,conf,doc,gif,jpe,jpeg,jpeg,png 
            The list appears at the bottom of the editor screen to notify the person entering a post 
            which file types he can attach. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.MaxFileSize">
            <summary> 
            Gets or sets the maximum size of the file, in bytes, that a user can upload. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.LockBoard">
            <summary> 
            Gets or sets whether to prevent all posting to this Discussion Board. You can do this 
            temporarily or permanently. If a Board is locked, only Administrator user group members can 
            create, edit or delete posts. Those users can post from the Web site or the Workarea. 
            You can alternatively lock any Forum underneath this Board via the LockForum property in the 
            DiscussionForum data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Path">
            <summary>
            Gets or sets the path to the discussion board inside the workarea folder structure.
            </summary>
        </member>
        <member name="P:Ektron.Cms.DiscussionCategory.CategoryID">
            <summary>
            Gets or sets a Taxonomy category ID for a Discussion Board.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionCategory.BoardID">
            <summary>
            Gets or sets a Discussion Board's ID.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionCategory.Name">
            <summary>
            Gets or sets the name of the Discussion Board.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionCategory.SortOrder">
            <summary>
            Gets the sort order of the Discussion Board.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ForumName">
            <summary> 
            Gets or sets the name for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ForumTitle">
            <summary> 
            Gets or sets the title for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ModerateComments">
            <summary> 
            Gets or sets whether the comments for the Forum are moderated. Note: Setting this property to 
            True only affects the specified Forum, not the entire Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LockForum">
            <summary> 
            Gets or sets whether to prevent all posting to this Forum. You can do this 
            temporarily or permanently. If a Forum is locked, only Administrator user group members can 
            create, edit or delete posts. 
            You can alternatively lock the entire Discussion Board containing this Forum via the LockBoard 
            property in the DiscussionBoard data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.CategoryID">
            <summary> 
            Gets or sets the ID of the taxonomy category associated with the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.CategoryName">
            <summary> 
            The name of the taxonomy category associated with the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.SortOrder">
            <summary> 
            Gets the sort order for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastPosted">
            <summary> 
            Gets or sets the time and date of the most recently added post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastTopicID">
            <summary> 
            Gets or sets the ID of the most recently added topic. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastMessageID">
            <summary> 
            
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastUserID">
            <summary> 
            Gets or sets the ID of the user who added the latest post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastUsername">
            <summary> 
            Gets or sets the username of user who added the latest post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.NumberofPosts">
            <summary> 
            Gets or sets the number of posts for the forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.NumberofTopics">
            <summary> 
            Gets or sets the number of topics in a forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.BoardID">
            <summary> 
            Gets or sets the ID of the Discussion Board that contains this forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.Topics">
            <summary> 
            Gets or sets Topic information for the Forum using the DiscussionTopic data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.CreatedByUserID">
            <summary>
            Gets or sets the ID of the user who created the Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.CreatedbyUserName">
            <summary>
            Gets or sets the username of the person who created the Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Views">
            <summary>
            Gets or sets how many times a Topic has been viewed.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Priority">
            <summary>
            Gets or set the priority of the Topic. Choices are:
              * <b>Normal</b> - Topics with this priority follow Announcements and Sticky topics. The Normal icon (two users) next to the topic indicates its priority.
              * <b>Sticky</b> - topic appears near the top of the list, just below the announcements. If a list has more than one sticky topic, they are sorted by date with most recent on the top. The Sticky icon (an envelope with an up arrow) indicates its priority to the left of the Topic's title.
              * <b>Announcement</b> - topic always appears at the top of the list. If a list has more than one announcement, they are sorted by date with most recent on the top. The Announcement icon (an envelope) indicates its priority to the left of the Topic's title.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LastPostedDate">
            <summary>
            Gets or sets the date of the most recently posted topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LastMessageID">
            <summary>
            
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Replies">
            <summary>
            Gets or sets the quantity of replies to a Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.StartingMessage">
            <summary>
            
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.AverageRating">
            <summary>
            Gets or sets the average rating for a Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LockTopic">
            <summary>
            Gets or sets whether to prevent all posting to this Discussion Topic. You can do this 
            temporarily or permanently. If a Board is locked, only Administrator user group members can
            create, edit or delete posts. 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Flag.FlagDefinitionCriteria">
            <summary>
            Criteria object for retreiving FlagDefinitions items from the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SortRequest.SortOrder">
            <summary>
             sets the sort order column values
               * Taxonomy Display Order = "taxonomy_item_display_order"
               * Content Title = "content_title"
               * Content Id = "content_id"
               * Date Created = "date_created"
               * Last Editdate = "last_edit_date"
               * GoLive Date = "go_live"
               * Content Rating Average = "content_rating_average"
               * Content View Count = "content_view_count"
            </summary> 
        </member>
        <member name="P:Ektron.Cms.SortRequest.SortDirection">
            <summary>
              sets the sort direction column values
               * Ascending = "asc" or "ascending"
               * Descending Title = "desc" or "descending"
            </summary> 
        </member>
        <member name="T:Ektron.Cms.Content.MetadataTypeProperty">
            <summary>
            Enumeration of Metadata properties available for filtering MetadataCritera.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Id">
            <summary>
            Metadata Type ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Name">
            <summary>
            Metadata Type Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Language">
            <summary>
            Metadata Type  Language (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Requried">
            <summary>
             Metadata Type required (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.ObjectType">
            <summary>
            The type of object this applies to
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.MetadataTypeCriteria">
            <summary>
            Criteria object for retreiving Metadata from the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TaskData.Validate">
            <summary>
            validation implementation
            </summary>
            <returns>ValidationResults data </returns>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignedToUserID">
            <summary>
            The Id of the user to assign the Task to.
            This is a required property to successfully assign a task to a user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignorUserId">
            <summary>
            The Id of the user assigning the Task
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.State">
            <summary>
            One of the following values from Common.EkEnumeration.TaskState:
            Prototype = "0", NotStarted = "1", Active = "2", AwaitingData = "3", 
            OnHold = "4", Pending = "5", Reopened = "6", Completed = "7", Archived = "8",
            or Deleted = "9"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.Status">
            <summary>
            Obsolete superceded by "State"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignedToUser">
            <summary>
            The username of the user who the Task is assigned to.
            This value is populated when retrieving TaskData.
            While adding a new Task, use the AssignedToUserID property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.Assignor">
            <summary>
            The username of the user assigning the Task.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskCategoryData.Title">
            <summary>
            Gets or sets the title of the Task Category.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskCategoryData.IsActive">
            <summary>
            Gets or sets the Active flag.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Device.CmsDeviceConfigurationProperty">
            <summary>
            Enumeration of CmsDeviceConfigurationProperty properties available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Device.CmsDeviceConfigurationData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Name">
            <summary>
            Gets or sets the name of the device configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Width">
            <summary>
            Gets or sets the width for the preview template.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Height">
            <summary>
            Gets or sets the height for the preview template.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Models">
            <summary>
            Gets or sets the Models for the device configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Order">
            <summary>
            Gets or sets the order of device configuration to match. if not set by default it will be set to last
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.DisplayFor">
            <summary>
            Gets or sets OS or Model type for the device config.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.DeviceType">
            <summary>
            Gets or sets Handheld / Tablet / Both.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.ClearCache(System.String)">
            <summary>
            Clears the volatile and persistent caches of references to the
            specified image file path.
            </summary>
            <param name="imageFile">The file path to the base image.</param>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.ClearPersistentCache(System.String)">
            <summary>
            Clears the persistent cache for the requested image file.
            </summary>
            <param name="imageFile">The file path to the base image.</param>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.ClearVolatileCache">
            <summary>
            Clears the volatile cache of all data held for image file information, 
            image content and CMS breakpoints.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.ProcessImage(System.String)">
            <summary>
            Processes the image for all breakpoints.
            </summary>
            <param name="imageFile">The file system path of the image to process.</param>
            <returns>The processed image or null.</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.ReloadSettings">
            <summary>
            Reloads the adaptive image settings from the system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Device.IAdaptiveImageProcessor.TryWriteResponse(System.Web.HttpContext,System.String,System.String)">
            <summary>
            Tries to process the requested image for adaptation and write it, 
            with the appopriate headers to the response.
            </summary>
            <param name="context">The context to which the image should be written.</param>
            <param name="filePath">The file path of the to try to process as an adaptive image.</param>
            <param name="assetFileName">Name of the asset file, as it should be reported to the browser.</param>
            <returns>
            True if the image was processed and written successfully; otherwise false.
            </returns>
        </member>
        <member name="T:Ektron.Cms.Contracts.Forms.EkDTSelector">
            <summary>
            This class is only for the forms date selector.  This class can be removed when html forms are redone.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Forms.EkDTSelector.#ctor(Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Constructor to create new instance.
            </summary>
            <param name="ReqInfo">Values as EkRequestInformation class. (Required)</param>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Contracts.Forms.EkDTSelector.RoundMinutes(System.DateTime,System.Int32)">
            <summary>
            Math function to round the minute.
            </summary>
            <param name="dateToRound">Date value</param>
            <param name="minuteIncrement">Minute value</param>
            <returns>Date</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Contracts.Forms.EkDTSelector.displayCultureDate(System.Boolean,System.String,System.String)">
            <summary>
            Returns server culture date using culture object.
            </summary>
            <param name="isEditable">True for editable span tag, otherwise false.</param>
            <param name="inSpanID">ID value for the span tag.</param>
            <param name="inFormElemName">Name value for the span tag.</param>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Contracts.Forms.EkDTSelector.displayCultureTime(System.Boolean,System.String,System.String)">
            <summary>
            Returns the server culture time.
            </summary>
            <param name="isEditable">True for editable span tag, otherwise false.</param>
            <param name="inSpanID">ID value for the span tag.</param>
            <param name="inFormElemName">Name value for the span tag.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Contracts.Forms.EkDTSelector.displayCultureDateTime(System.Boolean,System.String,System.String)">
            <summary>
            Returns server culture date and time.
            </summary>
            <param name="isEditable">True for editable span tag, otherwise false.</param>
            <param name="inSpanID">Id value for the span tag.</param>
            <param name="inFormElemName">Name value for the span tag.</param>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ServerTimeSeparator">
            <summary>
            Returns the server side date separator.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ServerDateSeparator">
            <summary>
            Returns the server side date separator.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientTimeSeparator">
            <summary>
            Returns the clients time separator.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientDateSeparator">
            <summary>
            Returns client date separator value.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientShortDatePattern">
            <summary>
            Returns the clients date in short format.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientLongDatePattern">
            <summary>
            Returns the client date in long date format.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientShortTimePattern">
            <summary>
            Returns the client time in short format.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ClientLongTimePattern">
            <summary>
            Returns the clients time in long format.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ServerShortDatePattern">
            <summary>
            Returns the server side short date pattern.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ServerShortTimePattern">
            <summary>
            Returns the server short time pattern.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.RequestInfo">
            <summary>
            Gets or sets the RequestInfo object.
            </summary>
            <value></value>
            <returns>Ektron.Cms.Common.EkRequestInformation</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.formName">
            <summary>
            Sets or gets the form name.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.formElement">
            <summary>
            Sets or gets the form element value.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.spanId">
            <summary>
            Gets or sets span for calendar control.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.SpanAttributes">
            <summary>
            Gets or sets the span attributes.
            </summary>
            <value></value>
            <returns>String</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.targetDate">
            <summary>
            Sets or gets the target date.
            </summary>
            <value></value>
            <returns>Date</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.extendedMeta">
            <summary>
            Returns the value of meta extended or not meta extended.
            </summary>
            <value></value>
            <returns>Boolean</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Contracts.Forms.EkDTSelector.ValidationType">
            <summary>
            Gets or sets the validation type.
            </summary>
            <value></value>
            <returns>Integer</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.FormFieldDataItem">
            <summary>
            Describes an instance of a data value from an individual form field. The data is a name/value pair.
            </summary>
            <remarks>
            Typically, this class is used in an array.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDataItem.FieldName">
            <summary>
            Gets or sets the name of the form field.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDataItem.DataValue">
            <summary>
            Gets or sets the value of the form field.
            </summary>
            <value></value>
            <remarks>
            The data type of the value is variant (i.e., an Object).
            </remarks>
        </member>
        <member name="T:Ektron.Cms.FormFieldDatalist">
            <summary>
            Describes an individual datalist suitable as an enumeration for a select list.
            </summary>
            <remarks>
            Typically used as an array in class FormFieldList.<para></para>
            Typically referenced by name in class FormFieldDefinition.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.Name">
            <summary>
            Gets or sets the name of the datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.Language">
            <summary>
            Gets or sets the language code of the datalist. For example, en or en-US.
            </summary>
            <returns>Language code.</returns>
            <remarks>
            The first two letters of the language code conform to ISO 639. The last two
            letters are an optional country code that conforms to ISO 3166.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.DatalistItems">
            <summary>
            Gets or sets the array of items defined in the datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.DataSrc">
            <summary>
            Gets or sets the Data Source of the pre-defined datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.DataSelect">
            <summary>
            Gets or sets the Data Select of the pre-defined datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.CaptionXPath">
            <summary>
            Gets or sets the CaptionXPath of the pre-defined datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.ValueXPath">
            <summary>
            Gets or sets the Value XPath of the pre-defined datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalist.DataNamespaces">
            <summary>
            Gets or sets the Data Namespace of the pre-defined datalist.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="T:Ektron.Cms.FormFieldDatalistItem">
            <summary>
            Describes an individual datalist item (most importantly its value and display value).
            </summary>
            <remarks>
            Typically used as an array in class FormFieldDatalist <see cref="T:Ektron.Cms.FormFieldDatalist"/>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalistItem.DataValue">
            <summary>
            Gets or sets the value for this item in the data list.
            </summary>
            <value></value>
            <remarks>
            This value is typically language independent and suitable for machine processing.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalistItem.DisplayValue">
            <summary>
            Gets or sets the value to be displayed.
            </summary>
            <value></value>
            <remarks>
            This value is typically dependent on the language and suitable for human reading.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalistItem.IsDefault">
            <summary>
            Gets or sets whether this item is the default value in the datalist. 
            Set to <b>True</b> if this item is a default value for the list.
            </summary>
            <value></value>
            <remarks>
            If a list allows only one item to be selected at a time, then only one item 
            should be marked as the default. If more than one may be selected, then it
            is reasonable to have more than one default.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDatalistItem.IsEnabled">
            <summary>
            Gets or sets whether this item is enabled for selection.
            Set to <b>True</b> if this item is enabled.
            </summary>
            <returns></returns>
            <remarks>
            An item may be disabled to prevent it from being selected. Typically an item, once
            defined and used, would not be deleted from the list, but simply disabled. This
            preserves the display value of the item for backward compatibility. 
            </remarks>
        </member>
        <member name="T:Ektron.Cms.FormFieldDefinition">
            <summary>
            Describes the definition of an individual form field.
            </summary>
            <remarks>
            Typically used as an array in class FormFieldList.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value></value>
            <remarks>
            The name is suitable for machine processing, such as with an XML parser.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.DisplayName">
            <summary>
            Gets or sets the name of the field to be displayed.
            </summary>
            <value></value>
            <remarks>
            The name is suitable for human reading.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.Datatype">
            <summary>
            Gets or sets the datatype of the field.
            </summary>
            <value></value>
            <remarks>
            The possible values of the datatype vary. Generally they conform to W3C XML Schema 
            types such as 'string' and 'date'. Other values include 'selection' and 'choice'.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.Basetype">
            <summary>
            Gets or sets the basic datatype of the field.
            </summary>
            <value></value>
            <remarks>
            The possible values of the basic datatype vary, including, text, textbox, calendar and checkbox.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.ContentType">
            <summary>
            Gets or sets the type of content allowed within the field. This is loosely 
            associated with the datatype.
            </summary>
            <value></value>
            <remarks>
            The possible values for content vary. 
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.XPath">
            <summary>
            Gets or sets the XPath expression that locates the field.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.DatalistName">
            <summary>
            Gets or sets the name of the datalist, if one is defined for this field. 
            </summary>
            <value>Name of the associated datalist.</value>
            <remarks>
            Applies only to fields whose values are selected from a list. The allowed values
            are defined in the datalist.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldDefinition.Language">
            <summary>
            Gets or sets the language code of the datalist. For example, en or en-US.
            </summary>
            <returns></returns>
            <remarks>
            The first two letters of the language code conform to ISO 639. The last two
            letters are an optional country code that conforms to ISO 3166.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.FormFieldList">
            <summary>
            Describes the definition of all the fields in a specific form.
            </summary>
        </member>
        <member name="P:Ektron.Cms.FormFieldList.Fields">
            <summary>
            Gets or sets an array of field definitions.
            </summary>
            <value></value>
            <returns>Ektron.Cms.FormFieldDefinition</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormFieldList.Datalists">
            <summary>
            Gets or sets an array of defined datalists.
            </summary>
            <value></value>
            <returns>Ektron.Cms.FormFieldDatalist</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.FormRequestData">
            <summary>
            A data object that contains information about a form.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.Id">
            <summary>
            The numeric ID of the form.
            </summary>
            <value></value>
            <returns>The numeric ID (Long) of the form.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.Language">
            <summary>
            Gets or sets the form's language ID. For example, 1033 for English, 1034 for Spanish or 1036 for French.
            When set to 0 (zero), the language is dynamic.
            </summary>
            <value></value>
            <returns>The form's language ID as an integer.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.TagRequired">
            <summary>
            Gets or sets whether to wrap form tags around the form element.
              * <b>True</b> - wrap form tags around the form element.
              * <b>False</b> - Do not wrap form tags around the form element.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>Typically set to false.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.PostBackData">
            <summary>
            Gets or sets the data submitted from the form as a collection.
            </summary>
            <value></value>
            <returns>System.Collections.Specialized.NameValueCollection</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.IsPoll">
            <summary>
            Gets whether the form is used as poll.
              * <b>True</b> - this form is a poll.
              * <b>False</b> - this form is not a poll.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>This should only be read not set.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.PreFillFielddata">
            <summary>
            Gets or sets the data values that are used to pre-fill a form's fields. 
            When you display a form, this is the information pre-loaded into each field. <para></para>
            For example, in a Country: field you might have "United States" set to pre-fill the field. This way, people 
            from the United States don't have to type it in each time. Another example is when a user is logged in and fills out a form 
            more that once, his name and and email address always appear in their respective fields after completing the form 
            the first time.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>If the AutoFill property is set to false, this property appears as empty.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.FieldList">
            <summary>
            Gets or sets a list of the fields defined in the form.
            </summary>
            <value></value>
            <returns>Ektron.Cms.FormFieldList</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormRequestData.AutoFill">
            <summary>
            Indicates whether a form's fields are pre-filled when the form is displayed.
            * <b>True</b> - a form's fields are pre-filled when the form is displayed.
            * <b>False</b> - a form's fields are empty when the form is displayed.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocaleContent">
            <summary>
            Locale API
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocaleManager">
            <summary>
            Locale API
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Add(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Adds a new locale
            </summary>
            <param name="data">Locale data</param>
            <returns>Returns the custom CmsData object added</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Update(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Updates an existing locale
            </summary>
            <param name="data">Locale data</param>
            <returns>Returns the custom CmsData object updated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Delete(System.Int32)">
            <summary>
            Deletes an existing locale
            </summary>
            <param name="id">Unique ID of the locale</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetItem(System.Int32)">
            <summary>
            Get locale data by ID
            </summary>
            <param name="id">Unique ID of the locale</param>
            <returns>Locale data</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetList(Ektron.Cms.Common.Criteria{Ektron.Cms.Localization.LocaleProperty})">
            <summary>
            Gets a list of locale data given criteria
            </summary>
            <param name="criteria">Criteria defining which locales to get</param>
            <returns>List of locale data</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.FindLocale(System.Collections.Generic.List{Ektron.Cms.Localization.LocaleData},System.Int32)">
            <summary>
            Finds a locale given a list and an ID
            </summary>
            <param name="list">The list of locales to search</param>
            <param name="id">The locale ID</param>
            <returns>The locale with the given ID or null if not found.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocale(System.Int32)">
            <summary>
            Gets locale data for the given id, if it is enabled, otherwise returns null.
            </summary>
            <param name="id">A unique ID</param>
            <returns>An <see cref="T:Ektron.Cms.Localization.LocaleData"/> object or null</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocales">
            <summary>
            Gets list of locale data that are enabled.
            </summary>
            <returns>List of LocaleData</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocales(System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets list of locale data for the given list of ids, for each one that is enabled.
            </summary>
            <param name="ids">List of language ids</param>
            <returns>List of LocaleData</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.IsLocaleUsed(System.Int32)">
            <summary>
            Gets a value indicating whether the locale specified is or has been used.
            </summary>
            <param name="id">A unique ID</param>
            <returns>Returns true if the locale is in use, even if it is currently disabled.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.IsFallbackLocale(System.Int32)">
            <summary>
            Gets a value indicating whether the locale specified is a fallback locale for at least one other locale.
            </summary>
            <param name="id">A unique ID</param>
            <returns>Returns true if the locale is the fallback for another locale.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetContentLanguage(System.Int64,System.Int32)">
            <summary>
            Gets the content language given a requested content language for a given content ID 
            by following the fallback languages until an existing content is found.
            </summary>
            <param name="contentId">The ID of the content</param>
            <param name="preferredLanguageId">The requested language</param>
            <returns>The language for content that exists</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.ILocaleParser.getSelectedLanguageId">
            <summary>
            Obtain the users currently selected language. Exact methodology dertermined by implementor.
            The language ID returned to the caller will be used as the internally selected language for all Ektron APIs in this request cycle.
            If the returned language Id is 0 then the system default language will be used.
            </summary>
            <returns>An int32 representing the language code e.g. 1033 for US English</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationManager.StartExportForTranslation(Ektron.Cms.Localization.LocalizationExportJob)">
            <summary>
            Exports the items specified in the job for translation asynchronously on a background thread.
            </summary>
            <param name="job">Specifies parameters for the export process.</param>
            <returns>The ID of the export job</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationManager.GetReport(Ektron.Cms.BusinessObjects.Localization.ReportingCriteria)">
            <summary>
            Returns a report of content localization.
            </summary>
            <param name="criteria">Criteria object for localization objects.</param>
            <returns>List of ReportingData objects</returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject">
            <summary>
            Localization Object API
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkReadyForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as ready to be localized.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNotReadyForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as NOT ready to be localized. Published content is always considered ready for translation.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkDoNotTranslate(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as do NOT translate. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNeedsTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32,System.Int32)">
            <summary>
            Marks an object, e.g., content, as existing in the target language, but needs to be localized. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="targetLanguage">Language of the object needing translation, i.e., the target language</param>
            <param name="sourceLanguage">Original language of the object</param>
            <returns>Returns an ID to the database record of the "marking"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNeedsTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as existing in the target language, but needs to be localized. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object needing translation, i.e., the target language</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkOutForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks that an object (for a given target language) is currently being translated
            </summary>
            <param name="objectType">The Localizable Cms Object Type</param>
            <param name="objectId">The ID of the object</param>
            <param name="objectLanguage">The target locale of the object</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkTranslated(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks that an object (for a given target language) has been translated
            </summary>
            <param name="objectType">The Localizable Cms Object Type</param>
            <param name="objectId">The ID of the object</param>
            <param name="objectLanguage">The target locale of the object</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetLocalizationObjectList(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Get List of localization object, e.g., content, as ready to be localized.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>List of Localization Object</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetObjectLanguages(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Gets the list of languages that exist for the given CMS object
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <returns>A list of locale IDs</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetContentLocalizationState(System.Int64,Ektron.Cms.ContentData)">
            <summary>
            Get the localization state of the specified content.
            </summary>
            <param name="contentId">Id of the content</param>
            <param name="contentData">ContentData object of the content specified</param>
            <returns>Localization state e.g., Ready for translation, Not ready for translation, Do not translate, Needs translation, Out for translation, Translated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetContentLocalizationState(System.Int64,Ektron.Cms.ContentData,System.Int32@,System.DateTime@)">
            <summary>
            Get the localization state of the specified content.
            </summary>
            <param name="contentId">Id of the content</param>
            <param name="contentData">ContentData object of the content specified</param>
            <param name="sourceLanguage">If content is a translation (or will be), sourceLanguage is the original language, otherwise -1</param>
            <param name="sourceDateModified">If content has been translated, the date the original source was last edited, otherwise DateTime.MinValue</param>
            <returns>Localization state e.g., Ready for translation, Not ready for translation, Do not translate, Needs translation, Out for translation, Translated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.Delete(System.Int64)">
            <summary>
            Deletes the LocalizationObject record from the database
            </summary>
            <param name="id">The record ID as LocalizationObjectData.Id or returned by MarkReadyForTranslation or MarkNeedsTranslation</param>
        </member>
        <member name="T:Ektron.Cms.Localization.LanguageTag">
            <summary>
            IETF Language Tag
            BCP 47
            http://tools.ietf.org/html/bcp47
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
            <param name="languageTag">The language tag, e.g., en-US, az-Cyrl-AZ, zh-Hans, und-002, x-piglatin</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
            <param name="languageSubtag">The language subtag, e.g., en, az, zh, und, but may contains script or region, e.g., en-GB, zh-Hans</param>
            <param name="scriptSubtag">The script subtag, e.g., Cyrl, Hans</param>
            <param name="regionSubtag">The region subtag, e.g., US, AZ, 002</param>
            <param name="privateUseSubtag">The private use subtag, e.g., piglatin, but may contain x-, e.g., x-piglatin</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.ToString">
            <summary>
            Returns the language tag, e.g., en-US, az-Cyrl-AZ, zh-Hans, und-002, x-piglatin
            </summary>
            <returns>The language tag as a string</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.GetSuppressedScript(System.String)">
            <summary>
            Gets the script subtag that is suppressed for the given language subtag
            </summary>
            <param name="languageSubtag">The given language subtag</param>
            <returns>The suppressed script subtag or empty string is none is suppressed.</returns>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.LanguageSubtag">
            <summary>
            Gets or sets the language subtag
            language     = 2*3ALPHA            ; shortest ISO 639 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.ScriptSubtag">
            <summary>
            Gets or sets the script subtag
            script        = 4ALPHA              ; ISO 15924 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.RegionSubtag">
            <summary>
            Gets or sets the region subtag
            region        = 2ALPHA              ; ISO 3166-1 code
                          / 3DIGIT              ; UN M.49 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.PrivateUseSubtag">
            <summary>
            Gets or sets the private-use subtag
             privateuse    = "x" 1*("-" (1*8alphanum))
             NOTE: Do not include the "x-"
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.RegistryUri">
            <summary>
            Gets or sets the Uri to language-subtag-registry.xml
            Used by ToString() to suppress assumed script subtags.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LanguageState">
            <summary>
            Indicates whether or not this locale is enabled in the CMS.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Undefined">
            <summary>
            Can't be the case if it's in the database.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Defined">
            <summary>
            The locale is defined in the system, but not enabled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Active">
            <summary>
            The locale is enabled for the workarea, but not the site. Of course, it is also Defined.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.SiteEnabled">
            <summary>
            The locale is enabled for the site, and of course, for the workarea (Active) and Defined.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleData">
            <summary>
            Data class of locale information based on a record in the language_type database table.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleData.LocaleCustomUnspecified">
            <summary>
            Windows-defined LCID for custom locales
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.#ctor(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,Ektron.Cms.Localization.LanguageState)">
            <summary>
            Initializes a new instance of the LocaleData class.
            </summary>
            <param name="id">Unique ID (database key)</param>
            <param name="lcid">Microsoft LCID</param>
            <param name="englishName">Name in English</param>
            <param name="nativeName">Name in the local language</param>
            <param name="isRightToLeft">True if language is bi-directional</param>
            <param name="loc">Unique mnemonic ID</param>
            <param name="culture">ASP.NET Culture property</param>
            <param name="uiCulture">ASP.NET UICulture property</param>
            <param name="langCode">ISO language code</param>
            <param name="xmlLang">IEFT language tag</param>
            <param name="flagFile">Name of flag file</param>
            <param name="flagUrl">Host-relative URL of flag file</param>
            <param name="fallbackId">ID to the fallback locale</param>
            <param name="state">Enabled-state of this locale</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.#ctor">
            <summary>
            Initializes a new instance of the LocaleData class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Id">
            <summary>
            Gets or sets unique identifier. May be used in the LangType URL parameter.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LCID">
            <summary>
            Gets or sets the Microsoft locale ID (LCID)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.EnglishName">
            <summary>
            Gets or sets the name of the locale in English.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.NativeName">
            <summary>
            Gets or sets the name of the locale in its native language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.CombinedName">
            <summary>
            Gets the combined native and English names, with HTML tags.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsRightToLeft">
            <summary>
            Gets or sets a value indicating whether the language is bi-directional (bi-di), e.g., Arabic and Hebrew.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Direction">
            <summary>
            Gets the HTML 'dir' attribute value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsPseudo">
            <summary>
            Gets whether the language is pseudo
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsMachineTranslation">
            <summary>
            Gets whether the language is pseudo
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Loc">
            <summary>
            Gets or sets the unique locale mnemonic identifier, which may be used in the 'loc' URL parameter.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Culture">
            <summary>
            Gets or sets the ASP.NET Culture property value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.UICulture">
            <summary>
            Gets or sets the ASP.NET UICulture property value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LangCode">
            <summary>
            Gets or sets the ISO language code, usually without the region subtag.
            </summary>
            <example>en, en-GB</example>
            <remarks>Languages that may (or may not) include a subtag include: 
            de-CH de-AT en-AU en-CA en-GB en-US es-419 es-ES fr-CA fr-CH nl-BE pt-BR pt-PT zh-Hans zh-Hant</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.XmlLang">
            <summary>
            Gets or sets the IETF language tag, used for XLIFF files. May be used for 'lang' and 'xml:lang' attributes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FlagFile">
            <summary>
            Gets or sets the file name of the flag icon (16x16 GIF image), e.g., flag0409.gif.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FlagUrl">
            <summary>
            Gets or sets URL of the flag icon, e.g., /cms400/workarea/images/applications/flags/flag0409.gif
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FallbackId">
            <summary>
            Gets or sets Id of the locale to fallback to if the object does not exist in this locale. Refers to the 'Id' of another locale.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LanguageState">
            <summary>
            Gets or sets indication of whether or not this locale is enabled in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Enabled">
            <summary>
            Gets a value indicating whether or not this locale is enabled in the CMS, either for the site or workarea.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.SiteEnabled">
            <summary>
            Gets a value indicating whether or not this locale is enabled for the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsCustomCulture">
            <summary>
            Gets a value indicating whether or not the locale is a Windows .NET custom culture. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Tag">
            <summary>
            Gets the language tag as an object with its subtags.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleData.EqualityComparer">
            <summary>
            IEqualityComparer for class LocaleData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.EqualityComparer.Equals(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocaleData)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableCmsObjectType">
            <summary>
            CMS object types that can be localized, i.e., using XLIFF
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Content">
            <summary>
            HTML content, HTML forms, Smart Form data content
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.DmsAsset">
            <summary>
            DMS asset, e.g., multimedia, images, documents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.ContentHistory">
            <summary>
            An historical version of HTML content, HTML forms, Smart Form data content
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.DmsAssetHistory">
            <summary>
            An historical version of DMS asset, e.g., multimedia, images, documents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.FolderContents">
            <summary>
            CMS folder contents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.FolderTree">
            <summary>
            CMS folder tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Menu">
            <summary>
            CMS menu tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.MenuItem">
            <summary>
            CMS menu items
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Taxonomy">
            <summary>
            CMS taxonomy tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.LocaleTaxonomy">
            <summary>
            Locale taxonomy that defines relationship between CMS objects and their associated locales.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Product">
            <summary>
            Product items
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem">
            <summary>
            Stores the ID of a localizable item, but not the object itself.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Boolean,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="recursive">Indicates whether the item includes all of its descendants</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.LocalizableType">
            <summary>
            Gets the type of this CMS object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.Recursive">
            <summary>
            Gets a value indicating whether the item includes all of its descendants
            </summary>
            <remarks>Only applies to item types that have a hierarchical structure (e.g., folders, menus, taxonomy).</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.Id">
            <summary>
            Gets the ID of this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.LanguageIds">
            <summary>
            Gets the list of locale IDs associated with this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.NeedsTranslation">
            <summary>
            Gets the list of stored results of whether or not the item needs to be translated into a language (the key is the language id).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.References">
            <summary>
            Gets or sets the list of items that this item references through meta data.
            </summary>
            <remarks>For example, if this item is a JPEG image, it may depend on a Photoshop file.
            The reverse relationship is expressed in the <see cref="P:Ektron.Cms.Localization.LocalizableItem.ReferencedBy"/> property.</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferencedBy">
            <summary>
            Gets or sets the list of items that depend on this item and in what way, which corresponds to the meta data type name. May be null.
            </summary>
            <remarks>For example, if this item is a Photoshop file, it may be referenced by a JPEG image.
            The reverse relationship is expressed in the <see cref="P:Ektron.Cms.Localization.LocalizableItem.References"/> property.</remarks>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.ReferenceType">
            <summary>
            Defines a reference relationship
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.#ctor(Ektron.Cms.Localization.LocalizableItem,System.String)">
            <summary>
            Initializes a new instance of the ReferenceType class.
            </summary>
            <param name="item">The item</param>
            <param name="typeName">The reference type</param>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferenceType.Item">
            <summary>
            Gets the item 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferenceType.TypeName">
            <summary>
            Gets the reference type, which corresponds to the meta data type name, for example, XliffReferenceSource.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer">
            <summary>
            IEqualityComparer for class ReferenceType
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer.Equals(Ektron.Cms.Localization.LocalizableItem.ReferenceType,Ektron.Cms.Localization.LocalizableItem.ReferenceType)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocalizableItem.ReferenceType)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.EqualityComparer">
            <summary>
            IEqualityComparer for class LocalizableItem
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.EqualityComparer.Equals(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Localization.LocalizableItem)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocalizableItem)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableAssetUpdateData">
            <summary>
            Defines a localizable AssetData for import.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableAssetUpdateData.Status">
            <summary>
            Gets or sets the status for the imported content item for the AssetInfoData object.
            </summary>
            <remarks>For example, if the item status is marked as "checked in", then this field will be set to "I".
            This will import the asset with the status of "checked in".</remarks>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleProperty">
            <summary>
            Enumeration used for filtering user lists using Criteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Id">
            <summary>
            Unique ID of the Locale Data Property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.LCID">
            <summary>
            Microsoft LCID
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Enabled">
            <summary>
            Whether or not locale is enabled (workarea or site)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.SiteEnabled">
            <summary>
            Whether or not locale is enabled for the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.EnglishName">
            <summary>
            Name in English
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.NativeName">
            <summary>
            Name in the local language
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Direction">
            <summary>
            Value for the HTML 'dir' attribute indicating whether or not the language is bi-directional
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Loc">
            <summary>
            Unique mnemonic ID
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Culture">
            <summary>
            ASP.NET Culture property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.UICulture">
            <summary>
            ASP.NET UICulture property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.LangCode">
            <summary>
            ISO language code
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.XmlLang">
            <summary>
            IEFT language tag
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.FlagFile">
            <summary>
            Name of flag file
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.FallbackId">
            <summary>
            ID to the fallback locale
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving locales from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationExportJob">
            <summary>
            Parameters to export objects for translation
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LocalizationExportJob class.
            </summary>
            <param name="jobTitle">Required title for the export job.</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.AddItem(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Adds an item to the list of Items.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.AddItem(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Adds an item to the list of Items.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.JobTitle">
            <summary>
            Gets or sets required title for the export job.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.Items">
            <summary>
            Gets or sets list of items to export.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.SourceLanguageId">
            <summary>
            Gets or sets source language of the items to export (default to current ContentLanguage)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.TargetLanguageIds">
            <summary>
            Gets or sets default list of target languages to translate to. 
            A locale taxonomy language list supercedes this list. 
            This value is optional when exporting a locale taxonomy.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.XliffVersion">
            <summary>
            Gets or sets the version of XLIFF to use for the export files.
            Specify "1.0" for older versions of Trados, "1.1" or later for tools that support XLIFF.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.MaxCompressedFileSize">
            <summary>
            Gets or sets the maximum size (in bytes) of the created ZIP files that store the XLIFF files.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.PseudoLocalize">
            <summary>
            Gets or sets a value indicating whether content should be pseudo-localized and automatically re-imported.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.MachineTranslate">
            <summary>
            Gets or sets a value indicating whether content should be machine translated and automatically re-imported.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationObjectData">
            <summary>
            Data class of localization object information based on a record in the LocalizationObjectTable database table.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationObjectData.#ctor(System.Int64,System.Int32,System.Int64,System.Int32,System.Boolean,System.DateTime,System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the LocalizationObjectData class.
            </summary>
            <param name="id">Unique ID (database key)</param>
            <param name="objectType">Localization Object Type</param>
            <param name="objectId">Localization Object Id</param>
            <param name="objectLanguage">Localization Object Language</param>
            <param name="doNotTranslate">True if object is marked as "do not translate"</param>
            <param name="readyForTranslation">DateTime when the object is marked as "Ready for translation"</param>
            <param name="sourceLanguage">The Language locale ID of the source</param>
            <param name="sourceDateModified">DateTime when the source is return from translation</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationObjectData.#ctor">
            <summary>
            Initializes a new instance of the LocalizationObjectData class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.Id">
            <summary>
            Gets or sets unique identifier. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectType">
            <summary>
            Gets or sets localization object type. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectId">
            <summary>
            Gets or sets the Id of the ObjectType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectLanguage">
            <summary>
            Gets or sets the Language locale ID of the ObjectType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.DoNotTranslate">
            <summary>
            Gets or sets a value indicating whether the object is marked as "Do not translate".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ReadyForTranslation">
            <summary>
            Gets or sets DateTime when the object is marked as "Ready for translation".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.SourceLanguage">
            <summary>
            Gets or sets the Language locale ID of the source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.SourceDateModified">
            <summary>
            Gets or sets DateTime when the source is return from translation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationState">
            <summary>
            Indicates the localizability of the object.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Undefined">
            <summary>
            The state has not yet been initialized.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Ready">
            <summary>
            The object is ready to be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.NotReady">
            <summary>
            The object is NOT ready to be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.DoNotTranslate">
            <summary>
            The object should NOT be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.NeedsTranslation">
            <summary>
            The object needs to be translated from its source language (SourceLanguage) into its (target) language.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.OutForTranslation">
            <summary>
            The object is currently in the process of being translated into its (target) language.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Translated">
            <summary>
            The object has been translated from its source language (SourceLanguage) into its (target) language.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationStateExtensions">
            <summary>
            Extension methods for LocalizationState enum
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsSourceState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is for a source locale for potential translation to other locales.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a translation source locale, false if not, unknown or should not be translated.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsTargetState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is for a target locale that has been translated from another source locale.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a translation target locale that has a source locale.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsExportableState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is suitable for export for translation.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a locale (either source or target) is suitable for export for translation.</returns>
        </member>
        <member name="T:Ektron.Cms.Marketing.ProgramEventProperty">
            <summary>
            Enumeration of ProgramEvent columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.CustomFieldProperty">
            <summary>
            Enumeration of CustomField columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.SubscriberCustomFieldProperty">
            <summary>
            Enumeration of SubscriberCustomField columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.BounceTypes">
            <summary>
            Enumeration of BounceTypes 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.EmailQueueStatus">
            <summary>
            Enumeration of queueStatus 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.EmailProperty">
            <summary>
            Enumeration of Email columns available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.EmailData.SerializeToXML">
            <summary>        
            </summary>       
            <returns>Serialize XML String</returns>
        </member>
        <member name="M:Ektron.Cms.Marketing.EmailData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="M:Ektron.Cms.Marketing.SubjectsData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="T:Ektron.Cms.Marketing.QueueProperty">
            <summary>
            Enumeration of QueueData columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.ListProperty">
            <summary>
            Enumeration of List columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.ProgramData.IsValid(Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Validates the Campaign object and returns a list of errors.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Marketing.SubscriberCriteria">
            <summary>
            Specialized criteria class for filtering subscribers by Product Field values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.SubscriberCriteria.AddFieldFilter(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Field based filter to the critaria object.
            </summary>
            <param name="FieldName">Name of Field to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the Field.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Marketing.SubscriberCriteria.AddFieldFilter(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Field based filter to the critaria object.
            </summary>
            <param name="FieldId">Id of Field to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the Field.</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageProperty">
            <summary>
            Enumeration of MessageData properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageData">
            <summary>
            Data class representing a Message in the Cms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.CmsMessageData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.Title">
            <summary>
            Gets or Sets the Title of the Message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.Subject">
            <summary>
            Gets or sets the Subject of the Message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.HtmlBody">
            <summary>
            Gets or sets the Html Body of the Message.  Depending on the delivery mechanism of the message, either the TextBody or HtmlBody may be used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.TextBody">
            <summary>
            Gets or sets the Html Body of the Message.  Depending on the delivery mechanism of the message, either the TextBody or HtmlBody may be used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.MessageType">
            <summary> 
            Gets or sets the the message type of this message. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.IsDefaultMessage">
            <summary>
            Gets or sets the IsDefault flag for this message.  If true, this message is the defualt used for the MessageType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.SiteId">
            <summary>
            Gets or sets the Id of the site that the message is associated with.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageDataCollection">
            <summary>
            Represents a collection of Language specific CMSMessageData objects for a given message Id.
            This collection is only meant to contain the translated messages for a given message Id and NOT multiple messages of various Ids.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageTypeProperty">
            <summary>
            Enumeration of CMsMessageTypeData properties available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Scope">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageTypeData">
            <summary>
            Data class representing Message Types in the Cms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.CmsMessageTypeData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageTypeData.Scope">
            <summary>
            Gets or sets the scope of the message type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageTypeData.Name">
            <summary>
            Gets or sets the name of the message type.
            </summary>
        </member>
        <member name="T:Ektron.Cms.PrivateMessageProperty">
            <summary>
            Enumeration of PrivateMessageData properties than can be filtered on.
            </summary>
        </member>
        <member name="T:Ektron.Cms.PrivateMessageData">
            <summary>
            Data class representing a private message in CMS400.NET.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Mobile.DevicePreviewData">
            <summary>
            Data object for a device preview object.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Mobile.DevicePreviewTemplateData">
            <summary>
            Data object for a device preview template (the basis of device preview objects).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Brand">
            <summary>
            Gets or sets the name of the brand.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.EnabledPreview">
            <summary>
            Gets or sets a value indicating whether preview is enabled for the device
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.HasLandscape">
            <summary>
            Gets or sets a value indicating whether this device supports landscape mode.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Height">
            <summary>
            Gets or sets the device height in pixels relative to its viewport size
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Id">
            <summary>
            Gets or sets the ID for the preview device.
            </summary>
            <value>
            The preview device ID.
            </value>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ImagePath">
            <summary>
            Gets or sets the path to an image of the device
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Model">
            <summary>
            Gets or sets the device's model name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Os">
            <summary>
            Gets or sets the operating system of the device
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ThumbnailPath">
            <summary>
            Gets or sets the path to the device's thumbnail image
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.UserAgent">
            <summary>
            Gets or sets the user agent for the device
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ViewportHeight">
            <summary>
            Gets or sets the height of the device's viewport in pixels
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ViewportWidth">
            <summary>
            Gets or sets the width of the device's viewport in pixels
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ViewportOffsetX">
            <summary>
            Gets or sets the horizontal offset to the viewport from the device edge in portrait orientation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.ViewportOffsetY">
            <summary>
            Gets or sets the vertical offset to the viewport from the device edge in portrait orientation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewTemplateData.Width">
            <summary>
            Gets or sets the device width in pixels relative to its viewport size
            </summary>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewData.BreakpointId">
            <summary>
            Gets or sets the breakpoint ID associated with this device preview.
            </summary>
            <value>
            The breakpoint ID.
            </value>
        </member>
        <member name="P:Ektron.Cms.Mobile.DevicePreviewData.TemplateId">
            <summary>
            Gets or sets the ID of the template from which this device preview
            was copied (if it was).
            </summary>
            <value>
            The ID of the device preview's template or 0.
            </value>
        </member>
        <member name="T:Ektron.Cms.Mobile.IDeviceInfoProvider">
            <summary>
            Provides mobile device information
            </summary>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoProvider.GetAvaliableOs">
            <summary>
            Gets the list of available device operating systems
            </summary>
            <returns>
            The list of operating systems
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoProvider.GetDeviceInfo(System.String)">
            <summary>
            Gets the device info for the user agent
            </summary>
            <param name="userAgent">The user agent</param>
            <returns>
            The device info associated with the specified user agent or the default mobile device
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoProvider.GetDeviceInfoByModel(System.String)">
            <summary>
            Gets a device's information by its model name
            </summary>
            <param name="modelName">Name of the model</param>
            <returns>
            The specified device information or null
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoProvider.SearchForDevices(System.String)">
            <summary>
            Searches for device information
            </summary>
            <param name="searchTerm">The search term to match</param>
            <returns>
            List of matching devices
            </returns>
        </member>
        <member name="T:Ektron.Cms.Mobile.IDeviceInfoRepository">
            <summary>
            Contract for accessing a repository of device information.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoRepository.GetAvaliableOs">
            <summary>
            Gets the list of available device operating systems.
            </summary>
            <returns>
            The list of operating systems
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoRepository.GetDeviceById(System.String)">
            <summary>
            Gets a device's information by the ID specific to the repository
            implementation.
            </summary>
            <param name="id">ID of the device.</param>
            <returns>
            The specified device information or null
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoRepository.GetDeviceForRequest(System.String)">
            <summary>
            Gets the device information associated with the 
            specified user agent.
            </summary>
            <param name="userAgent">The user agent of the device.</param>
            <returns>
            The associated device information or null
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoRepository.GetDeviceInfoByModel(System.String)">
            <summary>
            Gets device info for the requested model name
            </summary>
            <param name="modelName">Name of the model</param>
            <returns>
            All device information associated with the requested model name
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDeviceInfoRepository.SearchForDevices(System.String)">
            <summary>
            Searches for device information
            </summary>
            <param name="searchTerm">The search term to match</param>
            <returns>
            List of matching devices
            </returns>
        </member>
        <member name="T:Ektron.Cms.Mobile.IDevicePreviewManager">
            <summary>
            Provides information for device previews
            </summary>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.Add(Ektron.Cms.Mobile.DevicePreviewData)">
            <summary>
            Adds the specified device preview.
            </summary>
            <param name="preview">The device preview.</param>
            <returns>The added device preview</returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.Delete(System.Int64)">
            <summary>
            Deletes the device preview with the specified ID.
            </summary>
            <param name="id">The device preview ID.</param>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetAll">
            <summary>
            Gets all available preview devices
            </summary>
            <returns>
            The list of all preview devices
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetItem(System.Int64)">
            <summary>
            Gets the specified device preview.
            </summary>
            <param name="id">The ID of the device preview.</param>
            <returns>
            The specified device preview or null.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetList(Ektron.Cms.Common.Criteria{Ektron.Cms.Common.DevicePreviewProperty})">
            <summary>
            Gets a list of device previews matching the specified criteria.
            </summary>
            <param name="criteria">The search criteria.</param>
            <returns>
            The list of matching preview devices
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetList(System.Int64)">
            <summary>
            Gets a list of device previews associated with the specified breakpoint ID.
            </summary>
            <param name="breakpointId">The breakpoint ID.</param>
            <returns>
            The list of matching preview devices
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetList(System.Int64,System.Int64)">
            <summary>
            Gets a list of device previews associated with the specified breakpoint ID and
            device preview template ID.
            </summary>
            <param name="breakpointId">The breakpoint ID.</param>
            <param name="templateId">The template ID.</param>
            <returns>
            The list of matching preview devices
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.GetTemplates">
            <summary>
            Gets a list of all device preview templates.
            </summary>
            <returns>The list of all device preview templates.</returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.Update(Ektron.Cms.Mobile.DevicePreviewData)">
            <summary>
            Updates the specified device preview.
            </summary>
            <param name="preview">The device preview.</param>
            <returns>The updated device preview.</returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewManager.Update(System.Int64,System.Boolean)">
            <summary>
            Updates the device preview.
            </summary>
            <param name="id">ID of the device preview.</param>
            <param name="enablePreview">if set to <c>true</c> enables the device preview in the UI.</param>
        </member>
        <member name="T:Ektron.Cms.Mobile.IDevicePreviewRepository">
            <summary>
            Contract for accessing a repository of device preview information.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.AddDevicePreview(Ektron.Cms.Mobile.DevicePreviewData)">
            <summary>
            Inserts the preview device data into the repository.
            </summary>
            <param name="preview">The preview device data.</param>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.DeleteDevicePreview(System.Int64)">
            <summary>
            Deletes the preview device from the repository.
            </summary>
            <param name="id">The ID of the preview device.</param>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.GetDevicePreview(System.Int64)">
            <summary>
            Gets a preview device by its ID.
            </summary>
            <param name="id">The ID of the preview device to get.</param>
            <returns>The preview device or null.</returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.GetDevicePreviews">
            <summary>
            Gets all available preview devices.
            </summary>
            <returns>
            The list of all preview devices.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.GetDevicePreviews(Ektron.Cms.Common.Criteria{Ektron.Cms.Common.DevicePreviewProperty})">
            <summary>
            Gets the preview devices specified by the provided criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns>
            The list of preview devices.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.GetDevicePreviewTemplates">
            <summary>
            Gets all available templates for creating new preview devices.
            </summary>
            <returns>
            The list of all template preview devices.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.UpdateDevicePreview(System.Int64,System.Boolean)">
            <summary>
            Updates the preview device.
            </summary>
            <param name="id">The device preview ID.</param>
            <param name="enablePreview">if set to <c>true</c> enable preview.</param>
        </member>
        <member name="M:Ektron.Cms.Mobile.IDevicePreviewRepository.UpdateDevicePreview(Ektron.Cms.Mobile.DevicePreviewData)">
            <summary>
            Updates the preview device in the repository with the matching
            ID to have the supplied data.
            </summary>
            <param name="preview">The preview device data.</param>
        </member>
        <member name="M:Ektron.Cms.Notifications.INotificationAgentSetting.GetRegisteredAgentList">
            <summary>
            Retrieves a list of the Notification Agents registered in the web.config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Notifications.INotificationPreference.SaveUserPreferences(System.Collections.Generic.List{Ektron.Cms.Notifications.NotificationPreferenceData})">
            <summary>
            Saves a set of notification preferences for a given user. 
            Preferences marked as added will be added and those marked as delelted will be removed.
            </summary>
            <param name="preferenceList">preference data to save.</param>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgent">
            <summary>
            Base class for creating notification Agents.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgent.GetAgentSettings">
            <summary>
            Returns new instance of data class representing settings for this agent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgent.Send(Ektron.Cms.Notifications.NotificationMessageData)">
            <summary>
            Sends the suppled message to the supplied user.
            </summary>
            <param name="message">message to send.</param>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgent.IsValidationRequired">
            <summary>
            Returns true if this Agent requires settings be validated before being used.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentProperty">
            <summary>
            ENumeration of NotificationAgentData properties that cna be used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Description">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.TypeName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.IsEnabled">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentData">
            <summary>
            Data class representing Notification Agents registered in the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgentData.Validate">
            <summary>
            Validates that the data object is valid for saving.  Any errors are returns as ValidationResults.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Id">
            <summary>
            Get or sets the Id of the Notification Agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Name">
            <summary>
            Gets or sets the Name of the agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Description">
            <summary>
            Gets or sets the description of the agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.TypeName">
            <summary>
            Gets or sets the Fully Qualified Name of the Agent type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.IsEnabled">
            <summary>
            Gets or sets the IsEnabled flag on the agent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Notification Agents from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationSettingAttribute">
            <summary>
            Attribute used to decorate properties on NotificationAgentSettingsData that are settings used by Notification Agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationSettingAttribute.IsRequired">
            <summary>
            Indicates if this setting is required by the Agent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentSettingsData">
            <summary>
            Base class for defining settings for notification agents.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgentSettingsData.ReValidationRequired(Ektron.Cms.Notifications.NotificationAgentSettingsData)">
            <summary>
            When overridden, compares current SettingsData to supplied settingsData and returns true if the re-validation is required.
            </summary>
            <param name="originalSettings"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationMessageData">
            <summary>
            Data class representing a notification message to be sent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.HtmlMessage">
            <summary>
            Gets or sets the Html message of the notification.  This message would be used by providers that support Html based messages.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.TextMessage">
            <summary>
            Gets or sets the text message of the notification.  This message would be used by providers that send messages in plain text and not Html.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Subject">
            <summary>
            Gets or sets the subject of the notification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.UserNotification">
            <summary>
            Gets or sets the UserNotificationData for this notifification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Activity">
            <summary>
            Gets or sets the Activity associated with the notification.  This may be required for some notifications, but not all.
            The ActivityFeed, for one, provider requires it.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Document">
            <summary>
            Gets or sets the document associated with the notification message.  May be null.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.DocumentTitle">
            <summary>
            Gets or sets the document title associated with the notification message.  May be null.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationDataProperty">
            <summary>
            Enumeration of NotificationUserDataP properties that can be used for querying.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationData">
            <summary>
            Data class representing a users notification preference and settings for a particular object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.User">
            <summary>
            Gets or sets the user associated with this notification configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.AgentName">
            <summary>
            Gets or sets the name of the agent to be used for this user's notification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.AgentSettings">
            <summary>
            Gets or sets the user's settings for this notification provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceProperty">
            <summary>
            Enumeration of NotificationPreferenceData properties that can be used for querying.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.Id">
            <summary>
            long id
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.UserId">
            <summary>
            long UserId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActivityTypeId">
            <summary>
            long ActivityTypeId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ObjectType">
            <summary>
            long ObjectType
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ObjectId">
            <summary>
            long ObjectId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.AgentId">
            <summary>
            AgentId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActivityActionType">
            <summary>
            long ActivityActionType
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActionSource">
            <summary>
            long ActionSource
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActionSourceId">
            <summary>
            long ActionSourceId
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceData">
            <summary>
            Data class for dealing with user notification preferences for a user.  
            Each notification preference is a single preference that a user can set for a specific object or an object type.
            FOr example, User 10 wants to be notified via Agent Id 12 when Group Workspace (taxonomy) X has a document uploaded.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationPreferenceData.Validate">
            <summary>
            Validates the current data class is an appropriate state for saving.  Any errors are returned.  
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.Id">
            <summary>
            gets or sets the Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.UserId">
            <summary>
            gets or sets the User Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ActivityTypeId">
            <summary>
            Gets or sets the Activity Type for this notification preference. Built in CMS Activity are defined in EkEnumeration.ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ObjectId">
            <summary>
            Gets or sets the Object Id for this notification preference.  The Object Id is related to the Object Type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.AgentId">
            <summary>
            Gets or sets the Provider Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ActionSourceId">
            <summary>
            Gets or sets the Object Id of the Notification Action Source for this notification preference.  
            If ActionSource = CommunityGroup, ActionSourceId would be the communityGroup Id you want to receive notifications from.  By default it is 0,
            which means all.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.DataState">
            <summary>
            Gets or sets the preferences persistence State.  Used to determine the state of a preference when saving batches.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Notification Preferences from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingProperty">
            <summary>
            Enum containing properties in NotificationUserSettingData that can be sorted and filtered.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.AgentId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.VerificationCode">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.IsEnabled">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingData">
            <summary>
            Data class representing the user settings for a Notification provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.UserNotificationSettingData.Validate">
            <summary>
            Validates that the data object is valid for saving.  Any errors are returns as ValidationResults.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.UserId">
            <summary>
            Gets or sets the user Id associated with these settings..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.AgentId">
            <summary>
            Gets or sets the ID of the Notification Agent associated with these settings.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.VerificationCode">
            <summary>
            Gets or sets the verificationcode for this setting.  The user cannot recieve notifications on this 
            provider until they verify this code.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.IsEnabled">
            <summary>
            Gets or sets the enabled setting for this user notification setting.  This notification setting cannot be used if its not enabled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.AgentSettings">
            <summary>
            Gets or sets the user's settings for this notification provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving User Notification Settings from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ActivityCommentStrategy">
            <summary>
            Activity Comment strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.OnAfterDeleteActivityComment(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity Comment is deleted.
            </summary>
            <param name="id">ID of ActivityComment that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.OnAfterUpdateActivityComment(Ektron.Cms.Activity.ActivityCommentData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity Comment is edited.
            </summary>
            <param name="activity">The ActivityComment that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityStrategy.OnAfterDeleteActivity(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity is deleted.
            </summary>
            <param name="id">ID of Activity that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityStrategy.OnAfterUpdateActivity(Ektron.Cms.Activity.ActivityData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity is edited.
            </summary>
            <param name="activity">The Activity that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Content.BlogStrategy">
            <summary>
            Base class for handling Region Strategy events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy">
            <summary>
            Base class for handling BasketCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the Basket is calculated.
            </summary>
            <param name="basketCalculatorData">BasketCalculatorData to be calculated.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the basket is calculated.
            </summary>
            <param name="basketCalculatorData">basketCalculatorData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketStrategy">
            <summary>
            Base class for handling Basket Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketCreate(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is created.
            </summary>
            <param name="basketData">BasketData to be created.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketSave(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is saved.
            </summary>
            <param name="basketData">BasketData that has be saved.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeBasketDelete(System.Int64,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before a basket is deleted.
            </summary>
            <param name="basketId">Id of basket that will be deleted.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the deletion.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is deleted.
            </summary>
            <param name="basketId">Id of Basket that has been deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeItemAdded(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called before an item is added to a basket.
            </summary>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the item add.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterItemAdded(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called after an item is added to a basket..
            </summary>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeKitUpdated(Ektron.Cms.Commerce.KitConfigData,Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called before a kit configuration is updated.
            </summary>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel update.</param>
            <param name="currentKitConfiguration">The Current Kit Configuration before the update.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterKitUpdated(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called after a kit configuration is updated.
            </summary>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeItemRemoved(System.Int64,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before an item is removed from a basket.
            </summary>
            <param name="basketItemId">Id of basketItem to be removed.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the Item removal.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterItemRemoved(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an item is removed from a basket..
            </summary>
            <param name="basketItemId">Id of basket item removed.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs">
            <summary>
            Event arguments for basket item events.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.ProductId">
            <summary>
            Gets or sets Id of product associated with basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.VariantId">
            <summary>
            Gets or sets Id of variant associated with basket item.  Will be 0 if basket item is not a variant.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.KitConfiguration">
            <summary>
            Gets or sets kit configuration associated with basket item.  Will be null if basket item is not a kit configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.BasketItemId">
            <summary>
            Gets or sets Id of basket item.  Will be 0 if basket item has not been saved yet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy">
            <summary>
            Base class for handling CatalogEntry Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeAdd(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry is added.
            </summary>
            <param name="entryData">catalogEntryData to be added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterAdd(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is added.
            </summary>
            <param name="entryData">catalogEntryData that was added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeUpdate(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry is updated.
            </summary>
            <param name="entryData">catalogEntryData to be added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterUpdate(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is updated.
            </summary>
            <param name="entryData">catalogEntryData that was updated.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry has been deleted.
            </summary>
            <param name="entryId">Id of CatalogEntry to be deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a CatalogEntry has been deleted.
            </summary>
            <param name="entryId">Id of CatalogEntry being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterCheckIn(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a CatalogEntry has been checkedIn.
            </summary>
            <param name="entryId">Id of CatalogEntry being checked in.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterPublish(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is published.
            </summary>
            <param name="entryId">Id of Entry that was published.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CountryStrategy">
            <summary>
            Base class for handling Country Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CountryStrategy.OnCanDelete(System.Int32,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Country.CanDelete.  It should return true if deleting the country is possible.  
            If delete should nopt be allowed, it should return false and append an appropriate message to the messages parameter.
            </summary>
            <param name="countryId">Id of country to be deleted</param>
            <param name="result">ValidationResult to be populated with ValidationErrors if delete should not be allowed.</param>
            <param name="args">Event arguments</param>
            <returns>Returns true if the country can be deleted.</returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CountryStrategy.OnDelete(System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Country.Delete.
            </summary>
            <param name="countryId">Id of country being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy">
            <summary>
            Base class for handling CouponCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,System.Collections.Generic.List{Ektron.Cms.Commerce.CouponData},Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the basket coupons are calculated.
            </summary>
            <param name="basketData">BasketDaat to be calculated.</param>
            <param name="coupons">Coupons applied to basket.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,System.Collections.Generic.List{Ektron.Cms.Commerce.CouponData},Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the basket coupons are calculated.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="coupons">Coupons applied to basket.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CustomerStrategy">
            <summary>
            Base class for handling Customer Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterAdd(Ektron.Cms.Commerce.CustomerData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a customer is added.
            </summary>
            <param name="customerData">customerData that was added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterUpdate(Ektron.Cms.Commerce.CustomerData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a customer is updated.
            </summary>
            <param name="customerData">customerData that was updated.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a custoemr has been deleted.
            </summary>
            <param name="customerId">Id of Customer being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.InventoryStrategy">
            <summary>
            Base class for handling Inventory Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnBeforeInventorySave(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before inventory is saved.  This method could be called before inventory is updated via the product or via an order.
            </summary>
            <param name="inventoryData">Inventory being saved.</param>
            <param name="eventArgs">cancellable event arguments for this action.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnAfterInventorySave(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after inventory is saved.  This method could be called before inventory is updated via the product or via an order.
            </summary>
            <param name="inventoryData">Inventory being saved.</param>
            <param name="eventArgs">event arguments for this action.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnInventoryReorderLevelReached(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called when inventory has been decreased below the reorder threshhold.
            </summary>
            <param name="inventoryData">Id of catalog entry being affected.</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnInventoryNowInStock(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called when inventory has been added to a previously out of stock item.
            </summary>
            <param name="inventoryData">Id of catalog entry being affected.</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.OrderStrategy">
            <summary>
            Base class for handling Order Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnBeforeOrderPlaced(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before an order is placed
            </summary>
            <param name="basketData">BasketData to be converted to an order.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnAfterOrderPlaced(Ektron.Cms.Commerce.OrderData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an order has been placed.
            </summary>
            <param name="orderData">OrderData that has been placed.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnAfterStatusChange(Ektron.Cms.Commerce.OrderData,Ektron.Cms.Common.EkEnumeration.OrderStatus,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an order's status has been changed.
            </summary>
            <param name="orderData">Order being updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.RegionStrategy">
            <summary>
            Base class for handling Region Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.RegionStrategy.OnCanDelete(System.Int64,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Region.CanDelete.  It should return true if deleting the Region is possible.  
            If delete should nopt be allowed, it should return false and append an appropriate message to the messages parameter.
            </summary>
            <param name="regionId">Id of Region to be deleted</param>
            <param name="result">ValidationResult to be populated with ValidationErrors if delete should not be allowed.</param>
            <param name="args">Event arguments</param>
            <returns>Returns true if the Region can be deleted.</returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.RegionStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Region.Delete.
            </summary>
            <param name="regionId">Id of Region being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy">
            <summary>
            Base class for handling ShippingCalcualtor Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Commerce.ShippingMethodData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the shipping rates are calculated.
            </summary>
            <param name="basketData">BasketData to be calculated.</param>
            <param name="shippingMethod">Currently selelcted shipping method for basket.  May be null if no method has been selected yet.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the shipping rates are calculated.   This method can be used to modify Shipping rates after calculation.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy">
            <summary>
            Base class for handling TaxCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the tax costs are calculated.
            </summary>
            <param name="basketData">BasketData to be calculated.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the tax costs are calculated.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteStrategy.OnAfterDeleteFavorite(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a favorite is deleted.
            </summary>
            <param name="id">ID of favorite that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteStrategy.OnAfterUpdateFavorite(Ektron.Cms.Community.FavoriteItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a favorite is edited.
            </summary>
            <param name="favoriteItemData">The favorite that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteTaxonomyStrategy.OnAfterDeleteFavoriteTaxonomy(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Favorite Taxonomy is deleted.
            </summary>
            <param name="id">ID of Favorite Taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteTaxonomyStrategy.OnAfterUpdateFavoriteTaxonomy(Ektron.Cms.Community.FavoriteTaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Favorite Taxonomy is edited.
            </summary>
            <param name="favoriteTaxonomyData">The Favorite Taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsStrategy.OnAfterDeleteFriend(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend is deleted.
            </summary>
            <param name="id">ID of friend that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsStrategy.OnAfterUpdateFriend(Ektron.Cms.Community.FriendsData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend is edited.
            </summary>
            <param name="friendsData">The friend that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsTaxonomyStrategy.OnAfterDeleteFriendTaxonomy(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend taxonomy is deleted.
            </summary>
            <param name="id">ID of friend taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsTaxonomyStrategy.OnAfterUpdateFriendTaxonomy(Ektron.Cms.Community.FriendTaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend taxonomy is edited.
            </summary>
            <param name="friendTaxonomyData">The friend taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAdd(Ektron.Cms.CommunityGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is added.
            </summary>
            <param name="groupData">Added community group data.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnUpdate(Ektron.Cms.CommunityGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is updated.
            </summary>
            <param name="groupData">Updated community group data.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is deleted.
            </summary>
            <param name="id">ID of community group that was deleted.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAfterUserAdd(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is added to a community group.
            </summary>
            <param name="CommunityGroupId">ID of community group user was added to.</param>
            <param name="userId">ID of user added to community group.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAfterUserDelete(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is removed from a community group.
            </summary>
            <param name="CommunityGroupId">ID of community group user was removed from.</param>
            <param name="userId">ID of user removed from community group.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MessageBoardStrategy">
            <summary>
            Messageboard strategy
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAdd(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a messageboard add
            </summary>
            <param name="messageBoardData">messageboard data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnUpdate(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method 
            </summary>
            <param name="messageBoardData">message Board Data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a messageboard delete
            </summary>
            <param name="id">id of the messageboard</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterReplyAdd(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called adter a reply was added
            </summary>
            <param name="messageBoardData">messageBoardData</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnMessageApprove(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a message approval 
            </summary>
            <param name="messageBoardData">message Board Data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterUpdate(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MessageBoardData object is edited.
            </summary>
            <param name="messageBoardData">The MessageBoardData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MessageBoardData object is deleted.
            </summary>
            <param name="id">ID of MessageBoardData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MicroMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a microMessage is deleted.
            </summary>
            <param name="id">ID of microMessage that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MicroMessageStrategy.OnAfterUpdate(Ektron.Cms.MicroMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MicroMessage is edited.
            </summary>
            <param name="microMessageData">The microMessage that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.RatingStrategy">
            <summary>
            Rating strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.RatingStrategy.OnAfterDeleteRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Object Rating is deleted.
            </summary>
            <param name="id">ID of Object Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.RatingStrategy.OnAfterUpdateRating(Ektron.Cms.RatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Object Rating is edited.
            </summary>
            <param name="ratingData">The Object RatingData that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ConfigurationStrategy">
            <summary>
            The ConfigurationStrategy is an abstract class describing a component capable of
            responding to CMS Site Configuration -related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ContentRatingStrategy">
            <summary>
            Content rating strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ContentRatingStrategy.OnAfterDeleteContentRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is deleted.
            </summary>
            <param name="id">ID of Content Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ContentRatingStrategy.OnAfterUpdateContentRating(Ektron.Cms.ContentRatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is edited.
            </summary>
            <param name="contentRating">The Content Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Content.FormStrategy">
            <summary>
            Base class for handling Form Strategy events.  To implement a strategy extension for Form events, you must derive from ths class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ESyncDataTransformStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can modify the data rows being synced during the database
            portion of eSync.
            </summary>
            <remarks>
            By design, the DataRow exposed via this strategy is disconnected from the actual eSync row. This is so that the
            developer is not able to delete rows from the actual table. Deleting rows can produce undesirable effects
            and is not supported in this version of the strategy.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncDataTransformStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.ESyncDataTransformStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncDataTransformStrategy.OnAfterDataRowSelected(System.Data.DataRow,Ektron.Cms.CoreService.SyncDataTransformContext)">
            <summary>
            Called after the sync framework has determined the rows to be synced as per the sync criteria.
            </summary>
            <param name="disconnectedRow">
            A row corresponding to the actual row which will be synced. Any changes to this will be propagated back to the original row.
            Note however that this is disconnected from the actual DataRow object and does not provide access to the real DataTable or
            Dataset being used by the sync framework. Only row value changes are supported for transformation.
            </param>
            <param name="context">This parameter provides more context about the DataRow being passed.</param>
            <remarks>
            By design, this event is raised synchronously for every row in the DataTable, so that there is minimal impact on eSync
            memory consumption or performance.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ESyncNotificationStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can subscribe to eSync events synchronously and obtain information about the same.
            Not all methods are directly driven by the synchronization process within the MS Sync Framework. Although the MS Sync Framework performs the actual 
            synchronization, the Ektron eSync process wraps around it and performs actions before and after the call to it. 
            </summary>
            <remarks>
            Some events are raised both on the local service and on the peer service around the same time (one after the other). Any unhandled error within 
            the methods will be logged. However they will NOT cause eSync to abort. File Sync is referred to as "Folder Sync" because all file sync operations
            are eventually carried out as folder syncs.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunStartFromLocal(Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after a Database Sync initiated by an eSync run has started. This method is provided because an eSync can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">
            The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the Database Sync being run presently.
            </param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. This event is cancellable and properties can be propagated 
            back to EWS via the syncProfileData parameter.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunCompleteFromLocal(Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by an eSync run has completed. This method is provided because some eSync types can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by an eSync run has errored out. This method is provided because some eSync types can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunStartFromLocal(Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has started. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the Folder Sync being run presently.</param>
            <remarks>
            This event is cancellable and properties can be propagated back to EWS via the syncProfileData parameter.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunCompleteFromLocal(Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has completed. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has errored out. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.ESyncNotificationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunStartFromLocal(Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has started. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the eSync being run presently.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunCompleteFromLocal(Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has completed. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if eSync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has errored out. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has started. This happens after OnAfterESyncRunStartFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has completed. This happens after OnAfterESyncRunCompleteFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if eSync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has errored out.This happens after OnAfterESyncRunErrorFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has started. This happens after OnAfterDatabaseSyncRunStartFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has completed. This happens after OnAfterDatabaseSyncRunCompleteFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has errored out. This happens after OnAfterDatabaseSyncRunCompleteFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has started. This happens after OnAfterFolderSyncRunStartFromLocal()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has completed. This happens after OnAfterFolderSyncRunCompleteFromPeer()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if the file sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has errored out. This happens after OnAfterFolderSyncRunErrorFromLocal()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnLocalDatabaseSyncProgress(Ektron.Cms.CoreService.DatabaseSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a database sync initiated locally is running. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The database sync progress information.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnLocalFileSyncProgress(Ektron.Cms.CoreService.FileSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a file sync initiated locally is running. This event is not raised for all file syncs. 
            This method is initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The file sync progress information.</param>
            <param name="syncProfileData">The sync profile data.</param>
            <remarks>
            The behavior of this event corresponds directly to the behavior of the MS Sync Framework 
            'SessionProgress' and 'StateChanged' events of the SyncOrchestrator class.
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnPeerDatabaseSyncProgress(Ektron.Cms.CoreService.DatabaseSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a database sync initiated by a peer is running. This happens when the peer server is running database sync to the
            local server as part of the eSync process. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The database sync progress information.</param>
            <param name="syncProfileData">Generic eSync profile information. This can be NULL in certain circumstances</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnPeerFileSyncProgress(Ektron.Cms.CoreService.FileSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a file sync initiated by a peer is running. This happens when the peer server is running file sync to the
            local server as part of the eSync or Load Balancing process. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The file sync progress information.</param>
            <param name="syncProfileData">The sync profile data.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can subscribe to local load balancer events synchronously and obtain information about the same.
            Load Balancing of files by folder sync can be triggered by file watchers assigned to folders within sites configured to be load balanced OR 
            when eSync synchronizes the Templates or Work Area folders to a server which is load balanced.
            </summary>
            <remarks>
            All events are raised on the local service only. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnBeforeRunStart(System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called before the local load balancer starts syncing the files in the queue.
            </summary>
            <param name="files">The files in the load balancer queue which are going to be synced currently.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnAfterRunError(System.Exception,System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called after the local load balancer synchronization session has errored out.
            </summary>
            <param name="ex">The exception which caused the error.</param>
            <param name="files">The files in the load balancer queue which were being synced when the error occured.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnAfterRunComplete(System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called after the local load balancer synchronization session has completed successfully. If the session errored
            out, this event will not be raised.
            </summary>
            <param name="files">The files in the load balancer queue which have been synced currently.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeDeleteUserCustomProperty(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is deleted.
            </summary>
            <param name="id">ID of user custom property to be deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterDeleteUserCustomProperty(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is deleted.
            </summary>
            <param name="id">ID of user custom property that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeUpdateUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user custom property is edited.
            </summary>
            <param name="userCustomPropertyData">The user custom property to be edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterUpdateUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is edited.
            </summary>
            <param name="userCustomPropertyData">The user custom property that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeAddUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user custom property is added.
            </summary>
            <param name="userCustomPropertyData">The user custom property to be added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterAddUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is added.
            </summary>
            <param name="userCustomPropertyData">The user custom property that was added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeAdd(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is added.
            </summary>
            <param name="taxonomyData">Library item to be added.</param>
            <param name="eventArgs">Event arguments for event.</param>        
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterAdd(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is added.
            </summary>
            <param name="taxonomyData">Library item that was added.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeUpdate(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is updated.
            </summary>
            <param name="taxonomyData">Library item to be updated.</param>
            <param name="eventArgs">Event arguments for event.</param>       
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterUpdate(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is updated.
            </summary>
            <param name="taxonomyData">Library item that was updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is deleted.
            </summary>
            <param name="id">Id of library item to be deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is deleted.
            </summary>
            <param name="id">Id of library item that was deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocaleStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocaleStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocaleStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocaleStrategy.DetermineRequestedLocale(System.Web.HttpRequest,System.Web.HttpCookie,Ektron.Cms.Localization.LocaleData@,Ektron.Cms.BusinessObjects.Localization.ILocaleManager,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            Determines the locale given the HttpRequest and HttpCookie
            </summary>
            <summary>
            Strategy to determine the locale given the context, HttpRequest and HttpCookie
            </summary>
            <param name="request">The HttpRequest</param>
            <param name="cookie">The HttpCookie</param>
            <param name="requestedLocale">The selected locale or null if none determined, in which case, 
            unless cancelled, the default algorithm will be used.</param>
            <param name="sender">The instance of the ILocaleManager determining the requested locale</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocalizationObjectStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationObjectStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocalizationObjectStrategy class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationObjectStrategy.ContentLocalizationStateEventArgs.IsValid">
            <summary>
            Gets or sets the is valid flag indicating whether or not the custom criteria are valid.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocalizationStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocalizationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeImport(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a XLIFF import occurs. May be cancelled. OnAfterImport is always called, even if cancelled.
            </summary>
            <param name="xliffUrl">The path holding files to be imported.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetImportList(System.Collections.Generic.List{System.String},Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when the list of files to import is generated.
            To import more files, add them to the list.
            To prevent importing files, remove them from the list.
            </summary>
            <param name="fileNames">List of files to import</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetUnzippedFile(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called after a zip file is unzipped, and for each file present in the zip.
            </summary>
            <param name="fileNameAndPath">The file that is in the zip</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeValidateXliff(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before imported XLIFF is validated.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeMergeXliff(System.String,System.String,Ektron.Cms.Xslt.ArgumentList,System.Xml.XmlUrlResolver,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before imported XLIFF is merged with its skeleton.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="mergeXsltFilePath">The file path to the XSLT that performs the merge.</param>
            <param name="args">Arguments for the XSLT transform</param>
            <param name="skeletonResolver">Resolver to fetch the skeleton</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterMergeXliff(System.String,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after imported XLIFF is merged with its skeleton.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="translatedContent">The translated skeleton after merging.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeUpdate(System.String,System.String,System.Int32,System.Int32,System.DateTime,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before the content is updated in the database.
            </summary>
            <param name="fileName">The file name of the XLIFF document.</param>
            <param name="skeletonFileName">The file name of the skeleton document.</param>
            <param name="translatedLanguageID">The target language</param>
            <param name="originalLanguageID">The source language</param>
            <param name="dateModified">The date modified of the source object</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterUpdate(System.String,System.String,System.Int32,System.Int32,System.DateTime,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after the content is updated in the database.
            </summary>
            <param name="fileName">The file name of the XLIFF document.</param>
            <param name="skeletonFileName">The file name of the skeleton document.</param>
            <param name="translatedLanguageID">The target language</param>
            <param name="originalLanguageID">The source language</param>
            <param name="dateModified">The date modified of the source object</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterValidateXliff(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after imported XLIFF is validated.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterImport(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Always called when the import job is done, whether cancelled or not. The job id is provided in the eventArgs.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeExport(Ektron.Cms.Localization.LocalizationExportJob,System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a XLIFF export occurs. May be cancelled. OnAfterExport is always called, even if cancelled.
            </summary>
            <param name="exportJob">Parameters for the export process.</param>
            <param name="xliffPath">file path to the xliff file.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetExportList(Ektron.Cms.Localization.LocalizationExportJob,System.Collections.Generic.List{Ektron.Cms.Localization.LocalizableItem},Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when the list of items to export is generated.
            To export more items, add them to the list.
            To prevent exporting items, remove them from the list.
            </summary>
            <param name="exportJob">Parameters for the export process.</param>
            <param name="itemList">List of items to export</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeExportItem(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Localization.LocalizationState,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a CMS object is exported.
            </summary>
            <param name="item">The item being exported</param>
            <param name="locState">The localization state of the CMS object</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnCreateSkeleton(System.String@,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when an XLIFF skeleton is created, but before it is saved.
            </summary>
            <param name="fileName">The file name of the skeleton</param>
            <param name="skeleton">The skeleton document</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnCreateXliff(System.String@,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs)">
            <summary>
            Called when an XLIFF file is created from a skeleton, but before it is saved. One XLIFF file is created for all target languages.
            </summary>
            <param name="fileName">The file name of the XLIFF file</param>
            <param name="xliff">The XLIFF document</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterExportItem(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after a CMS object is exported.
            </summary>
            <param name="item">The item being exported</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeCompressFiles(System.Int32,System.Collections.Generic.List{Ektron.Cms.Localization.LocaleData},System.String,System.String@,System.Int64@,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before files are copied and compressed for each target locale. May be cancelled. OnAfterCompressFiles is always called, even if cancelled.
            </summary>
            <param name="sourceLanguageId">The source language</param>
            <param name="targetLocales">List of target languages</param>
            <param name="path">Directory path of the files to compress</param>
            <param name="xliffFileNameFormat">Format of the file names to compress</param>
            <param name="maxZipFileSize">Maximum size, in bytes, of the ZIP to create.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterCompressFiles(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after files are copied and compressed for each target locale.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeZipFiles(System.String,System.String[]@,System.String@,System.String@,System.Int64@,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            Called before files are zipped together.
            </summary>
            <param name="path">Directory path where the files to ZIP are stored.</param>
            <param name="fileNamePatterns">Pattern of file names to ZIP using "*" as wildcard</param>
            <param name="zipFilePath">Directory path where the ZIP file(s) are to be stored.</param>
            <param name="zipFileNameFormat">The name of the ZIP file to create with "{0}" in the name for multiple files</param>
            <param name="maxZipFileSize">Maximum size, in bytes, of the ZIP to create.</param>
            <param name="eventArgs">Event arguments, ObjectId is -1.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterZipFiles(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Called after files are zipped together.
            </summary>
            <param name="fileNames">List of files that were compressed in the ZIP files.</param>
            <param name="zipFileNames">List of ZIP files created.</param>
            <param name="filesPerZip">List of files in each ZIP file.</param>
            <param name="eventArgs">Event arguments, ObjectId is -1.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterExport(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Always called when the export job is done, whether cancelled or not. The job id is provided in the eventArgs.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.JobId">
            <summary>
            Gets localization job ID of the CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.ExceptionMessage">
            <summary>
            Gets or sets an exception message. Will result in an exception being thrown if the message is not empty.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs.JobId">
            <summary>
            Gets localization job ID of the CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.Skeleton">
            <summary>
            The skeleton document
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.SourceLocale">
            <summary>
            The source locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.TargetLocale">
            <summary>
            The target locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.SkeletonType">
            <summary>
            Gets type used in the Skeleton
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.TranslatedXliffFilePath">
            <summary>
            Gets the file name and path to the previous translated and imported XLIFF file or empty string if it doesn't exist.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MachineTranslationStrategy">
            <summary>
            Algorithm to immediately translate content
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.#ctor">
            <summary>
            Initializes a new instance of the MachineTranslationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.Translate(System.String@,Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs)">
            <summary>
            Translates the given content using machine translation.
            </summary>
            <param name="content">The source content to translate.</param>
            <param name="eventArgs">Arguments, including the source and target locales.</param>
            <remarks>Typically eventArgs.Locale.Tag.PrivateUseSubtag will be "mt"</remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs">
            <summary>
            Arguments, including the target pseudo-locale as the 'Locale' property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.#ctor(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Initializes a new instance of the MachineTranslationEventArgs class.
            </summary>
            <param name="sourceLocale">The source locale</param>
            <param name="targetLocale">The target locale</param>
            <param name="objectType">The CMS object type</param>
            <param name="objectId">The CMS object ID, or -1 if none</param>
            <param name="requestInformation">The request information</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.SourceLocale">
            <summary>
            Gets the source locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.TargetLocale">
            <summary>
            Gets the target locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PseudoLocalizationStrategy">
            <summary>
            "Pseudo-localizing is one technique for validating the translation-readiness of your software. 
            It allows you to run and test your software with strings that are distinctly non-English but still quite readable. 
            Lingering hard coded English strings are exposed. Logic dependencies on specific English values 
            become apparent. Dialog sizing problems are visible."
            http://www.codeproject.com/KB/cs/ploc.aspx
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the PseudoLocalizationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalize(System.String@,Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs)">
            <summary>
            Localizes the given content into a "pseudo" language to test translation-readiness.
            </summary>
            <param name="content">The source content to pseudo-localize.</param>
            <param name="eventArgs">Arguments, including the target pseudo-locale as the 'Locale' property.</param>
            <remarks>Typically eventArgs.Locale.Tag.PrivateUseSubtag will be "pseudo"</remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs">
            <summary>
            Arguments, including the target pseudo-locale as the 'Locale' property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.#ctor(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Initializes a new instance of the PseudoLocalizationEventArgs class.
            </summary>
            <param name="locale">The target pseudo-locale</param>
            <param name="objectType">The CMS object type</param>
            <param name="objectId">The CMS object ID, or -1 if none</param>
            <param name="requestInformation">The request information</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.Locale">
            <summary>
            Gets the target pseudo-locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageDataObject">The CmsMEssageData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageTypeStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageTypeData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageTypeStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageTypeData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageTypeDataObject">The CmsMessageTypeData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MetaDataStrategy">
            <summary>
            Metadata strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeAdded(Ektron.Cms.MetaTypeBaseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is added.
            </summary>
            <param name="metaType">The meta type that was added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeEdited(Ektron.Cms.MetaTypeBaseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is edited.
            </summary>
            <param name="metaType">The meta type that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeDeleted(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is deleted.
            </summary>
            <param name="metaTypeId">ID of meta type that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CollectionStrategy">
            <summary>
            Collection Strategy interface
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.OnAfterDeleteCollection(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a collection is deleted.
            </summary>
            <param name="id">ID of the collection that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.OnAfterUpdateCollection(Ektron.Cms.Organization.ContentCollectionData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a collection is edited
            </summary>
            <param name="collectionData">The collection data that was edited</param>
            <param name="eventArgs">Events args</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MenuStrategy">
            <summary>
            Menu strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MenuStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TaxonomyItemStrategy">
            <summary>
            Taxonomy item strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.OnAfterDeleteTaxonomyItem(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is deleted.
            </summary>
            <param name="id">ID of TaxonomyItem that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.OnAfterUpdateTaxonomyItem(Ektron.Cms.TaxonomyItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is edited.
            </summary>
            <param name="taxonomyItem">The TaxonomyItem that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TaxonomyStrategy">
            <summary>
            Base class for handling Taxonomy Strategy events.  To implement a strategy extension for taxonomy events, you must derive from ths class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAdd(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is added.
            </summary>
            <param name="taxonomyData">TaxonomyData to be added.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAdd(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is added.
            </summary>
            <param name="taxonomyData">TaxonomyData that was added.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is updated.
            </summary>
            <param name="taxonomyData">TaxonomyData to be updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is updated.
            </summary>
            <param name="taxonomyData">TaxonomyData that was updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is deleted.
            </summary>
            <param name="id">Id of taxonomy to be deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is deleted.
            </summary>
            <param name="id">Id of taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeCopy(System.Int64,System.Int64,System.Int32,System.Boolean,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is copied.
            </summary>
            <param name="sourceId">ID of source node</param>
            <param name="destinationId">ID of destination node</param>
            <param name="languageId">Taxonomy language Id</param>        
            <param name="deleteSource">Indicates whether the source is to be deleted</param>
            <param name="eventArgs">Event arguments for event</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterCopy(System.Int64,System.Int64,System.Int32,System.Boolean,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is copied.
            </summary>
            <param name="sourceId">ID of source node</param>
            <param name="newId">ID of new node</param>
            <param name="languageId">Taxonomy language Id</param>    
            <param name="deleteSource">Indicates whether the source is to be deleted</param>
            <param name="eventArgs">Event arguments for event</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAssignItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAssignItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAssignItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAssignItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeRemoveItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterRemoveItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeRemoveItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterRemoveItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PermissionStrategy">
            <summary>
            The PermissionStrategy is an abstract class describing a component capable of
            responding to permissions-related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.RoleStrategy">
            <summary>
            The RoleStrategy is an abstract class describing a component capable of
            responding to CMS Role -related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.DeviceBreakpointStrategy">
            <summary>
            The base class for pre-processing and post-processing of add, update and
            delete transactions of device breakpoints.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called after a device breakpoint is added.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Called after a device breakpoint is deleted.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called after a device breakpoint is updated.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called before a device breakpoint is added.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Called before a device breakpoint is deleted.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called before a device breakpoint is updated.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationAgentSettingStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationAgentData object is deleted.
            </summary>
            <param name="id">ID of NotificationAgentData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationAgentSettingStrategy.OnAfterUpdate(Ektron.Cms.Notifications.NotificationAgentData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationAgentData object is edited.
            </summary>
            <param name="notificationAgentData">The notificationAgentData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationPreferenceStrategy.OnAfterDeleteNotificationPreference(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationPreference is deleted.
            </summary>
            <param name="id">ID of notificationPreference that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationPreferenceStrategy.OnAfterUpdateNotificationPreference(Ektron.Cms.Notifications.NotificationPreferenceData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationPreference is edited.
            </summary>
            <param name="notificationPreferenceData">The notificationPreference that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserNotificationSettingStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a UserNotificationSettingData object is deleted.
            </summary>
            <param name="id">ID of UserNotificationSettingData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserNotificationSettingStrategy.OnAfterUpdate(Ektron.Cms.Notifications.UserNotificationSettingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a UserNotificationSettingData object is edited.
            </summary>
            <param name="userNotificationSettingData">The UserNotificationSettingData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskCategoryStrategy.OnAfterDeleteTaskCategory(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task category is deleted.
            </summary>
            <param name="id">ID of task category that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskCategoryStrategy.OnAfterUpdateTaskCategory(Ektron.Cms.TaskCategoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task category is edited.
            </summary>
            <param name="taskCategoryData">The task category that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskStrategy.OnAfterDeleteTask(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task is deleted.
            </summary>
            <param name="id">ID of task that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskStrategy.OnAfterUpdateTask(Ektron.Cms.TaskData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task is edited.
            </summary>
            <param name="taskData">The task that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TodoListStrategy">
            <summary>
            TodoList strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.OnAfterDeleteTodoList(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.OnAfterUpdateTodoList(Ektron.Cms.ToDo.TodoListData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="todoList">The TodoList that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterDeleteUserGroup(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is deleted.
            </summary>
            <param name="id">ID of user group that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterAddUserGroup(Ektron.Cms.UserGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is added.
            </summary>
            <param name="userGroupData">The user group that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterUpdateUserGroup(Ektron.Cms.UserGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is edited.
            </summary>
            <param name="userGroupData">The user group that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.UserStrategy">
            <summary>
            User Strategy Base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeAddUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is added
            </summary>
            <param name="userData">new user data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterAddUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            this method is called after a user is added
            </summary>
            <param name="userData">new user data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeDeleteUser(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is deleted
            </summary>
            <param name="Id">user id</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterDeleteUser(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is deleted
            </summary>
            <param name="Id">user id</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUpdateUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is updated
            </summary>
            <param name="userData">userdata</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUpdateUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user update
            </summary>
            <param name="userData">userdata</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeLogin(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is logged into the cms.
            </summary>
            <param name="userData">User Data representing user logging in.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterLogin(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is logged into the cms.
            </summary>
            <param name="userData">User Data representing user that has logged in.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeLogout(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is logged out of the cms.
            </summary>
            <param name="userData">User Data representing user that has logged out.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterLogout(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is logged out of the cms.
            </summary>
            <param name="userData">User Data representing user that has logged out.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterAddColleague(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after two users become colleagues.  There is no significance to the ordering of the users.
            </summary>
            <param name="userOneId">Id of the the first user in the colleague connection.</param>
            <param name="userTwoId">Id of the the second user in the colleague connection.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterDeleteColleague(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after two users' colleague relationship is deleted.  There is no significance to the ordering of the users.
            </summary>
            <param name="userOneId">Id of the the first user in the colleague connection.</param>
            <param name="userTwoId">Id of the the second user in the colleague connection.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterColleagueRequest(Ektron.Cms.Community.ActionRequestData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user recieves a colleague request.
            </summary>
            <param name="invitationData">invitationData</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUserAddInGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user add in to the Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUserAddInGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
             This method is called after a user added in the Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUserDeleteFromGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
             This method is called before a user delete from Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUserDeleteFromGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
              This method is called after a user deleted from Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.XmlConfigurationStrategy">
            <summary>
            Xml configuration strategy methods - base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterDeleteXmlConfiguration(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after an xml config was deleted
            </summary>
            <param name="id"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterPublishXmlConfiguration(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after publishing an xml config
            </summary>
            <param name="data">data</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterUpdateXmlConfiguration(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after an xml config update
            </summary>
            <param name="data">xmlconfig data</param>
            <param name="eventArgs">event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterUpdateXmlIndex(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after updating index fields (2nd screen) while updating smart forms.
            </summary>
            <param name="data">xmlconfig data</param>
            <param name="eventArgs">event args</param>
        </member>
        <member name="T:Ektron.Cms.Organization.ContentCollectionData">
            <summary>
            Represents a Cms Collection
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.ContentCollectionData.Validate">
            <summary>
            Validate this Collection
            </summary>
            <returns>true for valid data, false for invalid data</returns>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Id">
            <summary>
            Gets or sets the ID that identified this object uniquely
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Title">
            <summary>
            Gets or sets the Collection's Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Description">
            <summary>
            Gets or sets the Collection's Description
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Template">
            <summary>
            Gets or sets a template url for the items in the Collection, leave blank to use the items' quicklinks
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.IsApprovalRequired">
            <summary>
            Gets or sets a true or false value indicating whether approval is required for this Collection
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.FolderId">
            <summary>
            Path Folder Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Recursive">
            <summary>
            Gets or sets a true or false value indicating whether to include subfolders or not
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.UserId">
            <summary>
            Gets or sets the user id that represents the author of this Collection
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.DateCreated">
            <summary>
            Gets or sets the date this Collection was created
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.LastEditDate">
            <summary>
            Gets or sets the last Edit Date
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EditorLName">
            <summary>
            Gets or sets the Editor's Last Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EditorFName">
            <summary>
            Gets ot sets the Editor's First Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EnableReplication">
            <summary>
            Gets or sets a value indicating whether replication is enabled on this item
            (1=Enabled, 0=Disabled)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Status">
            <summary>
            Content Status:
            A-Approved O-Checked Out I-Checked In S-Submitted for Approval M-Marked for Deletion P-Pending Go Live Date T-Awaiting Completion of Associated Tasks D-Pending Deletion 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Published">
            <summary>
            Gets or sets a integer value that indicates whether the Collection is published or not (1=Published, 0=Not Published)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.DynamicReplicationMethod">
            <summary>
            Gets or sets a value representing the dynamic replication method to utilize
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.CollectionIdentifier">
            <summary>
            Data Identifier for a Collection.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier">
            <summary>
            Data Identifier for a content data entity. Represents primary key.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier.Equals(Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier)">
            <summary>
            Determine equality
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier.ContentID">
            <summary>
            The row identifier for the entity
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.ContentDataIdentifier.LanguageID">
            <summary>
            Language ID for given content entity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentRevisionCriteria`1.ReturnMetadata">
            <summary>
            Gets or sets the ReturnMetadata flag. If true, content metadata will be included in result sets.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.DateInserted">
            <summary>
            Date history was made.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.HistoryId">
            <summary>
            Long, history ID.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.ContentId">
            <summary>
            Long, Content ID.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.DateCreated">
            <summary>
            Long, Date Content Created.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.FolderId">
            <summary>
            Long, Folder Content Resides in at time out history insert.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.ContentRevisionProperty.LanguageId">
            <summary>
            Int, the content language.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FavoriteItemData">
            <summary>
            Data class representing a Favorite in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.Id">
            <summary>
            Gets or sets the ID of the CMS Data object.  This property is inherited from the CMSData base class 
            and is not applicable to FavoriteItemData.  FavoriteItemData does not have a unique ID..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.TaxonomyId">
            <summary>
            Gets or sets the ID of the Taxonomy Node this favorite Item saved in.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.ObjectType">
            <summary>
            Gets or sets the Favorite type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.ObjectId">
            <summary>
            Gets or sets the Id of the favorite object.  This would be the content id if the favority type is Content.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.Title">
            <summary>
            Gets or sets the Title of the favorite.  If its a content favorite, this is the content title and cannot be changed.   
            If its a URL favorite, then it can be set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.Url">
            <summary>
            Gets or sets the URL of the favorite.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.Description">
            <summary>
            Gets or sets the description of the favorite.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteItemData.UserId">
            <summary>
            Gets or setsa the User ID whom this favorite Item belongs to.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FlagCriteria">
            <summary>
            Criteria object to retreiving FlagDataObjects from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentCollectionFilter">
            <summary>
            Specialized criteria filter object for defining Collection filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentCollectionFilterGroup">
            <summary>
            Specialized criteria filter group object for defining Collection filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentCollectionCriteria">
            <summary>
            Specialized content criteria object that also supports defining filters based on content Collection.
            </summary> 
        </member>
        <member name="M:Ektron.Cms.Content.ContentCollectionCriteria.AddFilter(Ektron.Cms.Common.ContentCollectionProperty,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Filter to the criteria for filtering based upon a content collection.
            </summary>
            <param name="collectionName">Name of the collection to filter on.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Content.ContentCollectionCriteria.AddFilter(System.String)">
            <summary>
            Adds a Filter to the criteria for filtering based upon a content collection.
            </summary>
            <param name="collectionName">Name of the collection to filter on.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Content.ContentCollectionCriteria.AddFilter(System.Int64)">
            <summary>
            Adds a Filter to the criteria for filtering based upon a content collection.
            </summary> 
            <param name="collectionId">Id of the collection to filte ron.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Content.ContentCollectionCriteria.GetColumnMap">
            <summary>
            used to specify the desired columns to retrieve from the CMS nav_tbl table.
            </summary>
            <returns>a dictionary object populated with the fields of interest</returns>
        </member>
        <member name="P:Ektron.Cms.Content.ContentCollectionCriteria.OrderByCollectionOrder">
            <summary>
            If true, will disregard OrderBy property and instead use predetermined content collection order.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentMetadataProperty">
            <summary>
            Enum defining properties for ContentMetadataCriteria.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentMetadataFilter">
            <summary>
            Specialized criteria filter object for defining metadata filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentMetadataFilterGroup">
            <summary>
            Specialized criteria filter group object for defining metadata filters for retreiving content.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.ContentMetadataFilterGroup.CreateFilterGroup(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Creates a ContentMetadataFilterGroup using the supplied Metadata Type name and operator\values.
            </summary>
            <param name="metadataTypeName"></param>
            <param name="filterOperator"></param>
            <param name="metadataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Content.ContentMetadataFilterGroup.CreateFilterGroup(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Creates a ContentMetadataFilterGroup using the supplied Metadata Type Id and operator\values.
            </summary>
            <param name="metadataTypeId"></param>
            <param name="filterOperator"></param>
            <param name="metadataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Content.ContentMetadataCriteria">
            <summary>
            Content Criteria object that also supports defining filters based on Content Metadata.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.ContentMetadataCriteria.AddFilter(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a metadata based filter to the criteria object.
            </summary>
            <param name="metadataTypeName">Name of metadata type to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the metadata.</param>
            <returns>The ContentMetadataFilterGroup that was created.</returns>
        </member>
        <member name="M:Ektron.Cms.Content.ContentMetadataCriteria.AddFilter(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a metadata based filter to the criteria object.
            </summary>
            <param name="metadataTypeId">Id of metadata type to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the metadata.</param>
            <returns>The ContentMetadataFilterGroup that was created.</returns>
        </member>
        <member name="T:Ektron.Cms.Content.ContentTaxonomyProperty">
            <summary>
            Enum defining properties for ContentTaxonomyCriteria.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentTaxonomyFilter">
            <summary>
            Specialized criteria filter object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentTaxonomyFilterGroup">
            <summary>
            Specialized criteria filter group object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentTaxonomyCriteria">
            <summary>
            Specialized content criteria object that also supports defining filters based on content taxonomy.
            </summary> 
        </member>
        <member name="T:Ektron.Cms.ObjectFlagData">
            <summary>
            Data class representing an instanc eof a user Flagging an item (usually content) in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.Id">
            <summary>
            Gets the unique ID of this Object Flag Instance once saved.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.FlagDefinitionId">
            <summary>
            Gets the ID of the Flag Definition used by this flag instance.  When saving this value is not neccessary and will be derived from FlagOptionId.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.FlagOptionId">
            <summary>
            Gets or sets the ID of the Flag Definition Option that is being chosen for this Flag instance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.Date">
            <summary>
            Gets or sets the Date the object was flagged.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.Comment">
            <summary>
            Gets or sets the comment associated with this flag instance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.VisitorID">
            <summary>
            Gets or sets the ID of the non-logged in user that performed this flag. This property is only used for users that are not logged in.
            The CMS trackes these users by a unique visitor ID stored in a cookie and may overwrite value of this property.
            Logged in users should populate the UserId property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.UserId">
            <summary>
            Gets or sets the Id of the logged in user who is creting this flag instance.  If the user is not logged in, use visitorId.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.ObjectId">
            <summary>
            Gets or sets the ID of the object that is being flagged.  This property correlates directly with ObjectType.
            For Example, if ObjectType == Content, then ObjectId would be the Content ID being flagged.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.ObjectType">
            <summary>
            Gets or sets the Type of Object being flagged.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ObjectFlagData.ObjectLanguageId">
            <summary>
            gets or sets the Id of the Language of the object being flagged.
            </summary>
        </member>
        <member name="M:Ektron.Cms.ContentMetaData.Validate">
            <summary>
            validate this instance
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.DataType">
            <summary>
            Gets or sets the DataType used by this metadata definition.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.DefaultValue">
            <summary>
            Gets or sets the default value for this metadata definition.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.Type">
            <summary>
            The type of the metadata definition
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.IsEditable">
            <summary>
            Gets or sets the Editable flag.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.IsSearchAllowed">
            <summary>
            Gets or sets the SearchAllowed flag.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.IsDisplayable">
            <summary>
            Gets or sets the Displayable flag.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.MetaDataObjectType">
            <summary>
            Type of object that this metadata applies to
            </summary>
        </member>
        <member name="P:Ektron.Cms.ContentMetaData.TagType">
            <summary>
            Tag Type 
            0=EkConstants.MetaTagType_Html,
            1=EkConstants.MetaTagType_Meta,
            2=EkConstants.MetaTagType_Collection, 
            3=EkConstants.MetaTagType_ListSummary,
            4=EkContansts.MetaTagType_Content,
            5=EkConstants.MetaTagType_Image,
            6=EkConstants.MetaTagType_HyperLink,
            7=EkConstants.MetaTagType_File,
            8=EkConstants.MetaTagType_Menu,
            9=EkConstants.MetaTagType_User,
            100=EkConstants.MetaTagType_Searchable
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CannotCreateVarianceFromNonRecurrence">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a non-recurring event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CannotCreateVarianceFromVariance">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a variance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Country_IdRequired">
            <summary>
              Looks up a localized string similar to A valid non negative value is required for Country Id..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Country_LongIso3Chars">
            <summary>
              Looks up a localized string similar to The Long Iso Code property must be 3 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Country_NameRequired">
            <summary>
              Looks up a localized string similar to The Name property is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Country_ShortIso2Chars">
            <summary>
              Looks up a localized string similar to The Short Iso Code property must be 2 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CountryDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CountryDelete_RegionExist">
            <summary>
              Looks up a localized string similar to Regions exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Coupon_CodeRequired">
            <summary>
              Looks up a localized string similar to A Coupon code is required for saving..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Coupon_DiscountGreaterThan100">
            <summary>
              Looks up a localized string similar to A Coupon Discount should not be greater than 100 Percentage..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Coupon_DiscountGreaterThanMinimumAmount">
            <summary>
              Looks up a localized string similar to A Coupon Discount should not be greater than MinimumValue..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Coupon_DiscountRequired">
            <summary>
              Looks up a localized string similar to A Discount greater than 0 is required for  a coupon..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CurrencyPricing_CurrencyIdRequired">
            <summary>
              Looks up a localized string similar to CurrencyId is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CurrencyPricing_ListPriceRequired">
            <summary>
              Looks up a localized string similar to ListPrice is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.CurrencyPricing_SingleTierRequired">
            <summary>
              Looks up a localized string similar to The TierPrice for the quantity of 1 is required for CurrencyPricing..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.EventRecurrence_InvalidDate">
            <summary>
              Looks up a localized string similar to Invalid value supplied for date.  Must be between 1 and 31 or be = -1..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.EventRecurrence_InvalidDayOfMonth">
            <summary>
              Looks up a localized string similar to Invalid value supplied for dayOfMonth.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.EventRecurrence_InvalidMonthOfYear">
            <summary>
              Looks up a localized string similar to monthOfYear must be between 1 and 12..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.EventRecurrence_MultipleLessThanZero">
            <summary>
              Looks up a localized string similar to recurrenceMultiple cannot be less than 0..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.ExchangeRate_BaseCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Base Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.ExchangeRate_EffectiveDateRequired">
            <summary>
              Looks up a localized string similar to The Effective date is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.ExchangeRate_ExchangeCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Exchange Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.ExchangeRate_RateRequired">
            <summary>
              Looks up a localized string similar to The Rate is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.InvalidOccurrenceStartUtc">
            <summary>
              Looks up a localized string similar to The supplied OccurrenceStartUtc is not a valid start time for this event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.PasswordHistory_HashRequired">
            <summary>
              Looks up a localized string similar to A password hash is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.PasswordHistory_UserIdRequired">
            <summary>
              Looks up a localized string similar to A user id is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Region_CodeRequired">
            <summary>
              Looks up a localized string similar to The Region code is required and must be two characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Region_CountryId">
            <summary>
              Looks up a localized string similar to The Region&apos;s Country Id is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.Region_NameRequired">
            <summary>
              Looks up a localized string similar to The Region Name is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.RegionDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this Region.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.TierPricing_PriceCannotBenegative">
            <summary>
              Looks up a localized string similar to The SalePrice cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.TierPricing_QuantityNegative">
            <summary>
              Looks up a localized string similar to The Quantity cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebCalendar_InvalidFolderType">
            <summary>
              Looks up a localized string similar to The WebCalendar must have a FolderType of EkEnumeration.FolderType.Calendar..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebCalendar_NameRequired">
            <summary>
              Looks up a localized string similar to The WebCalendar requires a name..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_InvalidOccurrenceDate">
            <summary>
              Looks up a localized string similar to The OccurrenceStart supplied is invalid for the event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_ReccurrenceEndLessThanStart">
            <summary>
              Looks up a localized string similar to The Event Recurrence End date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_RecurrenceStartMustEqualEventStart">
            <summary>
              Looks up a localized string similar to Recurrence Start and Event Start must be equal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_RecurringMethodException">
            <summary>
              Looks up a localized string similar to This method is only applicable to recurring events..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_StartGreaterThanEnd">
            <summary>
              Looks up a localized string similar to start date is greater than end date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Errors.WebEvent_StartLessThanEnd">
            <summary>
              Looks up a localized string similar to The EventEnd date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FolderId">
            <summary>
            Gets or sets the FolderId for the FolderRequest data object. 
            </summary>
            <value></value>
            <returns>An existing folder's integer ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FolderName">
            <summary>
            Gets or sets the FolderName for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's name.</returns>
            <remarks>Required Field</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FolderDescription">
            <summary>
            Gets or sets the folder description for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's description.</returns>
            <remarks>Required Field</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.ParentId">
            <summary>
            Gets or sets the folder's parent folder ID for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's parent folder ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.TemplateFileName">
            <summary>
            Gets or sets the folder's template file for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's template name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.StyleSheet">
            <summary>
            Gets or sets the folder's style sheet for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's style sheet name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.SiteMapPathInherit">
            <summary>
            Gets or sets whether the folder's SiteMap path is inherited for the FolderRequest data object. <para></para>
            <b>True</b> = SiteMap path is inherited. <para></para>
            <b>False</b> = SiteMap path is not inherited.
            </summary>
            <value></value>
            <returns>True or False depending whether an existing folder's SiteMap path is inherited or not.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.SiteMapPath">
            <summary>
            Gets or sets a folder's SiteMap path for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's SiteMap path.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.ImageDirectory">
            <summary>
            Gets or sets the physical path to the folder's image directory for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's image directory.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FileDirectory">
            <summary>
            Gets or sets the physical path to the folder's file directory for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An existing folder's file directory.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.DomainStaging">
            <summary>
            Gets or sets the staging domain for the folder when the folder is a domain folder and the site is a staging site. This is for the FolderRequest data object. 
            </summary>
            <value></value>
            <returns>The folder's existing staging site domain.</returns>
            <remarks>Example: dev.ektron.com</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.DomainProduction">
            <summary>
            Gets or sets the production domain for the folder when the folder is a domain folder and the site is a production site. This is for the FolderRequest data object. 
            </summary>
            <value></value>
            <returns>The folder's existing production site domain.</returns>
            <remarks>Example: www.ektron.com</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FolderType">
            <summary>
            Gets or sets the folder type of the folder. This enumeration is available at Ektron.Cms.Common.EkEnumeration.FolderType. <para></para>
            Available Types:
              * <b>0</b> = Content - a content folder that contains assets, documents and HTML content.
              * <b>1</b> = Blog - designates the folder for use with the Blogging feature.
              * <b>2</b> = Domain - designates the folder as a domain folder when using the Multi-site feature.
              * <b>3</b> = Discussion Board - designates the folder for use as a Threaded Discussion folder.
              * <b>4</b> = Discussion Forum - a subfolder of the Threaded Discussion folder.
              * <b>5</b> = Root - Specifies a folder as root folder. This option is not available.
              * <b>6</b> = Community - Membership users can add and edit content contained in these folders.
            </summary>
            <value></value>
            <returns>The integer value of the folder type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.IsDomainFolder">
            <summary>
            Gets or sets whether the folder is a domain folder for the FolderRequest data object. <para></para>
            <b>True</b> = designate a folder as a domain folder. <para></para>
            <b>False</b> = folder is not a domain folder.
            </summary>
            <value></value>
            <returns>Returns True if the folder is a domain folder.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.XmlInherited">
            <summary>
            Gets or sets whether the XML configuration for the folder is inherited from the parent folder. This is for the FolderRequest data object. <para></para>
            <b>True</b> = inherit the XML configuration from the parent folder. <para></para>
            <b>False</b> = Do not inherit the XML configuration from the parent folder.
            </summary>
            <value></value>
            <returns>Returns True if the XML configuration is inherited from the parent folder.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.EnableReplication">
            <summary>
            Gets or sets whether the folder is replicated during Quick Deploy. This is for the FolderRequest data object.<para></para>
            <b>True</b> = replicate the folder during Quick Deploy. <para></para>
            <b>False</b> = Do not replicate the folder during Quick Deploy.
            </summary>
            <value></value>
            <returns>Returns True if the folder is replicated during Quick Deploy.</returns>
            <remarks>This property is used with the Quick Deploy feature in CMS400.NET. It does not affect Site Replication.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.PublishActive">
            <summary>
            Gets or sets whether assets in the folder are published in another format. 
            It also determines in which format the assets are published. For example, HTML or PDF. This is for the FolderRequest data object.
              * <b>PublishPdfActive</b> = publish asset as a PDF.<para></para>
              * <b>PublishHtmlActive</b> = publish asset as HTML.
              * <b>""</b> (Empty)  - assets in the folder are not published.
            </summary>
            <value></value>
            <returns>A string based on whether to publish contents as HTML, PDF or not at all.
            </returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.XmlConfiguration">
            <summary>
            Gets or sets the XML configuration for the folder. This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>The existing XML configuration for the folder.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.BreakInheritButton">
            <summary>
            Gets or sets whether to break the folder's permission inheritance for the FolderRequest data object.<para></para>
            <b>True</b> = break a folder's permission inheritance. <para></para>
            <b>False</b> = Do not break a folder's permission inheritance.
            </summary>
            <value></value>
            <returns>Returns True if the folder's permission inheritance is broken.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FolderCfldAssignments">
            <summary>
            Gets or set a list of metadata assigned to the folder.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.SubscriptionProperties">
            <summary>
            Gets or sets the folder's Subscriptions properties for the FolderRequest data object.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.suppressNotification">
            <summary>
            Gets or sets whether to disable Web alerts.  This is for the FolderRequest data object.<para></para>
            <b>True</b> = suppress Web Alert notifications. <para></para>
            <b>False</b> = allow Web Alert notifications.
            </summary>
            <value>True = suppress Web Alert notifications. <para></para>
            False = allow Web Alert notifications.</value>
            Default = False, to override this use the BreakInheritance property of the FolderRequest.SubscriptionProperties object (set it to True).
            <returns></returns>
            <remarks>Boolean value. If true, suppress Web Alert notifications. Otherwise, false.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.ContentSubAssignments">
            <summary>
            Gets or sets the folder's content subscription assignments.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.MetaInherited">
            <summary>
            Gets or sets whether the folder inherits metadata from another folder. The folder ID must be specified in MetaInheritedFrom property.
              * <b>1</b> = inherits metadata from a folder.
              * <b>0</b> = does not inherit metadata from a folder.
            </summary>
            <value></value>
            <returns>An integer value representing whether the folder inherits metadata from another folder.</returns>
            <remarks>If set to true, the folder ID must be specified in MetaInheritedFrom property.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.MetaInheritedFrom">
            <summary>
            Gets or Sets the folder ID from which metadata is inherited.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An integer value representing the folder ID</returns>
            <remarks>InheritMetadata must be set to 1, otherwise it will be ignored.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.TaxonomyInherited">
            <summary>
            Set the property to true to inherit taxonomy from a folder. The folder ID must be specified in TaxonomyInheritedFrom property. 
             This is for the FolderRequest data object. <para></para>
            <b>1</b> = this folder inherits taxonomy from a folder.<para></para>
            <b>0</b> = this folder does not inherit taxonomy from a folder.
            </summary>
            <value></value>
            <returns>An integer value representing whether the folder inherits taxonomy from a folder.</returns>
            <remarks>If set to true, the folder ID must be specified in TaxonomyInheritedFrom property.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.TaxonomyInheritedFrom">
            <summary>
            Gets or sets the numeric folder ID from which taxonomy is inherited.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An integer representing the folder ID from which taxonomy is inherited.</returns>
            <remarks>The TaxonomyInherited property must be set to 1 or True, otherwise it will be ignored.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FlagInherited">
            <summary>
            Set the property to true to inherit flag from a folder. The folder ID must be specified in flagInheritedFrom property. 
             This is for the FolderRequest data object. <para></para>
            <b>1</b> = this folder inherits flag from a folder.<para></para>
            <b>0</b> = this folder does not inherit flag from a folder.
            </summary>
            <value></value>
            <returns>An integer value representing whether the folder inherits flag from a folder.</returns>
            <remarks>If set to true, the folder ID must be specified in flagInheritedFrom property.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FlagInheritedFrom">
            <summary>
            Gets or sets the numeric folder ID from which flag is inherited.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>An integer representing the folder ID from which flag is inherited.</returns>
            <remarks>The flagInherited property must be set to 1 or True, otherwise it will be ignored.</remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.CategoryRequired">
            <summary>
            Flag to indicate if a category selection is required while adding/editing content.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>Boolean value. If true, a category selection is required. Otherwise, false</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.TaxonomyIdList">
            <summary>
            Gets or sets a list of taxonomy IDs values separated by comma.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>Comma separated list of taxonomy IDs.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.FlagDefIdList">
            <summary>
            Gets or sets a list of flag definition IDs values separated by comma.  This is for the FolderRequest data object.
            </summary>
            <value></value>
            <returns>Comma separated list of flag definition IDs.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.ByPassMetadataUpateforFolder">
            <summary>
            Used only for folders hidden in workarea, if this is set to true ActivateMetadataToFolder is not called.
            <b>True</b> = Do not call ActivateMetadataToFolder. <para></para>
            <b>False</b> = Call ActivateMetadataToFolder. <para></para>
            </summary>
            <value></value>
            <returns>True or False depending on whether to by pass calling ActivateMetadataToFolder</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.AliasInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the alias is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The aliasinherited property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderRequest.AliasInherited">
            <summary> 
            Gets or sets whether alias is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = alias is inherited from the parent folder.<para></para> 
            <b>False</b> = alias is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if alias is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderRequest.AliasRequired">
            <summary> 
            Gets or sets whether force aliasing selection is required when creating or editing content. This is for the FolderData object.<para></para> 
            <b>True</b> = force aliasing is required when creating or editing content.<para></para> 
            <b>False</b> = force aliasing is not required when creating or editing content. 
            </summary> 
            <value></value> 
            <returns>Returns true if a force aliasing is required when creating of publishing content.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.IsContentSearchableInheritedFrom">
            <summary> 
            Gets or sets the ID of the parent folder from which the IsContentSearchable is inherited. This is for the FolderData object. 
            </summary> 
            <value></value> 
            <returns>The integer ID of the parent folder.</returns> 
            <remarks>The IsContentSearchable property must be set to True, otherwise it will be ignored.</remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderRequest.IsContentSearchableInherited">
            <summary> 
            Gets or sets whether IsContentSearchable is inherited from the parent folder. This is for the FolderData object.<para></para> 
            <b>True</b> = IsContentSearchable is inherited from the parent folder.<para></para> 
            <b>False</b> = IsContentSearchable is not inherited from the parent folder. 
            </summary> 
            <value></value> 
            <returns>Returns true if IsContentSearchable is inherited from the parent folder.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.FolderRequest.IscontentSearchable">
            <summary> 
            Gets or sets whether force ContentSearchable selection is required when creating or editing content. This is for the FolderData object.<para></para> 
            <b>True</b> = force ContentSearchable is required when creating or editing content.<para></para> 
            <b>False</b> = force ContentSearchable is not required when creating or editing content. 
            </summary> 
            <value></value> 
            <returns>Returns true if a force ContentSearchable is required when creating of publishing content.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.DisplaySettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.DisplaySettingsInheritedFrom">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ektron.Cms.FolderRequest.IsDisplaySettingsInherited">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.FolderDataIdentifier">
            <summary>
            Data Identifier for a content data entity. Represents primary key.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.FolderDataIdentifier.ID">
            <summary>
            The row identifier for the entity
            </summary>
        </member>
        <member name="T:Ektron.Cms.FormData">
            <summary>
            Describes a form design.<para></para>
            Declaration Example:<para></para>
            <c>Dim formItem As Ektron.Cms.FormData</c>
            <example>
            <code>
            Dim formApi As New Ektron.Cms.Content.Form
            Dim formItem As Ektron.Cms.FormData
            formItem = formApi.GetForm(CInt(2))
            </code>
            </example>
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.Description">
            <summary>
            Gets or sets a description of the form. The description must be 255 characters or less. 
            </summary>
            <value></value>
            <remarks>
            The string should be plain text. HTML tags should not be used.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.LimitSubmissions">
            <summary>
            Gets or sets if the form is allowed a limited number of submissions.  
            </summary>
            <remarks>If true, NumberOfSubmissions must be set.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.StoreDataTo">
            <summary>
            Specifies how the data should be processed. Valid values include:
              * <b>"db"</b>     submitted data should be stored in the database.
              * <b>"email"</b>  submitted data should be included in an email sent to the configured address(es). 
              * <b>"both"</b>   submitted data should stored in the database AND sent in an email.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.Autofill">
            <summary>
            Specifies whether the form data should be automatically filled if the user is known 
            and has previously entered data for this form.
            </summary>
            <value></value>
            <returns>True if form data should be automatically filled. False if the form should always be blank.</returns>
            <remarks>Requires that data be stored in the database.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.MailTo">
            <summary>
            Gets or sets the email address(es) to send an email to when form data is submitted. 
            Multiple email addresses should be separated by semicolons (";").
            </summary>
            <value></value>
            <remarks>
            Applies only when StoreDataTo is "email" or "both".
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.MailFrom">
            <summary>
            Gets or sets the email address assigned as the sender when email is sent upon
            submittal of form data.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.MailSubject">
            <summary>
            Gets or sets the subject of the email sent when form data is submitted.
            Maximum length is 128 characters.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.MailPreamble">
            <summary>
            Gets or sets the text that precedes the submitted data in the body of the email 
            sent when form data is submitted. Maximum length is 128 characters.
            </summary>
            <value></value>
            <remarks>
            The string should be plain text. HTML tags should not be used.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.MailCc">
            <summary>
            Gets or sets the email address(es) to copy an email to when form data is submitted.
            Multiple email addresses should be separated by semicolons (";").
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.SendXmlPacket">
            <summary>
            Gets or sets whether the submitted form data should be
            emailed as well-formed XML data.
              * <b>True</b> - formats the data by making each field name a tag around each value. 
              * <b>False</b> - sends the data without consideration whether it is well-formed XML.
            </summary>
            <value></value>
            <remarks>
            The XML structure of the form data submitted is:
            <pre>
            &lt;cmsMail&gt;
                  &lt;FormTitle&gt;This is the Title&lt;/FormTitle&gt;
                  &lt;FormDescription&gt;This is the description.&lt;/FormDescription&gt;
                  &lt;date&gt;7/11/2005 5:24:58 PM&lt;/date&gt;
                  &lt;MailTo&gt;&lt;/MailTo&gt;
                  &lt;MailFrom&gt;&lt;/MailFrom&gt;
                  &lt;MailCc&gt;&lt;/MailCc&gt;
                  &lt;MailSubject&gt;&lt;/MailSubject&gt;
                  &lt;MailPreamble&gt;&lt;/MailPreamble&gt;
                  &lt;Data&gt;
                     &lt;Field1&gt;Value of Field 1&lt;/Field1&gt;
                     &lt;Field2&gt;Value of Field 2&lt;/Field2&gt;
                     &lt;Field3&gt;Value of Field 3&lt;/Field3&gt;
                  &lt;/Data&gt;
            &lt;/cmsMail&gt;
            </pre>
            <b>Note:</b> The &lt;date&gt; is NOT ISO 8601. It's format is
            dependent on the web server. 
            </remarks>                                                                   
        </member>
        <member name="P:Ektron.Cms.FormData.Validation">
            <summary>
            Gets or sets the form's validation information as an array of FormValidationData.
            </summary>
            <value></value>
            <returns>Ektron.Cms.FormValidationData()</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.FormData.PollRevision">
            <summary>
            Gets or sets the revision number of the poll as a string.
            </summary>
            <value></value>
            <returns>string</returns>
            <remarks>It is used in the browser cookie when users load the poll on a web page.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.FormDataID">
            <summary>
            Gets or sets the numeric ID for the form data.
            </summary>
            <value></value>
            <remarks>
            A value of -1 means the ID is undefined.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.FormId">
            <summary>
            Gets and sets the ID of the form associated with this submitted form data.
            </summary>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.DateSubmitted">
            <summary>
            Gets or sets the date the data in the DataItems() array was submitted.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.UserId">
            <summary>
            Gets or sets the user ID of the person who submitted the data. A value of 0 means anonymous.
            </summary>
            <value></value>
            <remarks>UserId and UserInfo are not kept synchronized in this class.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.UserInfo">
            <summary>
            Gets or sets the user information as an Ektron.Cms.UserData object.
            </summary>
            <value></value>
            <remarks>UserId and UserInfo are not kept synchronized in this class.</remarks>
        </member>
        <member name="P:Ektron.Cms.FormSubmittedData.DataItems">
            <summary>
            Gets or sets the array of the data associated with each field defined in the form.
            </summary>
            <value></value>
            <remarks>
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Organization.MenuBaseData">
            <summary>
            Abstract base class for all menu and menu item types.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.MenuBaseData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.MenuBaseData"/> class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Type">
            <summary>
            Gets the EkEnumeration.MenuItemType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Href">
            <summary>
            Gets or sets the link for the menu item.  If this a content or library item, teh CMS will retreive that items link.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Target">
            <summary>
            Gets or sets the target of this menu items link.  Values could be _blank, _self, _parent, _top or the name of a frame or window.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.AncestorId">
            <summary>
            Gets or sets the Id of the root menu in the current menu tree.  For root menus, the Ancestor ID and ID will be the same.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.ParentId">
            <summary>
            Gets or sets the parent id.
            </summary>
            <value>
            The parent id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Description">
            <summary>
            Gets or sets the description of the current menu or menu item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Ordinal">
            <summary>
            Gets or sets the ordinal location of the menu item in relation to it's siblings.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.Items">
            <summary>
            Gets or sets the Menu's MenuItemData in an Items collection.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.ImagePath">
            <summary>
            Gets or sets the image path.
            </summary>
            <value>
            The image path.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuBaseData.ImageOverride">
            <summary>
            Gets or sets a value indicating whether [image override].
            </summary>
            <value>
              <c>true</c> if [image override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.IMenuData">
            <summary>
            IMenuData
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.AncestorId">
            <summary>
            Gets or sets the ancestor id.
            </summary>
            <value>
            The ancestor id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.ParentId">
            <summary>
            Gets or sets the ID of the parent menu.  Root menus will have a parent ID of 0.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Template">
            <summary>
            Gets or sets the template associated with this menu.  The template can be used to determine where content items in this menu are displayed.  
            For example, content items can be linked to this template from the menu instead of using their quicklinks.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.FolderId">
            <summary>
            Gets or sets the Folder ID for a menu defined for a Folder.  This property only applicable for root Menu Types.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.AssociatedFolders">
            <summary>
            Gets or sets the list of associated folder IDs for this menu or submenu.  
            Associated folders are used by Flex menus to determine the users currently location when browsing the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.AssociatedTemplates">
            <summary>
            Gets or sets the list of associated template IDs for this menu or submenu.  
            Associated templates are used by Flex menus to determine the users currently location when browsing the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Href">
            <summary>
            Gets or sets the href.
            </summary>
            <value>
            The href.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.ImagePath">
            <summary>
            Gets or sets the image path.
            </summary>
            <value>
            The image path.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.ImageOverride">
            <summary>
            Gets or sets a value indicating whether [image override].
            </summary>
            <value>
              <c>true</c> if [image override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Items">
            <summary>
            Gets or sets the Menu's MenuItemData in an Items collection.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuData.Type">
            <summary>
            Gets the EkEnumeration.MenuItemType.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Organization.MenuData">
            <summary>
            Data class representing a Menu in the CMS.  This can be either a root menu or a sub menu.  To define Menu Items, use MenuItemData or one of its derivatives like ContentMenuItemData.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.MenuData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.MenuData"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.MenuData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.MenuData"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.ParentId">
            <summary>
            Gets or sets the ID of the parent menu.  Root menus will have a parent ID of 0.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.Template">
            <summary>
            Gets or sets the template associated with this menu.  The template can be used to determine where content items in this menu are displayed.  
            For example, content items can be linked to this template from the menu instead of using their quicklinks.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.FolderId">
            <summary>
            Gets or sets the Folder ID for a menu defined for a Folder.  This property only applicable for root Menu Types.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.AssociatedFolders">
            <summary>
            Gets or sets the list of associated folder IDs for this menu or submenu.  
            Associated folders are used by Flex menus to determine the users currently location when browsing the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.AssociatedTemplates">
            <summary>
            Gets or sets the list of associated template IDs for this menu or submenu.  
            Associated templates are used by Flex menus to determine the users currently location when browsing the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.ImagePath">
            <summary>
            Gets or sets the image path.
            </summary>
            <value>
            The image path.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuData.ImageOverride">
            <summary>
            Gets or sets a value indicating whether [image override].
            </summary>
            <value>
              <c>true</c> if [image override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.IMenuItemData">
            <summary>
            IMenuItemData
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.ItemId">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Type">
            <summary>
            Gets the EkEnumeration.MenuItemType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Href">
            <summary>
            Gets or sets the link for the menu item.  If this a content or library item, teh CMS will retreive that items link.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Target">
            <summary>
            Gets or sets the target of this menu items link.  Values could be _blank, _self, _parent, _top or the name of a frame or window.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.AncestorId">
            <summary>
            Gets or sets the Id of the root menu in the current menu tree.  For root menus, the Ancestor ID and ID will be the same.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.ParentId">
            <summary>
            Gets or sets the parent id.
            </summary>
            <value>
            The parent id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Description">
            <summary>
            Gets or sets the description of the current menu or menu item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Ordinal">
            <summary>
            Gets or sets the ordinal location of the menu item in relation to it's siblings.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Items">
            <summary>
            Gets or sets the Menu's MenuItemData in an Items collection.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.Id">
            <summary>
            Gets or sets the ID of this data object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.ImagePath">
            <summary>
            Gets or sets the image path.
            </summary>
            <value>
            The image path.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.IMenuItemData.ImageOverride">
            <summary>
            Gets or sets a value indicating whether [image override].
            </summary>
            <value>
              <c>true</c> if [image override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.MenuItemData">
            <summary>
            MenuItemData class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuItemData.ItemId">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.MenuItemData.ParentId">
            <summary>
            Gets or sets the parent id.
            </summary>
            <value>
            The parent id.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.SubMenuData">
            <summary>
            SubMenuData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.SubMenuData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.SubMenuData"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.SubMenuData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.SubMenuData"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="parentId">The parent id.</param>
        </member>
        <member name="P:Ektron.Cms.Organization.SubMenuData.ItemId">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="P:Ektron.Cms.Organization.SubMenuData.ParentId">
            <summary>
            Gets or sets the ID of the parent menu.  Root menus will have a parent ID of 0.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Organization.LinkMenuItemData">
            <summary>
            LinkMenuItemData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.LinkMenuItemData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.LinkMenuItemData"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.LinkMenuItemData.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.LinkMenuItemData"/> class.
            </summary>
            <param name="parentId">The parent id.</param>
            <param name="text">The text.</param>
            <param name="href">The href.</param>
        </member>
        <member name="P:Ektron.Cms.Organization.LinkMenuItemData.ItemId">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.LibraryMenuItemData">
            <summary>
            LibraryMenuItemData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.LibraryMenuItemData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.LibraryMenuItemData"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.LibraryMenuItemData.#ctor(System.Int64,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.LibraryMenuItemData"/> class.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="parentId">The parent id.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Ektron.Cms.Organization.LibraryMenuItemData.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="T:Ektron.Cms.Organization.ContentMenuItemData">
            <summary>
            Data class represnting a Content Menu Item in the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.ContentMenuItemData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.ContentMenuItemData"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.ContentMenuItemData.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Organization.ContentMenuItemData"/> class.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="parentId"></param>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentMenuItemData.Href">
            <summary>
            Gets or sets the link for the menu item.  If this a content or library item, teh CMS will retreive that items link.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentMenuItemData.LinkType">
            <summary>
            Gets or sets the LinkType for a Content Menu item.  When Template, it uses the template defined on the parent menu (if applicable), otherwise it uses the Content's own quicklink.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentMenuItemData.ContentType">
            <summary>
            Gets the ContentType this content menu item represents.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Organization.TaxonomyCustomPropertyCriteria">
            <summary>
            Criteria class for retrieving Taxonomy Nodes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyId">
            <summary>
            Property is obsolete - use "Id"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyIdPath">
            <summary>
            Property is obsolete - use "IdPath"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyName">
            <summary>
            Property is obsolete - use "Name"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyImage">
            <summary>
            Property is obsolete - use "Image"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyLanguage">
            <summary>
            Property is obsolete - use "LanguageId"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyLanguageName">
            <summary>
            Property is obsolete - use "LanguageName"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyDescription">
            <summary>
            Property is obsolete - use "Description"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyParentId">
            <summary>
            Property is obsolete - use "ParentId"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyLevel">
            <summary>
            Property is obsolete - use "Level"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyPath">
            <summary>
            Property is obsolete - use "Path"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyCreatedDate">
            <summary>
            Property is obsolete - use "CreateDate"
            Gets or sets the date and time the taxonomy was created.
            </summary>
            <value></value>
            <returns>The date and time the taxonomy was created.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyItemCount">
            <summary>
            Property is obsolete - use "ItemCount"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyHasChildren">
            <summary>
            Property is obsolete - use "Name"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TaxonomyType">
            <summary>
            Gets or sets the type of taxonomy that this taxonomyData represents.  The standard taxonomy is 0, the others are specialized taxonomies specifically for managing things like community.
            This does not dictate the types of objects that can be applied to this taxonomy. Object configuration types is controlled by the TaxonomyConfigurations property.
              * Default = 0 
              * User's private taxonomy = 1
              * Group's private taxonomy = 2
              * Locale = 3
            </summary>
            <value></value>
            <returns>The taxonomy's type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.CreateDate">
            <summary>
            Gets or sets the date and time the taxonomy was created.
            </summary>
            <value></value>
            <returns>The date and time the taxonomy was created.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseData.TemplateName">
             <summary>
            TemplateName is for display only, changes to it will not be saved. To edit Templates use the TemplateManager API.
             </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyData.TaxonomyConfigurations">
            <summary>
            Gets or sets list of taxonomy configurations for the current taxonomy.  The configurations define which types of objects can be added to the taxonomy.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyData.TaxonomyItems">
            <summary>
            Gets the list of taxonomy items assigned to this taxonomy. This property is only populated on retrieval and will be ignored when adding or updating a taxonomy node.
            To add items to a taxonomy, yse the TaxonomyItemManager.
            </summary>
            <value></value>
            <returns>An array of TaxonomyItemData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyData.Taxonomy">
            <summary>
            Gets the child taxonomies fo rthe current taxonomy.  This property is only populated on retrieval and will be ignored when adding or updating a taxonomy node.
            To add children taxonomies, create a new taxonomy and set the parentId to the taxonomy you want it to save the taxonomy using TaxonomyManager.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyData.FolderId">
            <summary>
            Gets or sets the content folderId associated with this taxonomy if this taxonomy is a community taxonomy. This property is not used for asscoiating CMS folders to taxonomies.
            Use the taxonomy management methods in FolderManager to associate or link taxonomies and folders.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaxonomyContentRequest.ContentId">
            <summary>
            The content ID to be associated with the taxonomy's category.
            </summary>
            <value></value>
            <returns>The content ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyBaseRequest.TaxonomyType">
            <summary>
            Gets or sets the type items you want to associate with the taxonomy.
              * Content = 0 
              * User = 1
              * Group = 2
              * Locale = 3
            </summary>
            <value></value>
            <returns>Gets or sets the taxonomy's item type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.TaxonomyPath">
            <summary>
            Gets or set the path of the taxonomy category. For example, "\\New Hampshire\\Restaurants\\Pizza"
            </summary>
            <value></value>
            <returns>The path of the taxonomy category.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.GetAnalyticsData">
            <summary>
            When True, include all items from the taxonomy's structure. When false, use only the taxonomy 
            category's structure.
            </summary>
            <value></value>
            <returns>All items in the taxonomy's structure.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.TaxonomyIdList">
            <summary>
            Gets or sets a list of taxonomy items IDs associated with content.
            </summary>
            <value></value>
            <returns>A list of taxonomy items.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.FolderId">
            <summary>
            Deprecated. Not in use.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.TaxonomyItemType">
            <summary>
            Gets or sets the item type being assigned to the taxonomy.
              * Content = 0
              * User = 1
              * Group = 2
              * Blogs = 3
              * Forum = 4
            </summary>
            <value></value>
            <returns>The item's type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.IncludeItems">
            <summary>
            When True, include all items from the taxonomy's structure. When false, use only the taxonomy 
            category's structure.
            </summary>
            <value></value>
            <returns>All items in the taxonomy's structure.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.IncludeDisabledNode">
            <summary>
            When True, include all nodes irrespective of its node status. When false, returns only visible taxonomy 
            category's structure.
            </summary>
            <value></value>
            <returns>All all the taxonomy's structure.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.Depth">
            <summary>
            Gets or sets number of taxonomy levels to retrieve below each taxonomy/category. 
            For example, if the taxonomy is Businesses > Restaurants > 
            Pizza , and you set this property to 2, only Business and Restaurants are available in 
            code behind. <para></para>
            To retrieve the all of the categories for a taxonomy recursively, enter -1.<para></para>
            The default value is 1. <para></para>
            <b>Important!</b> - For a live site, Ektron strongly recommends leaving this value at 1. Increasing this value can slow down your live Web server. However, for testing on a staging server, you can increase the depth.
            </summary>
            <value></value>
            <returns>An integer representing the depth level.</returns>
            <remarks>This property should not be left empty. Enter a value at least a value of 1.</remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.Preview">
            <summary>
            Gets or sets whether preview content should be included in the taxonomy category.
            </summary>
            <value></value>
            <returns>A boolean.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.TaxonomyRequest.ReadCount">
            <summary>
            Gets or sets the quantity of items in each taxonomy category.
            </summary>
            <value></value>
            <returns>An integer representing the number of items.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.WorkSpaceUserRequest.UserId">
            <summary>
            Gets or sets the ID of a user to associate with the taxonomy category.
            </summary>
            <value></value>
            <returns>The user ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.WorkSpaceGroupRequest.GroupId">
            <summary>
            Gets or sets the ID of the community group to associate with the taxonomy category.
            </summary>
            <value></value>
            <returns>The community group's ID.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.UriFavorite">
            <summary>
            A list of properties that make up a URI favorite data.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UriFavorite.UserId">
            <summary>
            Gets or set the ID of the user with which the favorite is associated.
            </summary>
            <value></value>
            <returns>The ID of the user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UriFavorite.FavoriteId">
            <summary>
            Gets or sets the numeric ID of the favorite.
            </summary>
            <value></value>
            <returns>The numeric ID of a favorite.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UriFavorite.FavoriteName">
            <summary>
            Gets or sets the name of the URI for the favorite.
            </summary>
            <value></value>
            <returns>The name of the URI.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UriFavorite.FavoriteUri">
            <summary>
            Gets or sets the actual URI value of the favorite.
            </summary>
            <value></value>
            <returns>The URI value.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UriFavorite.FavoriteDesc">
            <summary>
            Gets or sets a description for a URI favorite.
            </summary>
            <value></value>
            <returns>A description of the URI favorite.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.LibraryContentIdentifier">
            <summary>
            Data Identifier for a library item. Extends a ContentDataIdentifier.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.LibraryContentIdentifier.Equals(Ektron.Cms.Contracts.Packaging.Entities.LibraryContentIdentifier)">
            <summary>
            Determine equality
            </summary>
            <param name="other">object to compare this to</param>
            <returns>true if equal</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.LibraryContentIdentifier.GetHashCode">
            <summary>
            Get the hash code of this instance
            </summary>
            <returns>Integer hash code</returns>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.LibraryContentIdentifier.LibraryType">
            <summary>
            The type of this library item
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.LibraryFolderType">
            <summary>
            Enum representing the types of library item
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.MenuIdentifier">
            <summary>
            Data Identifier for a Menu.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.PackageDataIdentifier.Equals(Ektron.Cms.Contracts.Packaging.Entities.PackageDataIdentifier)">
            <summary>
            To dertermine equality
            </summary>
            <param name="other">package to compare to</param>
            <returns>true if equal</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.PackageDataIdentifier.GetHashCode">
            <summary>
            Returns hash code for this instance
            </summary>
            <returns>Hash code for this instance</returns>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.PackageDataIdentifier.PackageID">
            <summary>
            The package row Identifier
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Entities.TaxonomyIdentifier">
            <summary>
            Data Identifier for a taxonomy
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.TemplateFileIdentifier.Equals(Ektron.Cms.Contracts.Packaging.Entities.TemplateFileIdentifier)">
            <summary>
            Check for object equality
            </summary>
            <param name="other">Object to compare to</param>
            <returns>True if objects are equal</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Entities.TemplateFileIdentifier.GetHashCode">
            <summary>
            Get the Hash Code for this instance
            </summary>
            <returns>Hash Code</returns>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Entities.TemplateFileIdentifier.FilePath">
            <summary>
            The local file file, relative to the root of the site. e.g. cmslogin.aspx
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.IPackageManager">
            <summary>
            Describes the interface for all PackageManager implementations
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.IPackageManager.Add(Ektron.Cms.Contracts.Packaging.Package)">
            <summary>
            Add a new package to the system
            </summary>
            <param name="package">The package to add</param>
            <returns>The package added complete with assigned Id</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.IPackageManager.Update(Ektron.Cms.Contracts.Packaging.Package)">
            <summary>
            Updates an existing package
            </summary>
            <param name="package">The package to update</param>
            <returns>The updated package</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.IPackageManager.Delete(System.Guid)">
            <summary>
            Delete a single package 
            </summary>
            <param name="Id">The ID of the package to delete</param>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.IPackageManager.GetItem(System.Guid)">
            <summary>
            Get a single package from the system
            </summary>
            <param name="Id">The Id of the package to retrieve</param>
            <returns>A package</returns>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.IPackageManager.GetList(Ektron.Cms.Contracts.Packaging.PackageCriteria)">
            <summary>
            Gets a list of packages from the system based on the provided criteria
            </summary>
            <param name="criteria">Package Crieria used for list retrieval</param>
            <returns>A list of packages</returns>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.Package">
            <summary>
            A package or collection of CMS entities. Collection contains primary key identifiers for real objects.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Contracts.Packaging.Package.#ctor">
            <summary>
            Default contructor to ensure properties are not null.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Id">
            <summary>
            Unique ID for this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Name">
            <summary>
            Human readable identifier for this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Description">
            <summary>
            A description of the package for business purposes
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.DateModified">
            <summary>
            DateTime of last modified event
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Content">
            <summary>
            List of content items in this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Folders">
            <summary>
            List of folder items in this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Files">
            <summary>
            List of web site files in this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.LibraryFiles">
            <summary>
            List of library items e.g. uploaded images or files (Non assets)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.PackageDefinitions">
            <summary>
            A list of package definitions to include in this package. Include definition only, not the items within it.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Taxonomy">
            <summary>
            A list of taxonomies included in this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Menu">
            <summary>
            A list of Menu's included in this package
            </summary>
        </member>
        <member name="P:Ektron.Cms.Contracts.Packaging.Package.Collection">
            <summary>
            A list of Collection's included in this package
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.PackageCriteria">
            <summary>
            Criteria class for use specifically with AliasData
            </summary>
        </member>
        <member name="T:Ektron.Cms.Contracts.Packaging.PackageProperty">
            <summary>
            Enumeration representing Package properties that can be filtered and sorted on via Criteria
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData">
            <summary>
            Seetings for adaptive image handler
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.ImageSizeThresholdKB">
            <summary>
            Min size of an image that will be processed
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.Level1CacheSize">
            <summary>
            Number of items in the level 1 cache
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.Level2CacheSize">
            <summary>
            Number of items in the level 3 cache.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.Level2CacheItemThresholdKB">
            <summary>
            Max size of a single item of the level 2 cahce.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.EnableL2Caching">
            <summary>
            Enable or disable the level 2 cache
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.DirectAccessQueryString">
            <summary>
            Querystring name for direct access mode.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData.IncludePathList">
            <summary>
            Path included will be processed
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData">
            <summary>
            A Data Transfer Object (DTO) for IRegistrationService; holds a registered files ID and path.
            </summary>
            
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor">
            <summary>
            parameterless default constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor(System.String)">
            <summary>
            Constructor that accepts and applies the file-ID to the FileID property.
            </summary>
            <param name="fileId"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor(System.String,System.String)">
            <summary>
            Constructor that accepts and applies the file-ID to the FileID property, 
            and the file-path to the FilePath property.
            </summary>
            <param name="fileId"></param>
            <param name="filePath"></param>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.FileId">
            <summary>
            The Text-ID of the registered file.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.FilePath">
            <summary>
            The path of the file on the file system.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Authoring.IStyleManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.IStyleManager.Add(Ektron.Cms.Settings.Authoring.StyleData)">
            <summary>
            
            </summary>
            <param name="ctaData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.IStyleManager.Update(Ektron.Cms.Settings.Authoring.StyleData)">
            <summary>
            
            </summary>
            <param name="ctaData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.IStyleManager.GetItem(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.IStyleManager.Delete(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.IStyleManager.GetList(Ektron.Cms.Settings.Authoring.StyleCriteria)">
            <summary>
            
            </summary>
            <param name="styleCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Settings.Authoring.StyleData">
            <summary>
            Summary description for StyleData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Authoring.StyleData.Validate">
            <summary>
            Validates this StyleData object
            </summary>
            <returns>ValidationResults instance</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Ektron.Cms.Settings.Authoring.StyleData.Name" -->
        <member name="P:Ektron.Cms.Settings.Authoring.StyleData.TypeId">
            <summary>
            Gets or Sets the style TypeID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Authoring.StyleData.Taglist">
            <summary> 
            Gets or sets the style's applicable taglist. 
            </summary> 
            <value></value> 
            <returns>The style's taglist</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Settings.Authoring.StyleData.Value">
            <summary> 
            Gets or sets a style's value 
            </summary> 
            <value></value> 
            <returns>The style value.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Settings.Authoring.StyleData.SampleValue">
            <summary> 
            Gets or sets a style's sample value to be used as a preview to users
            </summary> 
            <value></value> 
            <returns>The sample style value.</returns> 
            <remarks></remarks> 
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.DeviceBreakpointCriteria">
            <summary>
            Criteria for device breakpoints
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.DeviceBreakpointCriteria.#ctor">
            <summary>
            Constructor, default sorting would be width asc
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.DeviceBreakpointCriteria.#ctor(Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty,Ektron.Cms.Common.EkEnumeration.OrderByDirection)">
            <summary>
            Constructor,custom sorting field and direction
            </summary>
            <param name="orderByField"></param>
            <param name="orderByDirection"></param>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty">
            <summary>
            Enum type for properties of DeviceBreakpointData.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.FileLabel">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.Description">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.Width">
            <summary>
            (int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.Height">
            <summary>
            (int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.DeviceBreakpointProperty.AdaptiveImageData">
            <summary>
            (xml)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.DeviceBreakpointData">
            <summary>
            Holds the data of a device breakpoint.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.Id">
            <summary>
            Gets or Sets the Id for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.Name">
            <summary>
            Gets or Sets the Name for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.FileLabel">
            <summary>
            Gets or Sets the FileLabel for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.Description">
            <summary>
            Gets or Sets the Description for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.Width">
            <summary>
            Gets or Sets the Width for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.Height">
            <summary>
            Gets or Sets the Height for DeviceBreakpointData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointData.AdaptiveImageData">
            <summary>
            Extented property for AdaptiveImage.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.DeviceBreakpointImageSizeData">
            <summary>
            Adaptive Image settings as Extented Property for DeviceBreakpoint
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointImageSizeData.Enabled">
            <summary>
            Indicate the if the Adaptive Image is enabled for a breakPoint
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointImageSizeData.Width">
            <summary>
            Width spec for image engine
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointImageSizeData.Height">
            <summary>
            Height spec for image engine
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.DeviceBreakpointImageSizeData.FileLabel">
            <summary>
            File name prefix for resized images 
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.AdapterName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.ConnectionName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.EndPoint">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.CreateDate">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHConnectionProperty.ModifiedDate">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.Id">
            <summary>
            Gets or Sets the Id for DxHConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.AdapterName">
            <summary>
            Gets or Sets the AdapterName for DxHConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.ConnectionName">
            <summary>
            Gets or Sets the ConnectionName for DxHConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.EndPoint">
            <summary>
            Gets or Sets the EndPoint Url for DxHConnection object.  All connections may not have a direct EndPoint.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.CreateDate">
            <summary>
            Gets or Sets the CreateDate for DxHConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.ModifiedDate">
            <summary>
            Gets or Sets the ModifiedDate for DxHConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHConnectionData.SupportedObjectDefinitionIdList">
            <summary>
            Gets or Sets the list of objects supported by the Adapter
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.Title">
            <summary>
             (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.Adapter">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.Connection">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.SourceObjectDefinitionId">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.SourceObjectDefinition">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.TargetObjectDefinitionId">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.TargetObjectDefinition">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.MappingTaskId">
            <summary>
            (Guid)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.DateCreated">
            <summary>
             (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.WorkFlowId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhObjectMapProperty.WorkFlowName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.Adapter">
            <summary>
            Gets or Sets the Adapter ID for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.Title">
            <summary>
             Gets or Sets the Title for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.Connection">
            <summary>
            Gets or Sets the DxH Connection Id for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.MappingTaskId">
            <summary>
            Gets or Sets the MappingTaskId for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.SourceObjectDefinitionId">
            <summary>
            Gets or Sets the Source ObjectDefinition ID for DxHMap object.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.SourceObjectDefinition">
            <summary>
            Gets or Sets the Source Object Definition for DxHMap object.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.TargetObjectDefinitionId">
            <summary>
            Gets or Sets the Target Object Definition Id for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.TargetObjectDefinition">
            <summary>
            Gets or Sets the CmsMetaObject for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.DateCreated">
            <summary>
             Gets or Sets the Created Date for DxHMap object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.WorkflowId">
            <summary>
            Gets or Sets the workFlowId for DxHMap object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHMappingData.WorkflowName">
            <summary>
            Gets or Sets the WorkFlowName for DxHmap object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHCmsMappingData.MappingId">
            <summary>
             Gets or Sets the MappingId for DxHCmsMapping object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHCmsMappingData.ObjectType">
            <summary>
            Gets or Sets the ObjectType for DxHCmsMapping object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHCmsMappingData.ObjectId">
            <summary>
             Gets or Sets the ObjectId for DxHCmsMapping object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHCmsMappingData.LanguageId">
            <summary>
              Gets or Sets the LanguageId for DxHCmsMapping object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHCmsMappingData.ExternalObjectId">
            <summary>
              Gets or Sets the Id of the externalobject being mapped to the CMS.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhCmsObjectMapProperty.MappingId">
            <summary>
             (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhCmsObjectMapProperty.ObjectType">
            <summary>
             (CMSObjectTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhCmsObjectMapProperty.ObjectId">
            <summary>
             (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhCmsObjectMapProperty.LanguageId">
            <summary>
             (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxhCmsObjectMapProperty.ExternalObjectId">
            <summary>
             (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.VisitorId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.ConnectorName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.ConnectorObjectName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.ConnectionName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.DxH.DxHUserConnectionProperty.ExternalUserKey">
            <summary>
            (string)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.Id">
            <summary>
            Gets or Sets the Id for DxHUserConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.VisitorId">
            <summary>
            Gets or Sets the VisitorId for DxHUserConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.ConnectorName">
            <summary>
            Gets or Sets the Connector Name for DxHUserConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.ConnectionName">
            <summary>
            Gets or Sets the ConnectionName for DxHUserConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.ConnectorObjectName">
            <summary>
            Gets or Sets the Connector Object Name for DxHUserConnectionData object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.DxH.DxHUserConnectionData.ExternalUserKey">
            <summary>
            Gets or Sets the Id for the user in the external system.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.IAdaptiveImageSetting">
            <summary>
            Interface for  Adaptive image settings
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.IAdaptiveImageSetting.GetSettings">
            <summary>
            Get Adaptive image settings from CMS
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.IAdaptiveImageSetting.SaveSettings(Ektron.Cms.Settings.Mobile.AdaptiveImageSettingData)">
            <summary>
            Save settings to DB
            </summary>
            <param name="setting"></param>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager">
            <summary>
            Interface for TemplateBreakpointManager
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.Add(Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData)">
            <summary>
            Add a TemplateToDeviceGroupData to CMS
            </summary>
            <param name="templateToBreakpointData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.Update(Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData)">
            <summary>
            Update a TemplateToDeviceGroupData in CMS
            </summary>
            <param name="templateToBreakpointData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.Delete(System.Int64,System.Int64)">
            <summary>
            Delete a TemplateToDeviceGroupData from CMS
            </summary>
            <param name="templateID"></param>
            <param name="DeviceGroupID"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.GetItem(System.Int64,System.Int64)">
            <summary>
            Get a single TemplateToDeviceGroupData
            </summary>
            <param name="templateID"></param>
            <param name="DeviceGroupID"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.GetList(Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupCriteria)">
            <summary>
            Get a list of TemplateToDeviceGroupData for Breakpoints
            </summary>
            <param name="templateToBreakpointCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Settings.Mobile.ITemplateDeviceGroupManager.GetListDeviceModelOs(Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupCriteria)">
            <summary>
            Get a list of TemplateToDeviceGroupData for DeviceModelOs
            </summary>
            <param name="templateToBreakpointCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Settings.PermissionProperty">
            <summary>
            Enumeration used for filtering user lists using PermissionCriteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.FolderId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.ContentId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.LanguageId">
            <summary>
            (int)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.UserGroupId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.IsReadOnly">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.CanAdd">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.CanEdit">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.PermissionProperty.CanDelete">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.PermissionCriteria">
            <summary>
            Criteria class for retrieving Permission results.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupProperty.TemplateId">
            <summary>
            long
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupProperty.DeviceGroupID">
            <summary>
            long
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupProperty.TemplateFileName">
            <summary>
            string
            </summary>
        </member>
        <member name="F:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupProperty.Enabled">
            <summary>
            bool
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData">
            <summary>
            Data object of the template-breakpoint association
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData.TemplateId">
            <summary>
            Gets ot sets the Template Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData.DeviceGroupID">
            <summary>
            Gets ot sets the Breakpoint Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData.TemplateFileName">
            <summary>
            Gets ot sets the Template file name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.Mobile.TemplateToDeviceGroupData.Enabled">
            <summary>
            Indication is this association is enabled or not.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasCriteria">
            <summary>
            Criteria class for use specifically with AliasData
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData">
            <summary>
            Data class representing a single alias record
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.ConfigurationId">
            <summary>
            Parent Alias configuration that generated this alias
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.Alias">
            <summary>
            The Alias URL, will be used to match incoming requests
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.LanguageId">
            <summary>
            The Language Id of the alias
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.SiteId">
            <summary>
            The multisite Id
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasProperty">
            <summary>
            Enumeration representing AliasData properties that can be filtered and sorted on via Criteria
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData">
            <summary>
            Data class representing a single alias configuration
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Id">
            <summary>
            Unique Identifier for this record
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Type">
            <summary>
            The Type of alias 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.LanguageId">
            <summary>
            The langauge Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.SourceId">
            <summary>
            Optional. Source entity in the CMS. This changes meaning depending on the ConfigurationType. If its Folder Alias this is a folder Id, if taxonomy alias, its a Taxonomy ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.SiteId">
            <summary>
            The MultiSite Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.FileExtensionId">
            <summary>
            The file extension to use in alias generation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.IsEnabled">
            <summary>
            Indicates if this configuration is enabled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Name">
            <summary>
            Friendly name of this configuration
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.AliasPriority">
            <summary>
            The Priority order
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.IsDeleted">
            <summary>
            Indicates delted status. Rules are soft deleted.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UrlAliasRegExData">
            <summary>
            A data class used to get or set information about a URL Alias that uses RegEx.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor(System.String,System.Int64,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="expressionName"></param>
            <param name="siteId"></param>
            <param name="expression"></param>
            <param name="expressionMap"></param>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor(System.String,System.Int64,System.String,System.String,System.Int64,System.String,System.Boolean,Ektron.Cms.Common.EkEnumeration.RegExPriority,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="expressionName"></param>
            <param name="siteId"></param>
            <param name="expression"></param>
            <param name="expressionMap"></param>
            <param name="regexId"></param>
            <param name="transformedUrl"></param>
            <param name="isEnabled"></param>
            <param name="priority"></param>
            <param name="timeStamp"></param>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.RegExId">
            <summary>
            Gets the unique ID generated for each record.
            </summary>
            <value></value>
            <returns>The unique ID generated for each record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.SiteId">
            <summary>
            Gets or sets the root folder ID of the site. Returns zero if no site is specified.
            </summary>
            <value></value>
            <returns>The root folder ID of the site. Returns zero if no site is specified.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.ExpressionName">
            <summary>
            Gets or sets a descriptive name for the expression.
            </summary>
            <value></value>
            <returns>A descriptive name for the expression.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.Expression">
            <summary>
            Gets or sets the regular expression to be used.
            </summary>
            <value></value>
            <returns>The regular expression to be used.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.ExpressionMap">
            <summary>
            Gets or sets the destination for the expression.
            </summary>
            <value></value>
            <returns>The destination for the expression.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.TransformedUrl">
            <summary>
            Gets or sets a sample of how the ExpressionMap URL will look.
            </summary>
            <value></value>
            <returns>A sample of how the ExpressionMap URL will look.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.IsEnabled">
            <summary>
            Gets or sets whether the expression is active or not.
            </summary>
            <value></value>
            <returns>Returns true if the expression is active. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.Priority">
            <summary>
            Gets or sets the look up order for the expression list. Priorities are:
              * None
              * High
              * Medium
              * Low 
            </summary>
            <value></value>
            <returns>The look up order for the expression list.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.SourceDeleted(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.AliasRuleType)">
            <summary>
            Call when a source is deleted from the CMS.
            When an auto alias source is deleted this method should be called. This method will remove the generated aliases according to the defined rule
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.SourceModified(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int32)">
            <summary>
            Call when an source is modified in the CMS.
            When an auto alias source is modifed, aliases based on the source may need to be modifed. e.g. A taxonomy node name change.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.AssignedToSource(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int64,System.Int32)">
            <summary>
            Call when assigning an item to a Source e.g. Add content to a folder, assign content to a taxonomy.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.RemovedFromSource(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int64,System.Int32)">
            <summary>
            Call when assigning an item to a Source e.g. Add content to a folder, assign content to a taxonomy.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.UpdateContentTemplateForAliases(System.Int64,System.Int32)">
            <summary>
            Call when a source template has been changed from the CMS.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.UpdateSiteIdForAliasMove(System.Int64)">
            <summary>
            Call when a folder is moved into a Multisite. Any folder rules and aliases pointing to the sub folder tree and content will be updated with the correct siteID.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.TargetModifed(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.TargetType)">
            <summary>
            
            </summary>
            <param name="targetId"></param>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.IAliasRuleManager">
            <summary>
            Manager for interactions with Alias Configurations. Alias Configurations define rules for Alias Mapping Generation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SiteId">
            <summary>
            long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceId">
            <summary>
            Long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.AutoAliasType">
            <summary>
            as of EkEnumeration.AutoAliasType
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.LanguageId">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.FileExtension">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.IsEnabled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.Example">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SelectedPath">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.ExcludedPath">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceParmName">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceName">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.PageNameType">
            <summary>
            as of EkEnumeration.AutoAliasNameType
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.ReplacementCharacter">
            <summary>
            String
            </summary>
        </member>
        <member name="T:Ektron.Cms.UrlAliasing.ManualAliasProperty">
            <summary>
            Properties used as criteria
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasId">
            <summary>
            (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentLanguage">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.SiteId">
            <summary>
            (Long Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.HostName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentTitle">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.Target">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.LibraryId">
            <summary>
            (Long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentId">
            <summary>
            (Long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.QueryStringAction">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.QueryString">
            <summary>
            (as of EkEnumeration.QueryStringActionType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.FileExtension">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.IsDefault">
            <summary>
            (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasPageName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.DisplayAlias">
            <summary>
            (String)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasAutoData">
            <summary>
            A data class used to get or set information about an Automatic URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor(System.Int64,Ektron.Cms.Common.EkEnumeration.AutoAliasType,System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="siteId"></param>
            <param name="autoAliasType"></param>
            <param name="sourceId"></param>
            <param name="fileExtension"></param>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor(System.Int64,Ektron.Cms.Common.EkEnumeration.AutoAliasType,System.Int64,System.String,System.Int64,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,Ektron.Cms.Common.EkEnumeration.AutoAliasNameType,System.String,System.String,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="siteId"></param>
            <param name="autoAliasType"></param>
            <param name="sourceId"></param>
            <param name="fileExtension"></param>
            <param name="autoId"></param>
            <param name="aliasName"></param>
            <param name="target"></param>
            <param name="languageId"></param>
            <param name="sourceName"></param>
            <param name="isEnabled"></param>
            <param name="example"></param>
            <param name="pagenametype"></param>
            <param name="replacementCharacter"></param>
            <param name="hostName"></param>
            <param name="selectedPath"></param>
            <param name="timeStamp"></param>
            <param name="contentId"></param>
            <param name="excludedPath"></param>
            <param name="sourceParmname"></param>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AutoId">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AliasName">
            <summary>
            Gets or sets the alias name for the URL.
            </summary>
            <value></value>
            <returns>The alias name for the URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Target">
            <summary>
            Gets or sets the destination for the alias. 
            </summary>
            <value></value>
            <returns>The destination for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SiteId">
            <summary>
            Gets or sets the root folder ID of the site. If no site is specified, returns 0 (zero).
            </summary>
            <value></value>
            <returns>The root folder ID of the site. If no site is specified, returns 0 (zero).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AutoAliasType">
            <summary>
            Gets or sets the automatic alias source type. Types are Taxonomy and Folder.
            </summary>
            <value></value>
            <returns>The automatic alias source type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.LanguageId">
            <summary>
            Gets the language ID for the automatic alias. 
            </summary>
            <value></value>
            <returns>The language ID for the automatic alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.FileExtension">
            <summary>
            Gets or sets the selected file extension.
            </summary>
            <value></value>
            <returns>The selected file extension.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SourceId">
            <summary>
            Gets or sets either the taxonomy ID or the folder ID depending on the auto alias type selected. 
            </summary>
            <value></value>
            <returns>Either the taxonomy ID or the folder ID depending on the auto alias type selected.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SourceName">
            <summary>
            Gets the name of the taxonomy or folder selected depending on the auto alias type selected.
            </summary>
            <value></value>
            <returns>The name of the taxonomy or folder selected depending on the auto alias type selected.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.IsEnabled">
            <summary>
            Gets or sets whether the configuration is active or not.
            </summary>
            <value></value>
            <returns>True if the configuration is active or not. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Example">
            <summary>
            Gets or sets a sample of the selected configuration.
            </summary>
            <value></value>
            <returns>A sample of the selected configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.PageNameType">
            <summary>
            Gets or sets the name for the configuration. Available types are:
              * ContentTitle
              * ContentId
              * ContentIdAndLanguage
            </summary>
            <value></value>
            <returns>The name for the configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.ReplacementCharacter">
            <summary>
            Gets or sets the character that will replace special characters in the generated URL.
            </summary>
            <value></value>
            <returns>The character that will replace special characters in the generated URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SelectedPath">
            <summary>
            Returns the folder or taxonomy path selected by the user
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.FormattedSelectedPath">
            <summary>
            Returns the folder or taxonomy path with modifications 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.ExcludedPath">
            <summary>
            Returns the folder or taxonomy path excluded from the selected path.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasCommunityData">
            <summary>
            A data class used to get or set information about an Automatic URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Target">
            <summary>
            Gets the destination for the alias. 
            </summary>
            <value></value>
            <returns>The destination for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.LanguageId">
            <summary>
            Gets the language ID for the automatic alias. 
            </summary>
            <value></value>
            <returns>The language ID for the automatic alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.IsEnabled">
            <summary>
            Gets or sets whether the configuration is active or not.
            </summary>
            <value></value>
            <returns>True if the configuration is active or not. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Example">
            <summary>
            Gets or sets a sample of the selected configuration.
            </summary>
            <value></value>
            <returns>A sample of the selected configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.ReplacementCharacter">
            <summary>
            Gets or sets the character that will replace special characters in the generated URL.
            </summary>
            <value></value>
            <returns>The character that will replace special characters in the generated URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasManualData">
            <summary>
            A data class used to get or set information about a Manual URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.SiteId">
            <summary>
            Gets the root folder ID of the site. If no site is specified, returns 0 (zero).
            </summary>
            <value></value>
            <returns>The root folder ID of the site. If no site is specified, returns 0 (zero).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasId">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.LibraryId">
            <summary>
            Gets or sets the Library ID for the content. 
            </summary>
            <value></value>
            <returns>The Library ID for the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentId">
            <summary>
            Gets or sets the Content ID.
            </summary>
            <value></value>
            <returns>The content ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentLanguage">
            <summary>
            Gets the content language.
            </summary>
            <value></value>
            <returns>The content language.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentTitle">
            <summary>
            Gets the title of the content.
            </summary>
            <value></value>
            <returns>The title of the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasName">
            <summary>
            Gets or sets the alias name for the URL without the extension. 
            </summary>
            <value></value>
            <returns>The alias name for the URL without the extension.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.QueryString">
            <summary>
            Gets or sets the querystring parameters to append to the aliased URL.
            </summary>
            <value></value>
            <returns>The querystring parameters to append to the aliased URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.QueryStringAction">
            <summary>
            Gets or sets the querystringaction parameters.
            </summary>
            <value></value>
            <returns>The querystring parameters.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.IsDefault">
            <summary>
            Gets or sets which alias name should show when the content has multiple aliases.
            </summary>
            <value></value>
            <returns>Which alias name should show when the content has multiple aliases.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.IsEnabled">
            <summary>
            Gets or sets whether the alias name is active or not.
            </summary>
            <value></value>
            <returns>Returns true if the alias name is active. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.Target">
            <summary>
            Gets or sets the destination URL for the alias.
            </summary>
            <value></value>
            <returns>The destination URL for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.FileExtension">
            <summary>
            Gets or sets the file extension for the alias.
            </summary>
            <value></value>
            <returns>The file extension for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.DisplayAlias">
            <summary>
            Gets the alias URL with the extension and query parameters.  
            </summary>
            <value></value>
            <returns>The alias URL with the extension and query parameters.</returns>
            <remarks>This is a computed field.</remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasPageName">
            <summary>
            Gets the name of the alias without the query string.
            </summary>
            <value></value>
            <returns>The name of the alias without the query string.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasInfo.PreviousAliasName">
            <summary>
            Gets or sets the previous alias name for the Content.
            </summary>
            <value></value>
            <returns>The previous alias name for the Content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasInfo.CurrentAliasName">
            <summary>
            Gets or sets the current alias name for the Content.
            </summary>
            <value></value>
            <returns>The current alias name for the Content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasInfo.PreviousAliasExtension">
            <summary>
            Gets or sets the previous alias extension for the Content.
            </summary>
            <value></value>
            <returns>The previous alias extension for the Content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasInfo.CurrentAliasExtension">
            <summary>
            Gets or sets the current alias extension for the Content.
            </summary>
            <value></value>
            <returns>The current alias extension for the Content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasInfo.AliasId">
            <summary>
            Gets or sets the alias Id for the Content.
            </summary>
            <value></value>
            <returns>The alias Id for the Content.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Add(Ektron.Cms.Organization.MenuData)">
            <summary>
            Adds the specified menu data.
            </summary>
            <param name="menuData">The menu data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Add(Ektron.Cms.Organization.MenuItemData)">
            <summary>
            Adds the specified menu item data.
            </summary>
            <param name="menuItemData">The menu item data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Add(Ektron.Cms.Organization.SubMenuData)">
            <summary>
            Adds the specified Sub menu data.
            </summary>
            <param name="subMenuData">The Sub Menu Data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.DeleteMenu(System.Int64)">
            <summary>
            Deletes the menu and all of its children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.DeleteMenuItem(System.Int64)">
            <summary>
            Deletes the menu item and all of its children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.GetMenu(System.Int64)">
            <summary>
            Gets the menu without its children. For the entire menu, call GetTree.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.GetMenuItem(System.Int64)">
            <summary>
            Retrieves a menu item by ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.GetTree(System.Int64)">
            <summary>
            Gets the menu and all of its children by MenuId. Can get the root level or from a SubMenu.
            </summary>
            <param name="menuId">The menu id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Update(Ektron.Cms.Organization.MenuData)">
            <summary>
            Updates the specified menu data.
            </summary>
            <param name="menuData">The menu data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Update(Ektron.Cms.Organization.SubMenuData)">
            <summary>
            Updates the specified sub menu data.
            </summary>
            <param name="menuData">The menu data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.Update(Ektron.Cms.Organization.MenuItemData)">
            <summary>
            Updates the specified menu item data.
            </summary>
            <param name="menuItemData">The menu item data.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Organization.IMenuManager.GetMenuList(Ektron.Cms.Organization.MenuCriteria)">
            <summary>
            Gets a list of Menu Objects. This does not include child items.
            </summary>
            <param name="criteria">The Criteria of Menus to get.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionManager">
            <summary>
            The IStorableActionManager inferface describes a component capable
            of persisting and retrieving StorableActions.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Add(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Adds a new StorableAction to the underlying data store.
            </summary>
            <param name="action">Action to be added</param>
            <returns>Action with unique ID assigned</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Delete(System.Guid)">
            <summary>
            Deletes the StorableAction with the specified unique identifier.
            </summary>
            <param name="id">ID of the action to delete</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Get(System.Guid)">
            <summary>
            Gets the StorableAction with the specified unqiue identifier.
            </summary>
            <param name="id">ID of the action to retrieve</param>
            <returns>StorableAction with the specified ID</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList(System.Int64)">
            <summary>
            Gets a collection of StorableActions associated available to 
            the specified user.
            </summary>
            <param name="userId">User ID</param>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList``1">
            <summary>
            Gets a collection of StorableActions of the specified type.
            </summary>
            <typeparam name="T">Type of StorableAction</typeparam>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList``1(System.Int64)">
            <summary>
            Gets a collection of StorableActions of the specified type
            available to the specified user.
            </summary>
            <typeparam name="T">Type of StorableAction</typeparam>
            <param name="userId">User ID</param>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionProvider">
            <summary>
            The IStorableActionProvider interface describes a component
            capable of accessing and saving StorableActions to a specific
            type of data store (SQL Server, etc.)
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Add(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Adds the specified StorableAction to the underlying data store.
            </summary>
            <param name="action">StorableAction to save</param>
            <returns>StorableAction with updated fields</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Delete(System.Guid)">
            <summary>
            Deletes the StorableAction with the specified ID from the
            underlying data store.
            </summary>
            <param name="id">ID of the StorableAction</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Get(System.Guid)">
            <summary>
            Gets the StorableAction with the specified ID frmo the
            underlying data store.
            </summary>
            <param name="id">ID of the StorableAction</param>
            <returns>StorableAction</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Int64)">
            <summary>
            Gets a collection of actions available to the specified user from
            the underlying data store.
            </summary>
            <param name="userId">User ID</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Type)">
            <summary>
            Gets a collection of actions of the specified type.
            </summary>
            <param name="type">Type of StorableAction</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Type,System.Int64)">
            <summary>
            Gets a collection of actions of the specified type.
            </summary>
            <param name="type">Type of StorableAction</param>
            <param name="userId">User ID</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionSerializer">
            <summary>
            The IStorableActionSerializer interface describes a component capable
            of serializing and deserializing StorableActions to a format in which
            it can be persisted.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionSerializer.Serialize(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Serializes the specified StorableAction.
            </summary>
            <param name="action">Action to be serialized</param>
            <returns>Serialized data string</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionSerializer.Deserialize(System.String)">
            <summary>
            Deserialize the specified data string to a StorableAction.
            </summary>
            <param name="data">Data string to be deserialized</param>
            <returns>StorableAction represented by the data string</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.StorableAction">
            <summary>
            The StorableAction describes the base for all concrete 
            StorableAction implementations. A StorableAction represents
            some activity, which can be persisted, that accepts variable 
            inputs and delivers a result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.StorableAction.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.StorableAction.Execute(System.Collections.Generic.List{Ektron.Cms.StorableActions.IStorableActionTokenSource})">
            <summary>
            Executes the action.
            </summary>
            <param name="tokenSource">Data source delivering action parameters</param>
            <returns>Result set for the action.</returns>
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Id">
            <summary>
            Gets or sets the unique identifier for the action.
            </summary>                
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Name">
            <summary>
            Gets or sets the name of the action.
            </summary>
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Creator">
            <summary>
            Gets or sets the creator of the action. The value of this
            field may be 0 if the action is available to all users.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Organization.TaxonomyCriteria">
            <summary>
            Criteria class for retrieving Taxonomy Nodes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.TaxonomyCriteria.ReturnRecursiveChildren">
            <summary>
            Gets or sets the ReturnRecursiveChildren flag.  If true AND a ParentId filter is supplied, all recursive children taxonomies will be 
            returned for the parent id.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.Id">
            <summary>
            Taxonomy ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.ParentId">
            <summary>
            Taxonomy Parent's ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.Level">
            <summary>
            Taxonomy's level (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.LanguageId">
            <summary>
            Language id (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.Name">
            <summary>
            Taxonomy Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.Path">
            <summary>
            Taxonomy Path (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.Type">
            <summary>
            Taxonomy Type (as in EkEnumeration.TaxonomyType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.TemplateId">
            <summary>
            Template Id (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.ItemCount">
            <summary>
            Amount of items in Taxonomy (Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.HasChildren">
            <summary>
            HasChildren Flag (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyProperty.TaxonomyDisplayOrder">
            <summary>
            Taxonomy Display Order (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Organization.TaxonomyItemCriteria">
            <summary>
            Criteria class used for retrieving Taxonomy Items.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.TaxonomyItemCriteria.ReturnRecursiveChildren">
            <summary>
            Gets or sets the ReturnRecursiveChildren flag.  If true AND a ParentId filter is supplied, all recursive children taxonomies will be 
            returned for the parent id.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyId">
            <summary>
            ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyLanguageId">
            <summary>
            Language ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyName">
            <summary>
            Taxonomy Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyPath">
            <summary>
            TaxonomyPath (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyType">
            <summary>
            Taxonomy Type (integer as of EkEnumeration.TaxonomyType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.LanguageId">
            <summary>
            Language ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.ItemId">
            <summary>
            Item ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.ItemType">
            <summary>
            Item Type (integer as of TaxonomyItemType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.AssignedByUserId">
            <summary>
            User ID Integer (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.DateCreated">
            <summary>
            Date Created (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.DateModified">
            <summary>
            Date Modified (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.Title">
            <summary>
            Item Title (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Organization.TaxonomyItemProperty.TaxonomyItemDisplayOrder">
            <summary>
            Taxonomy Item Display Order (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoAssignmentProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoAssignmentData">
            <summary>
            Data class representing a TodoAssignment in the Cms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoAssignmentData.UserId">
            <summary>
            Gets or sets the user ID of the TodoAssignment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoAssignmentData.UserName">
            <summary>
            Gets or sets the username of the TodoAssignment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCommentProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Id">
            <summary>
            Gets or sets the ID of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.UserId">
            <summary>
            Gets or sets the user ID of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Username">
            <summary>
            Gets or sets the username of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Avatar">
            <summary>
            Gets or sets the avatar url of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Timestamp">
            <summary>
            Gets or sets the timestamp of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Message">
            <summary>
            Gets or sets the message of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.TodoItemId">
            <summary>
            Gets or sets the TodoItemId of the TodoItemComment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCommentCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Todo Comments from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemPriority">
            <summary>
            Enumeration of TodoItem priorities.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemStatus">
            <summary>
            Enumeration of TodoItem statuses.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCriteria">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemData">
            <summary>
            Data class representing a TodoItem in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.TodoListId">
            <summary>
            Gets or sets the ID of the TodoItem's containing TodoList.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.EditorId">
            <summary>
            Gets or sets the ID of the TodoItem's last editor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Title">
            <summary>
            Gets or sets the title of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Description">
            <summary>
            Gets or sets the description of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Status">
            <summary>
            Gets or sets the priority of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Priority">
            <summary>
            Gets or sets the priority of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.StartDate">
            <summary>
            Gets or sets the start date of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.DueDate">
            <summary>
            Gets or sets the due date of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.AssignedTo">
            <summary>
            Gets or sets the list of targets to which the TodoItem is assigned.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Comments">
            <summary>
            Gets or sets the list of TodoItem comments.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoListProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.Id">
            <summary>
            The TodoList id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.Name">
            <summary>
            The TodoList name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.ObjectType">
            <summary>
            The TodoList associated object type (integer as of EkEnumeration.CMSObjectTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.ObjectId">
            <summary>
            The TodoList associated object ID (long)
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoListData">
            <summary>
            Data class representing a TodoList in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.Name">
            <summary>
            Gets or sets the TodoList name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.ObjectType">
            <summary>
            Gets or sets the TodoList associated object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.ObjectId">
            <summary>
            Gets or sets the TodoList associated object ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToolBar.EkWebMenuObjInfo.ContentType">
            <summary>
            Gets or sets the ContentType for the content associated with the control. This will determine what type of content can be added through the access point.
            </summary>
        </member>
        <member name="T:Ektron.Cms.CustomAttributeList">
            <summary>
            Data class representing  a list of Custom Attributes applied to a User.
            </summary>
        </member>
        <member name="M:Ektron.Cms.CustomAttributeList.Add(System.Int64,System.String,System.Object)">
            <summary>
            Adds a custom attribute to the List.  This won't create a new Attribute in the CMS, but adds an existing one to the list so a value can be saved.
            </summary>
            <param name="attributeId">Id of attribute to add.</param>
            <param name="name">Name of attribute to add.  The name is used when retreiving from the CustomAttributeList using the indexer. </param>
        </member>
        <member name="P:Ektron.Cms.CustomAttributeList.Item(System.String)">
            <summary>
            Gets an attribute from the list by name.
            </summary>
            <param name="name">name of attribute to retreive.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.CustomAttributeList.Item(System.Int32)">
            <summary>
            Gets an attribute from the list by index.
            </summary>
            <param name="index">index of attribute to retreive.</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.CustomAttribute">
            <summary>
            Data class representing a Customer user attribute.
            </summary>
        </member>
        <member name="P:Ektron.Cms.CustomAttribute.PropertyValueId">
            <summary>
            gets or sets the Id of the custom property value.  This is the ID of the specific property instance value and the property defintion.  The property Defintion ID is the Id property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Avatar">
            <summary>
            Gets or sets the user's avatar URL for a Threaded Discussion. This is for the UserData object. For Example,
            <c>www.example.com/images/smiley.gif</c>
            </summary>
            <value></value>
            <returns>The user's avatar URL for a Threaded Discussion.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Username">
            <summary>
            Gets or sets the username of a user for the UserData object.
            </summary>
            <value></value>
            <returns>The username of a user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.FirstName">
            <summary>
            Gets or sets the first name of a user for the UserData object.
            </summary>
            <value></value>
            <returns>The first name of a user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.LastName">
            <summary>
            Gets or sets the last name of a user for the UserData object.
            </summary>
            <value></value>
            <returns>The last name of a user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.DisplayUserName">
            <summary>
            Gets or sets the user's first name and last name for the UserData object. This is for the UserData object.
            </summary>
            <value></value>
            <returns>User's first name and last name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Password">
            <summary>
            Gets or sets the user's password for the UserData object. Note: when updating a user, if 
            you do not wish to update the user's password, leave the UserData.Password property blank.
            </summary>
            <value></value>
            <returns>The user's password.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.DisplayName">
            <summary>
            Gets or sets the user's display alias for the UserData object, used in the forums and other locations.
            </summary>
            <value></value>
            <returns>User's display alias, used in the forums and other locations.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Email">
            <summary>
            Gets or sets the user's email address for the UserData object.
            </summary>
            <value></value>
            <returns>The user's email address.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Address">
            <summary>
            Gets or sets the user's address for the UserData object.
            </summary>
            <value></value>
            <returns>The user's address.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Latitude">
            <summary>
            Gets or sets the user's address latidue for the UserData object.
            </summary>
            <value></value>
            <returns>The user's address latitude.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserBaseData.Longitude">
            <summary>
            Gets or sets the user's address longitude for the UserData object.
            </summary>
            <value></value>
            <returns>The user's address longitude.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.User.IUser.IsCmsLoggedIn">
            <summary>
            Check user logged In or Not by database call.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Ektron.Cms.User.UserProperty">
            <summary>
            Enumeration used for filtering user lists using UserCriteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Avatar">
            <summary>
            Avatar (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Id">
            <summary>
            User Id (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.UserName">
            <summary>
            User Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.FirstName">
            <summary>
            User's first name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.LastName">
            <summary>
            User's last name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Domain">
            <summary>
            Domain (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.DisplayUserName">
            <summary>
            Display User Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.DisplayName">
            <summary>
            Display Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Email">
            <summary>
            Email address (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Address">
            <summary>
            User's Address (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Latitude">
            <summary>
            Latitude (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Longitude">
            <summary>
            Longitude (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.LoginAttempts">
            <summary>
            Login Attempts (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.DateCreated">
            <summary>
            Date Created (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.LastLoginDate">
            <summary>
            Last Login Date (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Path">
            <summary>
            Path (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.Signature">
            <summary>
            Signature (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.AcceptedTerms">
            <summary>
            Accepted Terms (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.IsMemberShip">
            <summary>
            Is membership user flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.LoginIdentification">
            <summary>
            Login Identification (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.LanguageId">
            <summary>
            Language Id (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.IsDisableMessage">
            <summary>
            Is Disabled Message Flag (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.EditorOption">
            <summary>
            Editor Option (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.AuthGuid">
            <summary>
            Authentitcation Guid (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.AuthenticationTypeId">
            <summary>
            AuthenticationTypeId (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.AuthenticationUserId">
            <summary>
            AuthenticationUserId (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.IsDeleted">
            <summary>
            Is deleted Flag (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.VerifyGuid">
            <summary>
            For email verification on membership users.
            </summary>
        </member>
        <member name="F:Ektron.Cms.User.UserProperty.IsActivated">
            <summary>
            Used to find membership users who have registered but have not been activated.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserCriteria">
            <summary>
            Criteria class for retreiving Users.
            </summary>
        </member>
        <member name="P:Ektron.Cms.User.UserCriteria.ReturnCustomProperties">
            <summary>
            Gets or sets the ReturnCustomProperties flag.  If true, each user'c ustom properties will also be returned with results.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserData">
            <summary>
            A data object that contains the properties that make up a user. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.UserData.GetUserAttributes">
            <summary>
            Gets all custom attributes for this user
            </summary>
            <returns>a list custom attributes</returns>
        </member>
        <member name="M:Ektron.Cms.UserData.IsAccountLocked(Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Gets a flag that indicates whether this account is locked or not
            </summary>
            <param name="reqInfo">EkRequestInformation instance</param>
            <returns>true when account is locked, false when not</returns>
        </member>
        <member name="M:Ektron.Cms.UserData.CustomAttribute(System.String)">
            <summary>
            Gets a customAttribute instance by name
            </summary>
            <param name="sName">Name to be found on the user's custom attribute list</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserData.Add(System.String)">
            <summary>
            Adds a custom attribute by name
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:Ektron.Cms.UserData.GetCustomAtrributes">
            <summary>
            Gets Custom attributes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserData.PasswordExpired(System.Int32)">
            <summary>
            Gets a boolean representing if the user's password would expire given a certain amount of days 
            from today's date
            </summary>
            <param name="expirationPeriodInDays">Amount of days to add to current date</param>
            <returns>True when password expired, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.UserData.Validate">
            <summary>
            Validate this instance's data
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.UserData.SessionId">
            <summary>
            Gets the users current session Id.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.LoginAttempts">
            <summary>
            Gets an Int16 representing the number of times a user has attempted to login for the 
            UserData object. This number resets to 0 (zero) once a user successfully logs in.
            </summary>
            <value></value>
            <returns>Int16 representing the number of times a user has attempted to login. This 
            number resets to 0 (zero) once a user successfully logs in.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.DateCreated">
            <summary>
            Gets or sets the creation date of a user. This is for the UserData object.
            </summary>
            <value></value>
            <returns>The date the user was created.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.DateModified">
            <summary>
            Gets the last modified date of a user. This is for the UserData object.
            </summary>
            <value></value>
            <returns>The date the user was last modified.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.LastLoginDate">
            <summary>
            Gets or sets the last date a user logged into CMS400.NET. This is for the 
            UserData object. 
            </summary>
            <value></value>
            <returns>The last login date for a user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.LastPasswordChangeDate">
            <summary>
            Gets or sets the last date a user changed their password.
            </summary>
            <value></value>
            <returns>The last login date for a user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.Path">
            <summary>
            /// <b>The Path property is no longer valid.</b><para></para>
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.AuthGuid">
            <summary>
            <b>The AuthGuid property is no longer valid.</b><para></para>
            When using a non CMS authentication method, the guid of the user in that system.
            Example: Active Directory objectGuid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.Signature">
            <summary>
            Gets or sets the user's signature for the UserData object, used in the forums and other locations.
            </summary>
            <value></value>
            <returns>The user's signature used in the forums and other locations.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.AcceptedTerms">
            <summary>
            Gets or set whether the user has accepted the Terms and Conditions associated with a Threaded Discussion.
            This is for the UserData object.
            </summary>
            <value></value>
            <returns>A boolean indicating whether the user has accepted the Terms and Conditions associated with a Threaded Discussion.
            * <b>True</b> = user has accepted Terms and Conditions.
            * <b>False</b> = user has not accepted Terms and Conditions.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.UserPreference">
            <summary>
            Gets or sets a user's preferences as UserPreferenceData for the UserData object. 
            </summary>
            <value></value>
            <returns>A user's preferences as UserPreferenceData.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.IsMemberShip">
            <summary>
            Gets or sets a boolean indicating whether the user is a Membership user or not. 
            This is for UserData object.
            </summary>
            <value></value>
            <returns>A boolean indicating whether the user is a Membership user.
            * <b>True</b> = user is a Membership user.
            * <b>False</b> = user is a CMS400.NET user.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.LoginIdentification">
            <summary>
            Gets or sets a unique login ID 
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.LanguageName">
            <summary>
            Gets the name of the user's language for the UserData object.
            </summary>
            <value></value>
            <returns>Name of the user's language.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.LanguageId">
            <summary>
            Gets or sets the integer ID of the language for the UserData object.
            </summary>
            <value></value>
            <returns>The integer ID of the language.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.IsDisableMessage">
            <summary>
            Gets or sets a flag that indicates whether messaging is enabled or disabled for this user
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.IsDeleted">
            <summary>
            Gets or sets a boolean flag that indicates if the user was deleted or not
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.EditorOption">
            <summary>
            Represents the content editor type configured on this user
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.AdUserName">
            <summary>
            <b>The GroupId property is no longer valid.</b><para></para>
            Gets or sets the Active Directory user name for the UserData object.
            </summary>
            <value></value>
            <returns>The Active Directory user name.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.GroupId">
            <summary>
            <b>The GroupId property is no longer valid. To retrieve a list of groups this User belongs to use Ektron.Cms.API.User.GetAllUserGroups() function.</b><para></para>
            Gets or sets the numeruc ID (Long) of the group to which the user belongs. This is for the UserData object.
            </summary>
            <value></value>
            <returns>The group ID to which the user belongs.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.GroupName">
            <summary>
            <b>The GroupName property is no longer valid. To retrieve a list of groups this User belongs to use Ektron.Cms.API.User.GetAllUserGroups() function.</b><para></para>
            Gets or sets the name of the group to which the user belongs. This is for the UserData object.
            </summary>
            <value></value>
            <returns>The name of the group to which the user belongs.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.Rank">
            <summary>
            Gets or sets the user's rank for a Threaded Discussion for the UserData object.
            </summary>
            <value></value>
            <returns>The user's rank for a Threaded Discussion.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserData.AuthenticationTypeId">
            <summary>
            Gets or sets the ID of the authentication type this user uses to authenticate against for the CMS. 
            For example, EkEnumeration.UserAuthenticationType.Facebook is used for integrated facebook authentication.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.UserData.AuthenticationUserId">
            <summary>
            Gets or sets the id associated with this user in the third party authentication process.
            For Example, when AuthenticationTypeId is EkEnumeration.UserAuthenticationType.Facebook, AuthenticationUserId would be the user's Facebook User Id.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.UserData.AuthenticationToken">
            <summary>
            Gets or sets the authentication token assigned to this user for non-logged-in authentication purposes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.AuthenticationTokenExpires">
            <summary>
            Gets or sets the datetime when the current authentication token expires.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.CustomProperties">
            <summary>
            Gets the current users list of custom properties.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserData.AttributeList">
            <summary>
            Gets custom attribute list as array
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserRequestData">
            <summary>
            A data object that contains request information for users.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.Type">
            <summary>
            Differentiates request between Cms Users and Membership users.
            * <b>0</b> = to retrieve CMS400.NET users.
            * <b>1</b> = to retrieve Membership users.
            * <b>-1</b> = to retrieve all users.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.Group">
            <summary>
            ID of User Group to retrieve users from. For example, set Group = 1 to retrieve only users that are members of group ID 1. 
            Leave as -1 to retrieve users from all groups.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.RequiredFlag">
            <summary>
            Determines whether or not to retrieve deleted users.
            * <b>0</b> = to retrieve active users.
            * <b>1</b> = to retrieve deleted users.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.OrderBy">
            <summary>
            Sets the column by which the resultset is ordered. Possible values include:
            * <b>user_id</b>
            * <b>user_name</b>
            * <b>first_name</b>
            * <b>last_name</b>
            * <b>language</b>
            * <b>email_address1</b>
            The default sort is <b>last_name</b>.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.SearchText">
            <summary>
            Possible search rules to apply to results using SQL syntax. For example, last_name = 'Jones'. 
            Possible columns include:
            * <b>user_id</b>
            * <b>user_name</b>
            * <b>first_name</b>
            * <b>last_name</b>
            * <b>language</b>
            * <b>email_address1</b>
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserRequestData.OrderDirection">
            <summary>
            Sets the order by which to sort the OrderBy column. Possible values are:
            * <b>ASC</b>
            * <b>DESC</b> 
            <b>ASC</b> is the default value.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.CommunityUserData">
            <summary>
            UserData object plus Community related properties.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.CommunityUserData.Tags">
             <summary>
             Gets a Comma delimitted list of tags applied to the user.
             Editing this list does not affect tags on user. Tags must be added to User though the Tag API.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserLocationData">
            <summary>
            User Location Data
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserLocationData.Distance(Ektron.Cms.UserLocationData)">
            <summary>
            Calculates distance
            </summary>
            <param name="loc">Location</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.CountryCode">
            <summary>
            Country Code
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.CountryName">
            <summary>
            Country Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.PostalCode">
            <summary>
            Postal Code
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.Organization">
            <summary>
            Organization
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.Domain">
            <summary>
            Domain
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.DMACode">
            <summary>
            Dma Code
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.AreaCode">
            <summary>
            Area Code
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.RegionName">
            <summary>
            Region Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserLocationData.MetroCode">
            <summary>
            Metro code
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserOrganizationData">
            <summary>
            User Organization Data
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.PhoneNumber">
            <summary>
            Phone Number
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.FaxNumber">
            <summary>
            Fax number
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.CompanyType">
            <summary>
            Company Type
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.Industry">
            <summary>
            Industry
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.Employees">
            <summary>
            Employees
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.Revenue">
            <summary>
            Revenue
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserOrganizationData.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserReferrerData">
            <summary>
            User Refferrer Data
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserReferrerData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserReferrerData.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="url"></param>
        </member>
        <member name="P:Ektron.Cms.UserReferrerData.Url">
            <summary>
            Url Property
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserReferrerData.IsFromSearchEngine">
            <summary>
            Is From Search Engine Property
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserReferrerData.SearchEngineType">
            <summary>
            Search Engine Type Property
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserReferrerData.SearchTerms">
            <summary>
            Search Terms property
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserReferrerData.Host">
            <summary>
            Returns the site of the referrer, example www.ektron.com.
            </summary>
            <returns>A string of the referrer site.</returns>
        </member>
        <member name="T:Ektron.Cms.UserGroupCriteria">
            <summary>
            User Group Criteria
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserGroupCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserGroupCriteria.#ctor(Ektron.Cms.Common.UserGroupProperty,Ektron.Cms.Common.EkEnumeration.OrderByDirection)">
            <summary>
            Constructor
            </summary>
            <param name="orderByField"></param>
            <param name="orderByDirection"></param>
        </member>
        <member name="T:Ektron.Cms.UserGroupData">
            <summary>
            A data object that contains the properties that make up a CMS UserGroup. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserGroupData.Id">
            <summary> 
            Gets or sets the Id of the UserGroup for the UserGroupData object. 
            </summary> 
            <value></value> 
            <returns>The UserGroup's long Id.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.UserGroupData.GroupName">
            <summary> 
            Gets or sets the name of the UserGroup for the UserGroupData object. 
            </summary> 
            <value></value> 
            <returns>The UserGroup's name.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.UserGroupData.UserGroupDescription">
            <summary>
            Gets or sets the user group description
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserGroupData.Domain">
            <summary> 
            Gets or sets the domain of the UserGroup for the UserGroupData object. 
            </summary> 
            <value></value> 
            <returns>The UserGroup's domain.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.UserGroupData.Name">
            <summary> 
            Gets or sets the name of the UserGroup for the UserGroupData object. 
            </summary> 
            <value></value> 
            <returns>The UserGroup's name.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.UserGroupData.GroupPath">
            <summary> 
            Gets or sets the path of the UserGroup for the UserGroupData object. 
            </summary> 
            <value></value> 
            <returns>The UserGroup's Path.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserGroupData.GroupType">
            <summary>
            Gets or sets the Group Type, CMSGroup,MembershipGroup,CommunityGroup,or FriendGroup
            </summary>
            <value></value>
            <returns>Group Type Integer</returns>
            <remarks>Use the UserGroupProperty.GroupType for conversion and lookup.</remarks>
        </member>
        <member name="P:Ektron.Cms.UserGroupData.IsMemberShipGroup">
            <summary> 
            Gets or sets whether the UserGroup for the UserGroupData object is a CMS UserGroup or a Membership group. <para></para> 
            <b>True</b> = UserGroup for the UserGroupData object is a Membership group.<para></para> 
            <b>False</b> = UserGroup for the UserGroupData object is a CMS UserGroup. 
            </summary> 
            <value></value> 
            <returns>Returns true if UserGroupData object is a Membership group. Otherwise, returns false.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UserGroupData.GroupDisplayName">
            <summary> 
            Gets or sets the UserGroup display name for the UserGroupData object. <para></para> 
            </summary> 
            <value></value> 
            <returns>The UserGroup's Display Name.</returns> 
        </member>
        <member name="P:Ektron.Cms.UserGroupData.UserCount">
            <summary> 
            Gets or sets the number of users in the UserGroup for the UserGroupData object. <para></para> 
            </summary> 
            <value></value> 
            <returns>Returns the number of users in the UserGroup for the UserGroupData object.</returns> 
            <remarks></remarks> 
        </member>
        <member name="T:Ektron.Cms.User.UserCustomPropertyProperties">
            <summary>
            Enum defining properties for UserCustomProperty.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserCustomPropertyFilter">
            <summary>
            Specialized criteria filter object for defining User Custom Property filters for retreiving Users.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserCustomPropertyFilterGroup">
            <summary>
            Specialized criteria filter group object for defining user custom property filters for retreiving content.
            </summary>
        </member>
        <member name="M:Ektron.Cms.User.UserCustomPropertyFilterGroup.CreateFilterGroup(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Creates a UserCustomPropertyFilterGroup using the supplied user custom property Type name and operator\values.
            </summary>
            <param name="propertyName"></param>
            <param name="filterOperator"></param>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.User.UserCustomPropertyFilterGroup.CreateFilterGroup(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Creates a UserCustomPropertyFilterGroup using the supplied Custom Property Id and operator\values.
            </summary>
            <param name="propertyId"></param>
            <param name="filterOperator"></param>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.User.UserCustomPropertyCriteria">
            <summary>
            User Criteria object that also supports defining filters based on User Custom Properties
            </summary>
        </member>
        <member name="M:Ektron.Cms.User.UserCustomPropertyCriteria.AddFilter(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Custom property based filter to the criteria object.
            </summary>
            <param name="propertyName">Name of custom property type to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the custom property.</param>
            <returns>The UserCustomPropertyFilterGroup that was created.</returns>
        </member>
        <member name="M:Ektron.Cms.User.UserCustomPropertyCriteria.AddFilter(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Custom property based filter to the criteria object.
            </summary>
            <param name="propertyId">Id of custom property type to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the custom property.</param>
            <returns>The UserCustomPropertyFilterGroup that was created.</returns>
        </member>
        <member name="T:Ektron.Cms.User.UserTaxonomyProperty">
            <summary>
            Enum defining properties for UserTaxonomyCriteria.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserTaxonomyFilter">
            <summary>
            Specialized criteria filter object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserTaxonomyFilterGroup">
            <summary>
            Specialized criteria filter group object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.User.UserTaxonomyCriteria">
            <summary>
            Specialized content criteria object that also supports defining filters based on content taxonomy.
            </summary> 
        </member>
    </members>
</doc>
